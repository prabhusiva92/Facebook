<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/</description>
	<atom:link rel="self" href="http://planeteclipse.org/rss20.xml" type="application/rss+xml"/>

<item>
	<title>Donald Raab: Exploring the Smalltalk Collections API in unit tests using Pharo 8.0</title>
	<guid isPermaLink="false">https://medium.com/p/2f62cfc8410d</guid>
	<link>https://donraab.medium.com/exploring-the-smalltalk-collections-api-in-unit-tests-using-pharo-8-0-2f62cfc8410d?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Learn a little Smalltalk, and you might thank yourself later.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/953/1*J2QSbMjdOQ1s_fx-csKUow.png&quot; /&gt;&lt;figcaption&gt;&lt;a href=&quot;https://pharo.org/&quot;&gt;https://pharo.org/&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;A Little Smalltalk for the Holidays&lt;/h3&gt;&lt;p&gt;I wanted to write a blog for the holidays to meet my commitment of writing one blog per month. I had some experiments I had written using &lt;a href=&quot;https://pharo.org/&quot;&gt;Pharo 8.0&lt;/a&gt; that I decided to organize into individual tests so I could blog about them. The experiments were a Smalltalk port of the methods I had written about in the following blog about &lt;a href=&quot;https://github.com/donraab/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/my-25-favorite-eclipse-collections-apis-a51589ee5c4a&quot;&gt;My 25 favorite methods from the Eclipse Collections API&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The Smalltalk Collections API is amazing. I didn’t realize how amazing the Smalltalk Collections framework was until I started programming in Java. The absence of a rich collections API made me long for Smalltalk in my early days as a Java programmer. Smalltalk can help you become a better programmer in any programming language you code in. At least, this has been my personal experience. Learning Smalltalk in 1994 prepared me for the eventual inclusion of lambdas and Streams in Java, nearly twenty years later when they were released in Java 8 (2014).&lt;/p&gt;&lt;h3&gt;Learn Smalltalk in Y minutes&lt;/h3&gt;&lt;p&gt;For a quick intro to Smalltalk syntax and methods, check out the following link.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://learnxinyminutes.com/docs/smalltalk/&quot;&gt;Learn X in Y minutes Where X=Smalltalk&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Syntax used in the examples&lt;/h4&gt;&lt;p&gt;In the examples in this blog I will use temporary variables ( | variable1 variable2 |), assignment operator (:=), statement ending (.), unary messages (e.g. new, isEmpty, asBag) , binary messages (e.g. , and =), keyword messages (e.g. with:, select:, inject:into:, assert:equals:, etc.), a reserved word (self), String literals (e.g. ‘banana’), Character literals (e.g. $a, $b, $c), SmallInteger literals (e.g. 5, 3, 2), and code blocks([ :parameter | expression ]). Code blocks are the equivalent of lambdas in Java, and are full lexical &lt;a href=&quot;https://en.wikipedia.org/wiki/Closure_(computer_programming)&quot;&gt;closures&lt;/a&gt; that have a single type in Smalltalk (BlockClosure in Pharo).&lt;/p&gt;&lt;h4&gt;Object-Oriented Basics&lt;/h4&gt;&lt;p&gt;This is what it looks like creating temporary variables, instantiating objects and calling methods on objects in both Java and Smalltalk with assignment.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Java:&lt;/em&gt;&lt;/p&gt;&lt;pre&gt;Object param1, param2, param3;&lt;/pre&gt;&lt;pre&gt;SomeClass object = new SomeClass();&lt;br /&gt;Object result1 = object.method();&lt;br /&gt;Object result2 = object.withOne(param1);&lt;br /&gt;Object result3 = object.withOneTwo(param1, param2);&lt;br /&gt;Object result4 = object.withOneTwoThree(param1, param2, param3);&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Smalltalk:&lt;/em&gt;&lt;/p&gt;&lt;pre&gt;| object param1 param2 param3 result1 result2 result3 result4 |&lt;/pre&gt;&lt;pre&gt;object := SomeClass new.&lt;br /&gt;result1 := object method.&lt;br /&gt;result2 := object withOne: param1.&lt;br /&gt;result3 := object withOne: param1 two: param2.&lt;br /&gt;result4 := object withOne: param1 two: param2 three: param3.&lt;/pre&gt;&lt;h3&gt;Smalltalk Collection methods covered in this blog&lt;/h3&gt;&lt;p&gt;The following are the iteration patterns I will cover in this blog. I decided to keep it limited to a set of basic patterns. The full source for all examples is &lt;a href=&quot;https://medium.com/feed/@donraab#bfef&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#4f1e&quot;&gt;select:&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#c773&quot;&gt;reject:&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#d249&quot;&gt;collect:&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#318c&quot;&gt;flatCollect:&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#c2fa&quot;&gt;detect: / &lt;/a&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#c2fa&quot;&gt;detect:ifNone:&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#7460&quot;&gt;inject:into:&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#21c2&quot;&gt;groupedBy:&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#3b2a&quot;&gt;anySatisfy: / &lt;/a&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#3b2a&quot;&gt;allSatisfy: / &lt;/a&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#3b2a&quot;&gt;noneSatisfy:&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/feed/@donraab#9f5e&quot;&gt;count:&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The following are additional methods I used in the tests.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;,&lt;/li&gt;&lt;li&gt;=&lt;/li&gt;&lt;li&gt;asBag&lt;/li&gt;&lt;li&gt;assert: / assert:equals: / deny:&lt;/li&gt;&lt;li&gt;asUppercase&lt;/li&gt;&lt;li&gt;first&lt;/li&gt;&lt;li&gt;includes:&lt;/li&gt;&lt;li&gt;ifTrue:ifFalse:&lt;/li&gt;&lt;li&gt;isEmpty&lt;/li&gt;&lt;li&gt;newFromKeys:andValues:&lt;/li&gt;&lt;li&gt;occurrencesOf:&lt;/li&gt;&lt;li&gt;with:&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The following are the data structures I used in the tests.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Bag&lt;/li&gt;&lt;li&gt;OrderedCollection&lt;/li&gt;&lt;li&gt;OrderedDictionary&lt;/li&gt;&lt;li&gt;Set&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Smalltalk Iteration Patterns&lt;/h3&gt;&lt;h4&gt;Select&lt;/h4&gt;&lt;p&gt;The method select: can be used to a filter a collection inclusively. The method takes a one-argument block that returns a Boolean (aka Predicate).&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*3nKhRRpBLHcGdAlaz-ZFIQ.png&quot; /&gt;&lt;figcaption&gt;Filtering fruit using the select: method&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Reject&lt;/h4&gt;&lt;p&gt;The method reject: can be used to a filter a collection exclusively. The method takes a one-argument block that returns a Boolean (aka Predicate).&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*UVBrd1d0d6izgHO_knAI0g.png&quot; /&gt;&lt;figcaption&gt;Filtering fruit using the reject: method&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Collect&lt;/h4&gt;&lt;p&gt;The method collect: can be used to transform a collection. The method takes a one-argument block that returns any type (aka Function).&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*Z0WygUfWGXRPBMYFS2LT5w.png&quot; /&gt;&lt;figcaption&gt;Transforming fruit using the collect: method&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;FlatCollect&lt;/h4&gt;&lt;p&gt;The method flatCollect: can be used to flatten and transform a collection. The method takes a one-argument block that returns a Collection (aka Function). In Smalltalk, a String is a Collection. The flatCollect: method on a String flattens the Character instances into a Collection. I convert the characters to a Bag using asBag so I can use the occurrencesOf: method to test the count of each character.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*qoA9iu_1fA5JOqacChZi2g.png&quot; /&gt;&lt;figcaption&gt;Flattening the characters in fruit using the flatCollect: method&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Detect / DetectIfNone&lt;/h4&gt;&lt;p&gt;The methods detect: and detect:ifNone: can be used to find the first object that matches a condition. The detect: method takes a one-argument block that returns a Boolean (aka Predicate). The detect:ifNone: method additionally takes a second zero-argument block as a second parameter that is evaluated and the result returned in the case that no element matches the condition of the first block.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*pP9L91YETL60YoJtAHgLkA.png&quot; /&gt;&lt;figcaption&gt;Finding the fruit that starts with a letter using detect: and detect:ifNone:&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;InjectInto&lt;/h4&gt;&lt;p&gt;The method inject:into: injects an initial value into an iteration over a Collection, and some result of each iteration is injected into the next iteration and so on and so forth. This method is usually used to implement methods like sum, min, max, etc. The method inject:into: is one of the most general, flexible and powerful of the iteration patterns in Smalltalk. In the following example, I inject an empty String into a iteration, and the result of each iteration is a concatenation of the injected String with a comma and each element. The only element that is not concatenated with a comma is the first one.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*r4A05c90cGgEVTBBcqa_uA.png&quot; /&gt;&lt;figcaption&gt;Concatenating the fruit in a collection using inject:into:&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;GroupedBy&lt;/h4&gt;&lt;p&gt;The method groupedBy: iterates over a Collection and groups the elements in a Dictionary containing collections of the same type where the keys are derived by applying a function to each element. The groupedBy: method takes a one-argument block that returns any type (aka Function).&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*unhgQX9NOfO6ikW0Ab69HQ.png&quot; /&gt;&lt;figcaption&gt;The method groupedBy: used to group fruit by the first character&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;AnySatisfy / AllSatisfy / NoneSatisfy&lt;/h4&gt;&lt;p&gt;The methods anySatisfy:, allSatisfy: and noneSatisfy: test a collection to see if a certain condition is met and returns a Boolean result. All three methods take a one-argument block as a parameter. The block returns a Boolean (aka Predicate). Each of these methods will short-circuit if the Boolean result of the Predicate is the opposite of what is expected for the method.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*EKgaVl_hDBdtKDVZrzrhWA.png&quot; /&gt;&lt;figcaption&gt;Examples of the method anySatisfy:&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*8DnESq9E_Z_6pOepGPTD5A.png&quot; /&gt;&lt;figcaption&gt;Examples of the method allSatisfy:&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*7xAnR2oV8w1bf9s8iyaXBw.png&quot; /&gt;&lt;figcaption&gt;Examples of the method noneSatisfy:&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Count&lt;/h4&gt;&lt;p&gt;The method count: returns the count of the number of elements that match a given condition. The count: method takes a one-argument block that returns a Boolean (aka Predicate).&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*fRrlScS66A-1dMdvJZDx3A.png&quot; /&gt;&lt;figcaption&gt;Count all the bananas and fruit that contains the letter $a&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;The Source&lt;/h3&gt;&lt;p&gt;Here’s a link to a gist with the source code in the examples above. Enjoy!&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/abdbb868ea5c6252e24f0b4463c9bc26/href&quot;&gt;https://medium.com/media/abdbb868ea5c6252e24f0b4463c9bc26/href&lt;/a&gt;&lt;h3&gt;That’s all folks!&lt;/h3&gt;&lt;p&gt;Thank you for reading! I hope you enjoyed my trip down Smalltalk memory lane. If you’re bored this holiday season with everything getting locked down due to the pandemic, then maybe give yourself the gift of a little Smalltalk learning. The syntax will be different than what you are used to, but if you learn it, you will understand why Smalltalk developers prefer it to curly brace and parentheses languages.&lt;/p&gt;&lt;p&gt;I hope you have a safe, happy and healthy holiday! Hug your loved ones, take care of your family and yourself.&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=2f62cfc8410d&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 31 Dec 2021 05:30:38 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: RHAMT Eclipse Plugin 4.0.0.Final has been released!</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/windup_4.0.0.ga_release.html</guid>
	<link>https://tools.jboss.org/blog/windup_4.0.0.ga_release.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We are happy to announce the latest release of the Red Hat Application Migration Toolkit (RHAMT) Eclipse Plugin.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;getting-started&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#getting-started&quot;&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is now available through JBoss Central, and from the update site &lt;a href=&quot;http://download.jboss.org/jbosstools/oxygen/stable/updates/rhamt/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-rhamt&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-rhamt&quot;&gt;&lt;/a&gt;What is RHAMT?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;RHAMT is an automated application migration and assessment tool.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Example ways to RHAMT up your code:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Moving your application from WebLogic to EAP, or WebSphere to EAP&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Version upgrade from Hibernate 3 to Hibernate 4, or EAP 6 to EAP 7&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Change UI technologies from Seam 2 to pure JSF 2.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;An example of how to run the RHAMT CLI:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;code&gt;$ ./rhamt-cli --input /path/to/jee-example-app-1.0.0.ear --output /path/to/output --source weblogic --target eap:7&lt;/code&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The output is a report used to assess and prioritize migration and modernization efforts.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;the-rhamt-eclipse-plugin-what-does-it-do&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#the-rhamt-eclipse-plugin-what-does-it-do&quot;&gt;&lt;/a&gt;The RHAMT Eclipse Plugin - What does it do?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Consider an application migration comprised of thousands of files, with a myriad of small changes, not to mention the tediousness of switching between
       the report and your IDE. Who wants to be the engineer assigned to that task? :)
      Instead, this tooling marks the source files containing issues, making it easy to organize, search, and in many cases automatically fix issues using quick fixes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let me give you a quick walkthrough.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ruleset-wizard&quot;&gt;&lt;/a&gt;Ruleset Wizard&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We now have quickstart template code generators.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Rueset Wizard&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/ruleset_wizard.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;rule-creation-from-code&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#rule-creation-from-code&quot;&gt;&lt;/a&gt;Rule Creation From Code&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have also added rule generators for selected snippets of code.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Rule Generation From Source&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/type_implements.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-graphical-editor&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ruleset-graphical-editor&quot;&gt;&lt;/a&gt;Ruleset Graphical Editor&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Ruleset navigation and editing is faster and more intuitive thanks to the new graphical editor.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Graphical Editor&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/ruleset_editor.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-view&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ruleset-view&quot;&gt;&lt;/a&gt;Ruleset View&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have created a view dedicated to the management of rulesets. Default rulesets shipped with RHAMT can now be opened, edited, and referenced while authoring
      your own custom rulesets.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Ruleset View&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/ruleset_view.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;run-configuration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#run-configuration&quot;&gt;&lt;/a&gt;Run Configuration&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Eclipse plugin interacts with the RHAMT CLI process, thereby making it possible to specify command line options and custom rulesets.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Run Configuration&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/run_configuration.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-submission&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ruleset-submission&quot;&gt;&lt;/a&gt;Ruleset Submission&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Lastly, contribute your custom rulesets back to the community from within the IDE.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Ruleset Submission&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/ruleset_submission.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more detailed information &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Our goal is to make the RHAMT tooling easy to use. We look forward to your feedback and comments!&lt;br /&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Have fun!&lt;br /&gt;
      John Steele&lt;br /&gt;
      &lt;a href=&quot;https://github.com/johnsteele/&quot;&gt;github/johnsteele&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: We are hiring</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/we-are-hiring - again.html</guid>
	<link>https://tools.jboss.org/blog/we-are-hiring - again.html</link>
	<description>&lt;div&gt;&lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Developer Experience and Tooling group, of which JBoss Tools team is part,
      is looking for an awesome developer. We are looking to continue
      improving the usability for developers around various IDEs including Eclipse, VSCode and IntelliJ and around the Red Hat product line, including JBoss Middleware.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Topics range from Java to JavaScript, application servers to containers, source code tinkering to full blown CI/CD setups.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you are into making developers life easier and like to be able to get involved in many different technologies and get them to work great together then do apply.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can also ping me (&lt;a href=&quot;mailto:jeffmaury@redhat.com&quot;&gt;jeffmaury@redhat.com&lt;/a&gt;) for questions.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The current list of openings are:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://global-redhat.icims.com/jobs/66514/software-engineer---jboss-and-openshift-tooling/job&quot;&gt;Sofware engineer&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Note: the job postings do list a specific location, but for the right candidate we are happy to consider many locations worldwide (anywhere there is a Red Hat office), as well as working from home.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Have fun!&lt;br /&gt;
      Jeff Maury&lt;br /&gt;
      &lt;a href=&quot;http://twitter.com/jeffmaury&quot;&gt;@jeffmaury&lt;/a&gt;
      &lt;a href=&quot;http://twitter.com/jbosstools&quot;&gt;@jbosstools&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: RHAMT Eclipse Plugin 4.1.0.Final has been released!</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/rhamt_4.1.0.Final_release.html</guid>
	<link>https://tools.jboss.org/blog/rhamt_4.1.0.Final_release.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce version 4.1.0.Final of the Red Hat Application Migration Toolkit (RHAMT) is now available.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;getting-started&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#getting-started&quot;&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available through JBoss Central and from the &lt;a href=&quot;http://download.jboss.org/jbosstools/photon/stable/updates/rhamt/&quot;&gt;update site&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;rhamt-in-a-nutshel&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#rhamt-in-a-nutshel&quot;&gt;&lt;/a&gt;RHAMT in a Nutshel&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;RHAMT is an application migration and assessment tool. The migrations supported include application platform upgrades,
      migrations to a cloud-native deployment environment, and also migrations from several commercial products to the
      Red Hat JBoss Enterprise Application Platform.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-photon&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-photon&quot;&gt;&lt;/a&gt;Eclipse Photon&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The tooling now targets Eclipse Photon.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Photon&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/4_1_0_final/eclipse_photon.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;ignoring-patterns&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ignoring-patterns&quot;&gt;&lt;/a&gt;Ignoring Patterns&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Specify locations of files to exclude from analysis (using regular expressions).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Ignore Patterns&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/4_1_0_final/ignore_pattern.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;external-report&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#external-report&quot;&gt;&lt;/a&gt;External Report&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The generated report has been moved out of Eclipse and into the browser.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Report View&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/4_1_0_final/report_browser.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-ruleset-schema&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improved-ruleset-schema&quot;&gt;&lt;/a&gt;Improved Ruleset Schema&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The XML ruleset schema has been relaxed providing flexible rule structures.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Schema&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/4_1_0_final/ruleset_source.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;custom-severities&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#custom-severities&quot;&gt;&lt;/a&gt;Custom Severities&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Custom severities are now included in the Issue Explorer.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Custom Category&quot; src=&quot;https://tools.jboss.org/blog/images/rhamt/4_1_0_final/custom_category.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;stability&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#stability&quot;&gt;&lt;/a&gt;Stability&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A good amount of time has been spent on ensuring the tooling functions consistently across Windows, OSX, and Linux.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more detailed information &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Our goal is to make the RHAMT tooling easy to use. We look forward to your feedback and comments!&lt;br /&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Have fun!&lt;br /&gt;
      John Steele&lt;br /&gt;
      &lt;a href=&quot;https://github.com/johnsteele/&quot;&gt;github/johnsteele&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: Quarkus</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/quarkus.html</guid>
	<link>https://tools.jboss.org/blog/quarkus.html</link>
	<description>&lt;div&gt;&lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Youâ€™ve probably heard about &lt;a href=&quot;https://quarkus.io&quot;&gt;Quarkus&lt;/a&gt;, the Supersonic Subatomic Java framework tailored for Kubernetes and containers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We wrote an article on how to create your first Quarkus project in an Eclipse based IDE (like &lt;a href=&quot;https://developers.redhat.com/products/codeready-studio/overview&quot;&gt;Red Hat CodeReady Studio&lt;/a&gt;).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can read it at &lt;a class=&quot;bare&quot; href=&quot;https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/&quot;&gt;https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: Integration Tooling for Eclipse Photon</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/integration-stack-4.6.0.Final.html</guid>
	<link>https://tools.jboss.org/blog/integration-stack-4.6.0.Final.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Try our leaner, complete Eclipse Photon and Red Hat Developer Studio 12 compatible integration tooling.&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;devstudio12&quot; src=&quot;https://tools.jboss.org/blog/images/devstudio12.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;JBoss Tools Integration Stack 4.6.0.Final / Red Hat Developer Studio Integration Stack 12.0.0.GA&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock note&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      All of the Integration Stack components have been verified to work with the same dependencies as JBoss Tools 4.6 and Red Hat Developer Studio 12.
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-new-for-this-release&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-new-for-this-release&quot;&gt;&lt;/a&gt;What’s new for this release?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This is the initial release in support of Eclipse Photon.  It syncs up with Developer Studio 12.0.0, JBoss Tools 4.6.0 and Eclipse 4.8.0 (Photon).  It is also a maintenance release for Teiid Designer and BRMS tooling.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;released-tooling-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#released-tooling-highlights&quot;&gt;&lt;/a&gt;Released Tooling Highlights&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;business-process-and-rules-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#business-process-and-rules-development&quot;&gt;&lt;/a&gt;Business Process and Rules Development&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;bpmn2-modeler-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#bpmn2-modeler-known-issues&quot;&gt;&lt;/a&gt;BPMN2 Modeler Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/12.0/html/12.0.0_release_notes_and_known_issues/resolved_issues#bpmn2_1_5_0_final&quot;&gt;BPMN2 1.5.0.Final Known Issues Section&lt;/a&gt; of the Integration Stack 12.0.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;drools-jbpm6-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#drools-jbpm6-known-issues&quot;&gt;&lt;/a&gt;Drools/jBPM6 Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/12.0/html/12.0.0_release_notes_and_known_issues/resolved_issues#drools_7_8_0_final&quot;&gt;Drools 7.8.0.Final Known Issues Section&lt;/a&gt; of the Integration Stack 12.0.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;data-virtualization-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#data-virtualization-highlights&quot;&gt;&lt;/a&gt;Data Virtualization Highlights&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;teiid-designer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#teiid-designer&quot;&gt;&lt;/a&gt;Teiid Designer&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/12.0/html/12.0.0_release_notes_and_known_issues/resolved_issues#teiid_designer_11_2_0_final&quot;&gt;Teiid Designer 11.2.0.Final Resolved Issues Section&lt;/a&gt; of the Integration Stack 12.0.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-an-integration-stack&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-an-integration-stack&quot;&gt;&lt;/a&gt;What’s an Integration Stack?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Red Hat Developer Studio Integration Stack is a set of Eclipse-based development tools. It further enhances the IDE functionality provided by Developer Studio, with plug-ins specifically for use when developing for other Red Hat products.  It’s where DataVirt Tooling and BRMS tooling are aggregated.  The following frameworks are supported:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;red-hat-business-process-and-rules-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#red-hat-business-process-and-rules-development&quot;&gt;&lt;/a&gt;Red Hat Business Process and Rules Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Business Process and Rules Development plug-ins provide design, debug and testing tooling for developing business processes for Red Hat BRMS and Red Hat BPM Suite.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpel.html&quot;&gt;BPEL Designer&lt;/a&gt; - Orchestrating your business processes.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpmn2.html&quot;&gt;BPMN2 Modeler&lt;/a&gt; - A graphical modeling tool which allows creation and editing of Business Process Modeling Notation diagrams using graphiti.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/drools.html&quot;&gt;Drools&lt;/a&gt; - A Business Logic integration Platform which provides a unified and integrated platform for Rules, Workflow and Event Processing including KIE.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/jbpm.html&quot;&gt;jBPM&lt;/a&gt; - A flexible Business Process Management (BPM) suite.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;red-hat-data-virtualization-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#red-hat-data-virtualization-development&quot;&gt;&lt;/a&gt;Red Hat Data Virtualization Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Red Hat Data Virtualization Development plug-ins provide a graphical interface to manage various aspects of Red Hat Data Virtualization instances, including the ability to design virtual databases and interact with associated governance repositories.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/teiiddesigner.html&quot;&gt;Teiid Designer&lt;/a&gt; - A visual tool that enables rapid, model-driven definition, integration, management and testing of data services without programming using the Teiid runtime framework.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;the-jboss-tools-website-features-tab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#the-jboss-tools-website-features-tab&quot;&gt;&lt;/a&gt;The JBoss Tools website features tab&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Don’t miss the &lt;a href=&quot;https://tools.jboss.org/features&quot;&gt;Features tab&lt;/a&gt; for up to date information on your favorite Integration Stack components.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The easiest way to install the Integration Stack components is through the &lt;a href=&quot;https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;amp;product=jbossdeveloperstudio&amp;amp;version=12.0.0&quot;&gt;stand-alone installer&lt;/a&gt; or through our &lt;a href=&quot;http://tools.jboss.org/downloads/overview.html&quot;&gt;JBoss Tools Download Site&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For a complete set of Integration Stack installation instructions, see &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/12.0/html/installation_guide/&quot;&gt;Integration Stack Installation Guide&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;em&gt;Let us know how it goes!&lt;/em&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Paul Leacu.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: Integration Tooling for Eclipse Oxygen</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/integration-stack-4.5.2.Final.html</guid>
	<link>https://tools.jboss.org/blog/integration-stack-4.5.2.Final.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Try our complete Eclipse Oxygen and Red Hat JBoss Developer Studio 11 compatible integration tooling.&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;jbosstools jbdevstudio blog header&quot; src=&quot;https://tools.jboss.org/blog/images/jbosstools-jbdevstudio-blog-header.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;JBoss Tools Integration Stack 4.5.2.Final / Developer Studio Integration Stack 11.2.0.GA&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock note&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      All of the Integration Stack components have been verified to work with the same dependencies as JBoss Tools 4.5 and Developer Studio 11.
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-new-for-this-release&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-new-for-this-release&quot;&gt;&lt;/a&gt;What’s new for this release?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This release provides full Teiid Designer tooling support for JBoss Data Virtualization 6.4 runtime.  It provides an updated BPMN2 Modeler and jBPM/Drools for our Business Process Modeling friends.  It also provides full synchronization with Devstudio 11.2.0.GA, JBoss Tools 4.5.2.Final and Eclipse Oxygen.2.  Please note that SwitchYard is deprecated in this release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;released-tooling-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#released-tooling-highlights&quot;&gt;&lt;/a&gt;Released Tooling Highlights&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;jboss-business-process-and-rules-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-business-process-and-rules-development&quot;&gt;&lt;/a&gt;JBoss Business Process and Rules Development&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;bpmn2-modeler-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#bpmn2-modeler-known-issues&quot;&gt;&lt;/a&gt;BPMN2 Modeler Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.2/html/11.2.0_release_notes_and_known_issues/resolved_issues#bpmn2_1_4_2_final&quot;&gt;BPMN2 1.4.2.Final Known Issues Section&lt;/a&gt; of the Integration Stack 11.2.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;drools-jbpm6-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#drools-jbpm6-known-issues&quot;&gt;&lt;/a&gt;Drools/jBPM6 Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.2/html/11.2.0_release_notes_and_known_issues/resolved_issues#drools_7_5_0_final&quot;&gt;Drools 7.5.0.Final Known Issues Section&lt;/a&gt; of the Integration Stack 11.2.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;switchyard-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#switchyard-highlights&quot;&gt;&lt;/a&gt;SwitchYard Highlights&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.2/html/11.2.0_release_notes_and_known_issues/resolved_issues#switchyard_2_4_1_final&quot;&gt;SwitchYard 2.4.1.Final Resolved Issues Section&lt;/a&gt; of the Integration Stack 11.2.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;data-virtualization-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#data-virtualization-highlights&quot;&gt;&lt;/a&gt;Data Virtualization Highlights&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;teiid-designer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#teiid-designer&quot;&gt;&lt;/a&gt;Teiid Designer&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.2/html/11.2.0_release_notes_and_known_issues/resolved_issues#teiid_designer_11_1_1_final&quot;&gt;Teiid Designer 11.1.1.Final Resolved Issues Section&lt;/a&gt; of the Integration Stack 11.2.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-an-integration-stack&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-an-integration-stack&quot;&gt;&lt;/a&gt;What’s an Integration Stack?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Red Hat JBoss Developer Studio Integration Stack is a set of Eclipse-based development tools. It further enhances the IDE functionality provided by JBoss Developer Studio, with plug-ins specifically for use when developing for other Red Hat JBoss products.  It’s where DataVirt Tooling, SOA tooling and BRMS tooling are aggregated.  The following frameworks are supported:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;jboss-business-process-and-rules-development-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-business-process-and-rules-development-2&quot;&gt;&lt;/a&gt;JBoss Business Process and Rules Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Business Process and Rules Development plug-ins provide design, debug and testing tooling for developing business processes for Red Hat JBoss BRMS and Red Hat JBoss BPM Suite.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpel.html&quot;&gt;BPEL Designer&lt;/a&gt; - Orchestrating your business processes.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpmn2.html&quot;&gt;BPMN2 Modeler&lt;/a&gt; - A graphical modeling tool which allows creation and editing of Business Process Modeling Notation diagrams using graphiti.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/drools.html&quot;&gt;Drools&lt;/a&gt; - A Business Logic integration Platform which provides a unified and integrated platform for Rules, Workflow and Event Processing including KIE.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/jbpm.html&quot;&gt;jBPM&lt;/a&gt; - A flexible Business Process Management (BPM) suite.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;jboss-data-virtualization-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-data-virtualization-development&quot;&gt;&lt;/a&gt;JBoss Data Virtualization Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Data Virtualization Development plug-ins provide a graphical interface to manage various aspects of Red Hat JBoss Data Virtualization instances, including the ability to design virtual databases and interact with associated governance repositories.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/teiiddesigner.html&quot;&gt;Teiid Designer&lt;/a&gt; - A visual tool that enables rapid, model-driven definition, integration, management and testing of data services without programming using the Teiid runtime framework.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;jboss-integration-and-soa-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-integration-and-soa-development&quot;&gt;&lt;/a&gt;JBoss Integration and SOA Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Integration and SOA Development plug-ins provide tooling for developing, configuring and deploying BRMS and SwitchYard to Red Hat JBoss Fuse and Fuse Fabric containers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;All of the Business Process and Rules Development plugins plus SwitchYard. Switchyard is deprecated as of this release.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/fusetools.html&quot;&gt;Fuse Tooling&lt;/a&gt; has moved out of the Integration Stack to be a core part of JBoss Tools and Developer Studio.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;the-jboss-tools-website-features-tab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#the-jboss-tools-website-features-tab&quot;&gt;&lt;/a&gt;The JBoss Tools website features tab&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Don’t miss the &lt;a href=&quot;https://tools.jboss.org/features&quot;&gt;Features tab&lt;/a&gt; for up to date information on your favorite Integration Stack components.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The easiest way to install the Integration Stack components is through the &lt;a href=&quot;https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;amp;product=jbossdeveloperstudio&amp;amp;version=11.2.0&quot;&gt;stand-alone installer&lt;/a&gt; or through our &lt;a href=&quot;http://tools.jboss.org/downloads/overview.html&quot;&gt;JBoss Tools Download Site&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For a complete set of Integration Stack installation instructions, see &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.2/html/installation_guide/&quot;&gt;Integration Stack Installation Guide&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;em&gt;Let us know how it goes!&lt;/em&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Paul Leacu.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: Integration Tooling for Eclipse Oxygen</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/integration-stack-4.5.0.Final.html</guid>
	<link>https://tools.jboss.org/blog/integration-stack-4.5.0.Final.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Try our complete Eclipse Oxygen and Red Hat JBoss Developer Studio 11 compatible integration tooling.&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;jbosstools jbdevstudio blog header&quot; src=&quot;https://tools.jboss.org/blog/images/jbosstools-jbdevstudio-blog-header.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;JBoss Tools Integration Stack 4.5.0.Final / Developer Studio Integration Stack 11.0.0.GA&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock note&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      All of the Integration Stack components have been verified to work with the same dependencies as JBoss Tools 4.5 and Developer Studio 11.
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-new-for-this-release&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-new-for-this-release&quot;&gt;&lt;/a&gt;What’s new for this release?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This is the initial release in support of Eclipse Oxygen.  It syncs up with Developer Studio 11.0.0, JBoss Tools 4.5.0 and Eclipse 4.7.0 (Oxygen.0).  It is also a maintenance release for SwitchYard and BRMS tooling.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Data Virtualization tooling support is not yet available (scheduled for the autumn).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;SwitchYard is deprecated in this release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/fusetools.html&quot;&gt;Fuse Tooling&lt;/a&gt; has moved out of the Integration Stack to be a core part of JBoss Tools and Developer Studio.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;released-tooling-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#released-tooling-highlights&quot;&gt;&lt;/a&gt;Released Tooling Highlights&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;jboss-business-process-and-rules-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-business-process-and-rules-development&quot;&gt;&lt;/a&gt;JBoss Business Process and Rules Development&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;bpmn2-modeler-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#bpmn2-modeler-known-issues&quot;&gt;&lt;/a&gt;BPMN2 Modeler Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.0/html/11.0.0_release_notes_and_known_issues/known_issues#bpmn2_1_4_0_final_2&quot;&gt;BPMN2 1.4.0.Final Known Issues Section&lt;/a&gt; of the Integration Stack 11.0.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;drools-jbpm6-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#drools-jbpm6-known-issues&quot;&gt;&lt;/a&gt;Drools/jBPM6 Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.0/html/11.0.0_release_notes_and_known_issues/known_issues#drools_7_0_1_final_2&quot;&gt;Drools 7.0.1.Final Known Issues Section&lt;/a&gt; of the Integration Stack 11.0.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;switchyard-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#switchyard-highlights&quot;&gt;&lt;/a&gt;SwitchYard Highlights&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/11.0/html/11.0.0_release_notes_and_known_issues/known_issues#switchyard_2_4_0_final_2&quot;&gt;SwitchYard 2.4.0.Final Resolved Issues Section&lt;/a&gt; of the Integration Stack 11.0.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;data-virtualization-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#data-virtualization-highlights&quot;&gt;&lt;/a&gt;Data Virtualization Highlights&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;teiid-designer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#teiid-designer&quot;&gt;&lt;/a&gt;Teiid Designer&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Not yet available for Oxygen.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-an-integration-stack&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-an-integration-stack&quot;&gt;&lt;/a&gt;What’s an Integration Stack?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Red Hat JBoss Developer Studio Integration Stack is a set of Eclipse-based development tools. It further enhances the IDE functionality provided by JBoss Developer Studio, with plug-ins specifically for use when developing for other Red Hat JBoss products.  It’s where DataVirt Tooling, SOA tooling and BRMS tooling are aggregated.  The following frameworks are supported:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;jboss-business-process-and-rules-development-2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-business-process-and-rules-development-2&quot;&gt;&lt;/a&gt;JBoss Business Process and Rules Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Business Process and Rules Development plug-ins provide design, debug and testing tooling for developing business processes for Red Hat JBoss BRMS and Red Hat JBoss BPM Suite.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpel.html&quot;&gt;BPEL Designer&lt;/a&gt; - Orchestrating your business processes.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpmn2.html&quot;&gt;BPMN2 Modeler&lt;/a&gt; - A graphical modeling tool which allows creation and editing of Business Process Modeling Notation diagrams using graphiti.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/drools.html&quot;&gt;Drools&lt;/a&gt; - A Business Logic integration Platform which provides a unified and integrated platform for Rules, Workflow and Event Processing including KIE.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/jbpm.html&quot;&gt;jBPM6&lt;/a&gt; - A flexible Business Process Management (BPM) suite.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;jboss-data-virtualization-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-data-virtualization-development&quot;&gt;&lt;/a&gt;JBoss Data Virtualization Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Data Virtualization Development plug-ins provide a graphical interface to manage various aspects of Red Hat JBoss Data Virtualization instances, including the ability to design virtual databases and interact with associated governance repositories. Data Virtualization tooling support is not yet available (scheduled for the autumn).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/teiiddesigner.html&quot;&gt;Teiid Designer&lt;/a&gt; - A visual tool that enables rapid, model-driven definition, integration, management and testing of data services without programming using the Teiid runtime framework.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;jboss-integration-and-soa-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jboss-integration-and-soa-development&quot;&gt;&lt;/a&gt;JBoss Integration and SOA Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Integration and SOA Development plug-ins provide tooling for developing, configuring and deploying BRMS and SwitchYard to Red Hat JBoss Fuse and Fuse Fabric containers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;All of the Business Process and Rules Development plugins plus SwitchYard. Switchyard is deprecated as of this release.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/fusetools.html&quot;&gt;Fuse Tooling&lt;/a&gt; has moved out of the Integration Stack to be a core part of JBoss Tools and Developer Studio.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;the-jboss-tools-website-features-tab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#the-jboss-tools-website-features-tab&quot;&gt;&lt;/a&gt;The JBoss Tools website features tab&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Don’t miss the &lt;a href=&quot;https://tools.jboss.org/features&quot;&gt;Features tab&lt;/a&gt; for up to date information on your favorite Integration Stack components.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The easiest way to install the Integration Stack components is through the &lt;a href=&quot;https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;amp;product=jbossdeveloperstudio&amp;amp;version=11.0.0&quot;&gt;stand-alone installer&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For a complete set of Integration Stack installation instructions, see &lt;a href=&quot;https://access.redhat.com/documentation/en/red-hat-jboss-developer-studio-integration-stack/10.0/paged/installation-guide/&quot;&gt;Integration Stack Installation Instructions&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;em&gt;Be the first to try it on Oxygen!&lt;/em&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Paul Leacu.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: Integration Tooling for Eclipse 2019-03</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/integration-stack-4.11.0.Final.html</guid>
	<link>https://tools.jboss.org/blog/integration-stack-4.11.0.Final.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Check out our new branding for Eclipse 2019-03.  We’re now Red Hat CodeReady Studio 12 Integration Stack.&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;crstudio12&quot; src=&quot;https://tools.jboss.org/blog/images/crstudio12.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;JBoss Tools Integration Stack 4.11.0.Final / Red Hat CodeReady Studio Integration Stack 12.11.0.GA&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock note&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      All of the Integration Stack components have been verified to work with the same dependencies as JBoss Tools 4.11 and Red Hat CodeReady Studio 12.
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-new-for-this-release&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-new-for-this-release&quot;&gt;&lt;/a&gt;What’s new for this release?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;DataVirtualization support from Teiid Designer is no longer available through the Integration Stack.  It can be installed directly from &lt;a href=&quot;http://download.jboss.org/jbosstools/photon/stable/updates/integration-stack/teiiddesigner&quot;&gt;Teiid Designer&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This release has an updated BPMN2 Modeler and jBPM/Drools/KIE.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;released-tooling-highlights&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#released-tooling-highlights&quot;&gt;&lt;/a&gt;Released Tooling Highlights&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;business-process-and-rules-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#business-process-and-rules-development&quot;&gt;&lt;/a&gt;Business Process and Rules Development&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;bpmn2-modeler-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#bpmn2-modeler-known-issues&quot;&gt;&lt;/a&gt;BPMN2 Modeler Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_codeready_studio_integration_stack/12.11/html/12.11.0_release_notes_and_known_issues/known_issues#bpmn2_1_5_1_final_2&quot;&gt;BPMN2 1.5.1.Final Known Issues Section&lt;/a&gt; of the Integration Stack 12.11.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;drools-jbpm6-known-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#drools-jbpm6-known-issues&quot;&gt;&lt;/a&gt;Drools/jBPM6 Known Issues&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_codeready_studio_integration_stack/12.11/html/12.11.0_release_notes_and_known_issues/resolved_issues#drools_7_21_0_final&quot;&gt;Drools 7.21.0.Final Known Issues Section&lt;/a&gt; of the Integration Stack 12.11.0.GA release notes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-s-an-integration-stack&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-s-an-integration-stack&quot;&gt;&lt;/a&gt;What’s an Integration Stack?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Red Hat CodeReady Studio Integration Stack is a set of Eclipse-based development tools. It further enhances the IDE functionality provided by Developer Studio, with plug-ins specifically for use when developing for other Red Hat products.  It’s where BRMS tooling is aggregated.  The following frameworks are supported:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;red-hat-business-process-and-rules-development&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#red-hat-business-process-and-rules-development&quot;&gt;&lt;/a&gt;Red Hat Business Process and Rules Development&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Business Process and Rules Development plug-ins provide design, debug and testing tooling for developing business processes for Red Hat BRMS and Red Hat BPM Suite.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpel.html&quot;&gt;BPEL Designer&lt;/a&gt; - Orchestrating your business processes.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/bpmn2.html&quot;&gt;BPMN2 Modeler&lt;/a&gt; - A graphical modeling tool which allows creation and editing of Business Process Modeling Notation diagrams using graphiti.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/drools.html&quot;&gt;Drools&lt;/a&gt; - A Business Logic integration Platform which provides a unified and integrated platform for Rules, Workflow and Event Processing including KIE.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/features/jbpm.html&quot;&gt;jBPM&lt;/a&gt; - A flexible Business Process Management (BPM) suite.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;the-jboss-tools-website-features-tab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#the-jboss-tools-website-features-tab&quot;&gt;&lt;/a&gt;The JBoss Tools website features tab&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Don’t miss the &lt;a href=&quot;https://tools.jboss.org/features&quot;&gt;Features tab&lt;/a&gt; for up to date information on your favorite Integration Stack components.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The easiest way to install the Integration Stack components is through the &lt;a href=&quot;https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;amp;product=jbossdeveloperstudio&amp;amp;version=12.11.0&quot;&gt;stand-alone installer&lt;/a&gt; or through our &lt;a href=&quot;http://tools.jboss.org/downloads/overview.html&quot;&gt;JBoss Tools Download Site&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For a complete set of Integration Stack installation instructions, see &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_jboss_developer_studio_integration_stack/12.0/html/installation_guide/&quot;&gt;Integration Stack Installation Guide&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;em&gt;Let us know how it goes!&lt;/em&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Paul Leacu.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.9.0.AM3 for Eclipse 2018-09 M2</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.9.0.am3.html</guid>
	<link>https://tools.jboss.org/blog/4.9.0.am3.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.9.0.AM3 (Developer Milestone 3) build for Eclipse 2018-09 M2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2018-09/4.9.0.AM3.html&quot;&gt;JBoss Tools 4.9.0 AM3&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.9.0.AM3.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;server-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#server-tools&quot;&gt;&lt;/a&gt;Server Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;wildfly-14-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#wildfly-14-server-adapter&quot;&gt;&lt;/a&gt;Wildfly 14 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A server adapter has been added to work with Wildfly 14. It adds support for Java EE 8.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;forge-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-tools&quot;&gt;&lt;/a&gt;Forge Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;forge-runtime-updated-to-3-9-1-final&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-runtime-updated-to-3-9-1-final&quot;&gt;&lt;/a&gt;Forge Runtime updated to 3.9.1.Final&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The included Forge runtime is now 3.9.1.Final. Read the official announcement &lt;a href=&quot;https://forge.jboss.org/news/jboss-forge-3.9.1.final-is-here&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;know-issues&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#know-issues&quot;&gt;&lt;/a&gt;Know issues&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A regression has been introduced touching all functionalities using Jaxb. It includes:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Variable content display in debug&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Data Transformation wizard&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Tracing Camel route via Jolokia Connection&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It may affect other functionalities. In this case, you will have this kind of error in log:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;literalblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;java.lang.NullPointerException
          at javax.xml.bind.ContextFinder.handleClassCastException(ContextFinder.java:95)&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please note that it has been already fixed on &lt;a href=&quot;http://tools.jboss.org/downloads/jbosstools/2018-09/4.9.x.Nightly.html&quot;&gt;nightly build&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.9.0.AM2 for Eclipse 2018-09 M2</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.9.0.am2.html</guid>
	<link>https://tools.jboss.org/blog/4.9.0.am2.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.9.0.AM2 (Developer Milestone 2) build for Eclipse 2018-09 M2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2018-09/4.9.0.AM2.html&quot;&gt;JBoss Tools 4.9.0 AM2&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.9.0.AM2.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-2018-09&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-2018-09&quot;&gt;&lt;/a&gt;Eclipse 2018-09&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools is now targeting Eclipse 2018-09 M2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;wsdl-to-camel-rest-dsl-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#wsdl-to-camel-rest-dsl-improvements&quot;&gt;&lt;/a&gt;WSDL to Camel REST DSL improvements&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The version of the library used to generate Camel REST DSL from WSDl files has been updated. It now covers more types of WSDL files. See &lt;a class=&quot;bare&quot; href=&quot;https://github.com/jboss-fuse/wsdl2rest/milestone/3?closed=1&quot;&gt;https://github.com/jboss-fuse/wsdl2rest/milestone/3?closed=1&lt;/a&gt; for the list of improvements.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;rest-editor-tab-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#rest-editor-tab-improvements&quot;&gt;&lt;/a&gt;REST Editor tab improvements&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the last milestone we began adding editing capabilities to the read-only REST tab to the route editor we added in the previous release. Those efforts have continued and we now have a fully editable REST tab.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fully Editable REST Editor&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/fuse-editor-rest-tab-properties-11.1.0.am2.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Create and delete REST Configurations&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Create and delete new REST Elements&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Create and delete new REST Operations&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Edit properties for a selected REST Element in the Properties view&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Edit properties for a selected REST Operation in the Properties view&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In addition, weâ€™ve improved the look and feel by fixing the scrolling capabilities of the REST Element and REST Operations lists.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.6.0.AM3 for Eclipse Photon.0.RC3</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.6.0.am3-for-photon.0.rc3.html</guid>
	<link>https://tools.jboss.org/blog/4.6.0.am3-for-photon.0.rc3.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.6.0.AM3 (Developer Milestone 3) build for Eclipse Photon.0.RC3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/photon/4.6.0.AM3.html&quot;&gt;JBoss Tools 4.6.0 AM3&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.6.0.AM3.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-photon&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-photon&quot;&gt;&lt;/a&gt;Eclipse Photon&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools is now targeting Eclipse Photon RC3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;camel-uri-completion-with-xml-dsl&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#camel-uri-completion-with-xml-dsl&quot;&gt;&lt;/a&gt;Camel URI completion with XML DSL&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As announced &lt;a href=&quot;https://developers.redhat.com/blog/2018/01/31/apache-camel-uri-completion-eclipse-xml-editor/&quot;&gt;here&lt;/a&gt;, it was already possible to have Camel URI completion with XML DSL in the source tab of the Camel Route editor by installing the &lt;a href=&quot;https://github.com/camel-tooling/camel-lsp-client-eclipse&quot;&gt;Language Support for Apache Camel&lt;/a&gt; in your IDE.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This feature is now installed by default with Fuse Tooling!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Camel URI completion in source tab of Camel Editor&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/completionSourceEditor.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Now you have the choice to use the properties view with UI help to configure Camel components or to use the source editor and benefit from completion features. It all depends on your development preferences!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;webservices-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#webservices-tooling&quot;&gt;&lt;/a&gt;Webservices Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;jax-rs-2-1-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#jax-rs-2-1-support&quot;&gt;&lt;/a&gt;JAX-RS 2.1 Support&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JAX-RS 2.1 is part of JavaEE8 and JBoss Tools now provides you with support for this update of the specification.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;server-side-events&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#server-side-events&quot;&gt;&lt;/a&gt;Server side events&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JAX-RS 2.1 brought support for server side events. The &lt;code&gt;Sse&lt;/code&gt; and &lt;code&gt;SseEventSink&lt;/code&gt; resources can now be injected into
      method arguments thanks to the @Context annotation.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.6.0.AM2 for Eclipse Photon.0.M7</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.6.0.am2-for-photon.0.m7.html</guid>
	<link>https://tools.jboss.org/blog/4.6.0.am2-for-photon.0.m7.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.6.0.AM2 (Developer Milestone 2) build for Eclipse Photon.0.M7.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/photon/4.6.0.AM2.html&quot;&gt;JBoss Tools 4.6.0 AM2&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.6.0.AM2.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-photon&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-photon&quot;&gt;&lt;/a&gt;Eclipse Photon&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools is now targeting Eclipse Photon M7.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;enhanced-spring-boot-support-for-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#enhanced-spring-boot-support-for-server-adapter&quot;&gt;&lt;/a&gt;Enhanced Spring Boot support for server adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Spring Boot runtime was already supported by the OpenShift server adapter. However, it has one major limitation: files and
      resources were synchronized between the local workstation and the remote pod(s) only for the main project. If your Spring Boot
      application had dependencies that were present in the local workspace, any change to a file or resource of one of these dependencies
      was not handled. This is not true anymore.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;camel-rest-dsl-from-wsdl-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#camel-rest-dsl-from-wsdl-wizard&quot;&gt;&lt;/a&gt;Camel Rest DSL from WSDL wizard&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;There is a new &lt;em&gt;&quot;Camel Rest DSL from WSDL&quot;&lt;/em&gt; wizard. This wizard wraps the &lt;a href=&quot;https://github.com/jboss-fuse/wsdl2rest&quot;&gt;wsdl2rest tool&lt;/a&gt; now included with the Fuse 7 distribution, which
      takes a WSDL file for a SOAP-based (JAX-WS) web service and generates a combination of CXF-generated code and a Camel REST DSL route to make it accessible using REST operations.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To start, you need an existing Fuse Integration project in your workspace and access to the WSDL for the SOAP service. Then use
      &lt;em&gt;File→New→Other…​&lt;/em&gt; and select &lt;em&gt;Red Hat Fuse→Camel Rest DSL from WSDL&lt;/em&gt; wizard.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;On the first page of the wizard, select your WSDL and the Fuse Integration project in which to generate the Java code and Camel configuration.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;SOAP to REST Wizard page 1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/wsdl2rest-wizard-page-one.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;On the second page, you can customize the Java folder path for your generated classes, the folder for the generated Camel file, plus any customization for the SOAP service
      address and destination REST service address.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;SOAP to REST Wizard page 2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools//images/wsdl2rest-wizard-page-two.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click &lt;em&gt;Finish&lt;/em&gt; and the new Camel configuration and associated Java code are generated in your project. The wizard determines whether your project is Blueprint,
      Spring, or Spring Boot based, and it creates the corresponding artifacts without requiring any additional input. When the wizard is finished, you can open your
      new Camel file in the Fuse Tooling Route Editor to view what it created.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Tooling editor Rest Tab&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools//images/fuse-editor-rest-tab-no-properties.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;That brings us to another new functionality, the REST tab in the Fuse Tooling Route Editor.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;camel-editor-rest-tab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#camel-editor-rest-tab&quot;&gt;&lt;/a&gt;Camel Editor REST tab&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Fuse Tooling Route Editor provides a new &lt;em&gt;REST&lt;/em&gt; tab. For this release, the contents of this tab is read-only and includes the following information:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Details for the REST Configuration element including the component (jetty, netty, servlet, etc.), the context path, the port, binding mode (JSON, XML, etc.), and host. There is only one REST Configuration element.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;A list of REST elements that collect REST operations. A configuration can have more than one REST element. Each REST element has an associated property page that displays additional details such as the path and the data it consumes or produces.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Tooling Rest Elements Properties View&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools//images/fuse-editor-rest-tab-rest-element-properties.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;A list of REST operations for the selected REST element. Each of the operations has an associated property page that provides details such as the URI and output type.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Tooling Rest Operations Properties View&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools//images/fuse-editor-rest-tab-rest-operation-properties.jpg&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For this release, the REST tab is read-only. If you want to edit the REST DSL, use the Route Editor Source tab. When you make changes and save them in the Source tab, the
      REST tab refreshes to show your updates.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.6.0.AM1 for Eclipse Photon.0.M6</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.6.0.am1-for-photon.0.m6.html</guid>
	<link>https://tools.jboss.org/blog/4.6.0.am1-for-photon.0.m6.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.6.0.AM1 (Developer Milestone 1) build for Eclipse Photon.0.M6.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/photon/4.6.0.AM1.html&quot;&gt;JBoss Tools 4.6.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.6.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-photon&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-photon&quot;&gt;&lt;/a&gt;Eclipse Photon&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools is now targeting Eclipse Photon M6.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;forge-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-tools&quot;&gt;&lt;/a&gt;Forge Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;forge-runtime-updated-to-3-9-0-final&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-runtime-updated-to-3-9-0-final&quot;&gt;&lt;/a&gt;Forge Runtime updated to 3.9.0.Final&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The included Forge runtime is now 3.9.0.Final. Read the official announcement &lt;a href=&quot;https://forge.jboss.org/news/jboss-forge-3.9.0.final-is-here&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.3.AM3 for Eclipse Oxygen.3</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.3.am3-for-oxygen.3.html</guid>
	<link>https://tools.jboss.org/blog/4.5.3.am3-for-oxygen.3.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.3.AM3 (Developer Milestone 3) build for Eclipse Oxygen.3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.3.AM3.html&quot;&gt;JBoss Tools 4.5.3 AM3&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.3.AM3.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;cdk-and-minishift-server-adapter-runtime-download&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#cdk-and-minishift-server-adapter-runtime-download&quot;&gt;&lt;/a&gt;CDK and Minishift Server Adapter runtime download&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When working with both CDK and upstream Minishift, you needed to have previously downloaded the CDK
      or Minishift binary. It is now possible to download the runtime to a specific folder when you create
      the server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let’s see an example with the CDK server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;From the &lt;strong&gt;Servers&lt;/strong&gt; view, select the new Server menu item and enter cdk in the filter:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select Red Hat Container Development Kit 3.2+&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard3.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In order to download the runtime, click the &lt;strong&gt;Download and install runtime…​&lt;/strong&gt; link:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard4&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard4.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select the version of the runtime you want to download&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard5&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard5.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard6&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard6.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You need an account to download the CDK. If you already had configured credentials, select the one you
      want to use. If you didn’t, click the &lt;strong&gt;Add&lt;/strong&gt; button to add your credentials.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard7&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard7.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;strong&gt;Next&lt;/strong&gt; button. Your credentials will be validated, and upon success, you must accept
      the license agreement:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard8&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard8.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Accept the license agreement and click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard9&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard9.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can choose the folder where you want the runtime to be installed. Once you’ve set it,
      click the &lt;strong&gt;Finish&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The download of the runtime will be started and you should see the progression on the server adapter
      wizard:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard10&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard10.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once the download is completed, you will notice that the &lt;strong&gt;Minishift Binary&lt;/strong&gt; and &lt;strong&gt;Username&lt;/strong&gt; fields have been filled:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard11&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard11.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;strong&gt;Finish&lt;/strong&gt; button to create the server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please note that if it’s the first time you install CDK, you must perform an initialization. In the &lt;strong&gt;Servers&lt;/strong&gt; view, right click
      the server and select the &lt;strong&gt;Setup CDK&lt;/strong&gt; menu item:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard12&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard12.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard13&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard13.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;hibernate-runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-runtime-provider-updates&quot;&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;new-hibernate-5-3-runtime-provider&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#new-hibernate-5-3-runtime-provider&quot;&gt;&lt;/a&gt;New Hibernate 5.3 Runtime Provider&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;With beta releases available in the Hibernate 5.3 stream, the time was right to make available a corresponding Hibernate 5.3 runtime provider. This runtime provider incorporates Hibernate Core version 5.3.0.Beta2 and Hibernate Tools version 5.3.0.Beta1.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot; style=&quot;text-align: center;&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;hibernate 5 3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/hibernate/images/4.5.3.AM3/hibernate_5_3.png&quot; width=&quot;381&quot; /&gt;
      &lt;/div&gt;
      &lt;div class=&quot;title&quot;&gt;Figure 1. Hibernate 5.3 is available&lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;other-runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#other-runtime-provider-updates&quot;&gt;&lt;/a&gt;Other Runtime Provider Updates&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.0 runtime provider now incorporates Hibernate Core version 5.0.12.Final and Hibernate Tools version 5.0.6.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.1 runtime provider now incorporates Hibernate Core version 5.1.12.Final and Hibernate Tools version 5.1.7.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.2 runtime provider now incorporates Hibernate Core version 5.2.15.Final and Hibernate Tools version 5.2.10.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;fuse-ignite-technical-extension-templates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-ignite-technical-extension-templates&quot;&gt;&lt;/a&gt;Fuse Ignite Technical Extension templates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The existing template for &quot;Custom step using a Camel Route&quot; has been updated to work with Fuse 7 Tech Preview 4.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Two new templates have been added:
      - Custom step using Java Bean
      - Custom connector&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;New Fuse Ignite wizard with 3 options&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/igniteExtensionWizard10.3.0.AM3.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improvements-of-the-wizard-to-create-a-fuse-integration-project&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improvements-of-the-wizard-to-create-a-fuse-integration-project&quot;&gt;&lt;/a&gt;Improvements of the wizard to create a Fuse Integration project&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The creation wizard provides better guidance for the targeted deployment environment:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;New Fuse Integration Project wizard page to select environment&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/newFuseIntegrationWizard-environment.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;More place is available to choose the templates and they are now filtered based on the targeted environment:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;New Fuse Integration Project wizard page to select templates&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/newFuseIntegrationWizard-templates.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It also points out to other places to find different examples for advanced users (see the link at the bottom of the previous screenshot).&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;camel-rest-dsl-editor-technical-preview&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#camel-rest-dsl-editor-technical-preview&quot;&gt;&lt;/a&gt;Camel Rest DSL editor (Technical preview)&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Camel is providing a Rest DSL to help the integration through Rest endpoints. Fuse Tooling is now providing a new tab in read-only mode to visualize the Rest endpoints defined.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Rest DSL editor tab in read-only mode&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/restViewer.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is currently in Tech Preview and needs to be activated in Window → Preferences → Fuse Tooling → Editor → Enable Read Only Tech preview REST DSL tab.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Work is still ongoing and feedback is very welcome on this new feature, you can comment on &lt;a href=&quot;https://issues.jboss.org/browse/FUSETOOLS-1287&quot;&gt;this JIRA epic&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;dozer-upgrade-and-migration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#dozer-upgrade-and-migration&quot;&gt;&lt;/a&gt;Dozer upgrade and migration&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When upgrading from Camel &amp;lt; 2.20 to Camel &amp;gt; 2.20, the Dozer dependency has been upgraded to a version not backward-compatible
      If you open a Data transformation based on Dozer in Fuse Tooling, it will propose to migrate the file used for the transformation (technically changing the namespace). It allow to continue to use the Data Transformation editor and have - in most cases - the Data Transformation working at runtime with Camel &amp;gt; 2.20.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.3.AM2 for Eclipse Oxygen.3</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.3.am2-for-oxygen.3.html</guid>
	<link>https://tools.jboss.org/blog/4.5.3.am2-for-oxygen.3.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.3.AM2 (Developer Milestone 2) build for Eclipse Oxygen.3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.3.AM2.html&quot;&gt;JBoss Tools 4.5.3 AM2&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.3.AM2.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;cdk-and-minishift-server-adapter-better-developer-experience&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#cdk-and-minishift-server-adapter-better-developer-experience&quot;&gt;&lt;/a&gt;CDK and Minishift Server Adapter better developer experience&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When working with both CDK and upstream Minishift, it is recommanded to distinguish environments through the MINISHIFT_HOME variable.
      It was possible before to use this parameter but it requires a two steps process:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;first create the server adapter (through the wizard)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;then change the MINISHIFT_HOME in the server adapter editor&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is now possible to set this parameter from the server adapter wizard. So now, everything is correctly setup when you create the
      server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let’s see an example with the CDK server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;From the &lt;strong&gt;Servers&lt;/strong&gt; view, select the new Server menu item and enter cdk in the filter:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select Red Hat Container Development Kit 3.2+&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The MINISHIFT_HOME parameter can be set here and is defaulted.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;display-fuse-version-corresponding-to-camel-version-proposed&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#display-fuse-version-corresponding-to-camel-version-proposed&quot;&gt;&lt;/a&gt;Display Fuse version corresponding to Camel version proposed&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When you create a new project, you select the Camel version from a list. Now, the list of Camel versions includes the Fuse version to help you choose the version that corresponds to your production version.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Version also displayed in drop-down list close to Camel version&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/listOfFuseVersion.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;update-validation-for-similar-ids-between-a-component-and-its-definition&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#update-validation-for-similar-ids-between-a-component-and-its-definition&quot;&gt;&lt;/a&gt;Update validation for similar IDs between a component and its definition&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Starting with Camel 2.20, you can use similar IDs for the component name and its definition unless the specific property &quot;registerEndpointIdsFromRoute&quot; is provided.
      The validation process checks the Camel version and the value of the &quot;registerEndpointIdsFromRoute&quot; property.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For example:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;from id=&quot;timer&quot; uri=&quot;timer:timerName&quot;/&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-guidance-in-method-selection-for-factory-methods-on-global-bean&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improved-guidance-in-method-selection-for-factory-methods-on-global-bean&quot;&gt;&lt;/a&gt;Improved guidance in method selection for factory methods on Global Bean&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When selecting factory method on a Global bean, a lot of possibilities were proposed in the user interface. The list of factory methods for a global bean is now limited to only those methods that match the constraints of the bean’s global definition type (bean or bean factory).&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;customize-eip-labels-in-the-diagram&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#customize-eip-labels-in-the-diagram&quot;&gt;&lt;/a&gt;Customize EIP labels in the diagram&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Fuse Tooling preferences page for the Editor view includes a new &quot;Preferred Labels&quot; option.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Tooling editor preference page&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/prefEIPLabels.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Use this option to define the label of EIP components (except endpoints) shown in the Editor’s Design view.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Dialog for defining the display text for an EIP&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/prefEIPLabelsResult.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;credentials-framework&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#credentials-framework&quot;&gt;&lt;/a&gt;Credentials Framework&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;sunsetting-jboss-org-credentials&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#sunsetting-jboss-org-credentials&quot;&gt;&lt;/a&gt;Sunsetting jboss.org credentials&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;code&gt;Download Runtimes&lt;/code&gt; and &lt;code&gt;CDK Server Adapter&lt;/code&gt; used the credentials framework to manage credentials. However, the JBoss.org credentials cannot be used any more
      as the underlying service used by these components does not support these credentials.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The credentials framework still supports the JBoss.org credentials in case other services / components require or use this credentials domain.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;aerogear&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#aerogear&quot;&gt;&lt;/a&gt;Aerogear&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;aerogear-component-deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#aerogear-component-deprecation&quot;&gt;&lt;/a&gt;Aerogear component deprecation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Aerogear component has been marked deprecated as there is no more maintenance on the source code. It is still available in Red Hat Central
      and may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;arquillian&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#arquillian&quot;&gt;&lt;/a&gt;Arquillian&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;arquillian-component-removal&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#arquillian-component-removal&quot;&gt;&lt;/a&gt;Arquillian component removal&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Arquillian component has been removed from Red Hat Central as it has been deprecated a while ago.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;browsersim&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#browsersim&quot;&gt;&lt;/a&gt;BrowserSim&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;browsersim-component-deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#browsersim-component-deprecation&quot;&gt;&lt;/a&gt;BrowserSim component deprecation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The BrowserSim component has been marked deprecated as there is no more maintenance on the source code. It is still available in Red Hat Central
      and may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;freemarker&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#freemarker&quot;&gt;&lt;/a&gt;Freemarker&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;freemarker-component-removal&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#freemarker-component-removal&quot;&gt;&lt;/a&gt;Freemarker component removal&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Freemarker component has been removed from Red Hat Central as it has been deprecated a while ago.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;livereload&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#livereload&quot;&gt;&lt;/a&gt;LiveReload&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;livereload-component-deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#livereload-component-deprecation&quot;&gt;&lt;/a&gt;LiveReload component deprecation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The LiveReload component has been marked deprecated as there is no more maintenance on the source code. It is still available in Red Hat Central
      and may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.3.AM1 for Eclipse Oxygen.2</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.3.am1-for-oxygen.2.html</guid>
	<link>https://tools.jboss.org/blog/4.5.3.am1-for-oxygen.2.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.3.AM1 (Developer Milestone 1) build for Eclipse Oxygen.2.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.3.AM1.html&quot;&gt;JBoss Tools 4.5.3 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.3.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;minishift-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#minishift-server-adapter&quot;&gt;&lt;/a&gt;Minishift Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new server adapter has been added to support upstream Minishift.
      While the server adapter itself has limited functionality, it is able to start and stop the Minishift virtual machine via its minishift binary.
      From the Servers view, click &lt;strong&gt;New&lt;/strong&gt; and then type minishift, that will bring up a command to setup and/or launch the Minishift server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;minishift server adapter&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/minishift-server-adapter.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;All you have to do is set the location of the minishift binary file, the type of virtualization hypervisor
      and an optional Minishift profile name.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;minishift server adapter1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/minishift-server-adapter1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once youâ€™re finished, a new Minishift Server adapter will then be created and visible in the Servers view.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;minishift server adapter2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/minishift-server-adapter2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once the server is started, Docker and OpenShift connections should appear in their respective views, allowing the user to quickly create a new Openshift application and begin developing their AwesomeApp in a highly-replicatable environment.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;minishift server adapter3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/minishift-server-adapter3.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;minishift server adapter4&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/minishift-server-adapter4.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;new-shortcuts-in-fuse-integration-perspective&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#new-shortcuts-in-fuse-integration-perspective&quot;&gt;&lt;/a&gt;New shortcuts in Fuse Integration perspective&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Shortcuts for the Java, Launch, and Debug perspectives and basic navigation operations are now provided within the Fuse Integration perspective.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The result is a set of buttons in the Toolbar:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;New Toolbar action&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/newToolbarAction.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;All of the associated keyboard shortcuts are also available, such as Ctrl+Shift+T to open a Java Type.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;performance-improvement-loading-advanced-tab-for-camel-endpoints&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#performance-improvement-loading-advanced-tab-for-camel-endpoints&quot;&gt;&lt;/a&gt;Performance improvement: Loading Advanced tab for Camel Endpoints&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The loading time of the &quot;Advanced&quot; tab in the Properties view for Camel Endpoints is greatly improved.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Advanced Tab in Properties view&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/advancedTab.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Previously, in the case of Camel Components that have a lot of parameters, it took several seconds to load the Advanced tab. For example, for the File component, it would take ~3.5s. It now takes ~350ms. The load time has been reduced by a factor of 10. (See this interesting &lt;a href=&quot;https://www.nngroup.com/articles/response-times-3-important-limits/&quot;&gt;article on response time&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you notice other places showing slow performance, you can file a report by using the &lt;a href=&quot;https://issues.jboss.org/browse/FUSETOOLS&quot;&gt;Fuse Tooling issue tracker&lt;/a&gt;. The Fuse Tooling team really appreciates your help. Your feedback contributes to our development priorities and improves the Fuse Tooling user experience.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.2.AM2 for Eclipse Oxygen.2</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.2.am2-for-oxygen.2.html</guid>
	<link>https://tools.jboss.org/blog/4.5.2.am2-for-oxygen.2.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.2.AM2 (Developer Milestone 2) build for Eclipse Oxygen.2 (built with RC2).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.2.AM2.html&quot;&gt;JBoss Tools 4.5.2 AM2&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.2.AM2.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;fuse-7-karaf-based-runtime-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-7-karaf-based-runtime-server-adapter&quot;&gt;&lt;/a&gt;Fuse 7 Karaf-based runtime Server adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Fuse 7 is cooking and preliminary versions are already available on &lt;a href=&quot;http://repository.jboss.org/nexus/content/groups/ea/org/jboss/fuse/jboss-fuse-karaf&quot;&gt;early-access repository&lt;/a&gt;. Fuse Tooling is ready to leverage them so that you can try the upcoming major Fuse version.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse 7 Server Adapter&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/Fuse7-ServerAdapter.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Classical functionalities with server adapters are available: automatic redeploy, Java debug, Graphical Camel debug through created JMX connection.
      Please note:
      - you canâ€™t retrieve the Fuse 7 Runtime yet directly from Fuse tooling, it is required to download it on your machine and point to it when creating the Server adapter.
      - the provided templates requires some modifications to have them working with Fuse 7, mainly adapting the bom. Please see work related to it in this &lt;a href=&quot;https://issues.jboss.org/browse/FUSETOOLS-2578&quot;&gt;JIRA task&lt;/a&gt; and its children.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;display-routes-defined-inside-routecontext-in-camel-graphical-editor-design-tab&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#display-routes-defined-inside-routecontext-in-camel-graphical-editor-design-tab&quot;&gt;&lt;/a&gt;Display routes defined inside &quot;routeContext&quot; in Camel Graphical Editor (Design tab)&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&quot;routeContext&quot; tag is a special tag used in Camel to provide the ability to reuse routes and to split them across different files. This is very useful on large projects. See Camel &lt;a href=&quot;http://camel.apache.org/how-do-i-import-routes-from-other-xml-files.html&quot;&gt;documentation&lt;/a&gt; for more information.
      Since this version, the Design of the routes defined in &quot;routeContext&quot; tags are now displayed.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;usability-improvement-progress-bar-when-changing-the-camel-version&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#usability-improvement-progress-bar-when-changing-the-camel-version&quot;&gt;&lt;/a&gt;Usability improvement: Progress bar when &quot;Changing the Camel version&quot;&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Since Fuse Tooling 10.1.0, it is possible to change the Camel version. In case the Camel version was not cached locally yet and for slow internet connections, this operation can take a while. There is now a progress bar to see the progress.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Switch Camel Version with Progress Bar&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/switchCamelVersionWithProgressBar.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.2.AM1 for Eclipse Oxygen.1a</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.2.am1-for-oxygen.1a.html</guid>
	<link>https://tools.jboss.org/blog/4.5.2.am1-for-oxygen.1a.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.2.AM1 (Developer Milestone 1) build for Eclipse Oxygen.1a.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.2.AM1.html&quot;&gt;JBoss Tools 4.5.2 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.2.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-route-timeouts-and-liveness-probe-for-openshift-server-adapter-debugging-configurations&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#support-for-route-timeouts-and-liveness-probe-for-openshift-server-adapter-debugging-configurations&quot;&gt;&lt;/a&gt;Support for route timeouts and liveness probe for OpenShift Server Adapter debugging configurations&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;While debugging your OpenShift deployment, you may face two different issues:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;if you launch your test through a Web browser, then it’s likely that you will access your OpenShift deployment through an OpenShift
      route. The problem is that, by default, OpenShift routes have a 30 seconds timeout for each request. So if you’re stepping through one
      of your breakpoints, you will get a timeout error message in the browser window even if you can still debug your OpenShift deployment.
      And you’re now stuck will the navigation of your OpenShift application.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;if your OpenShift deployment has a liveness probe configured, depending on your virtual machine capabilities or how your debugger is
      configured, if your stepping into one of your breakpoints, the liveness probe may fail thus OpenShift so OpenShift will restart your
      container and your debugging session will be destroyed.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So, from now, when the OpenShift server adapter is started in &lt;code&gt;debug&lt;/code&gt; mode, the following action are being performed:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;if an OpenShift route is found that is linked to the OpenShift deployment you want to debug, the route timeout will be
      set or increased to 1 hour. The original or default value will be restored when the OpenShift server adapter will be restarted
      in &lt;code&gt;run&lt;/code&gt; mode.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;if your OpenShift deployment has a liveness probe configured, the &lt;code&gt;initialDelay&lt;/code&gt; field will be increased to 1 hour if the defined
      value for this field is lower than 1 hour. If the value of this field is defined to a value greater than 1 hour, it is left intact.
      The original value will be restored when the OpenShift server adapter will be restarted
      in &lt;code&gt;run&lt;/code&gt; mode&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;camel-context-parameters-configurable-in-properties-view-for-camel-version-2-18&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#camel-context-parameters-configurable-in-properties-view-for-camel-version-2-18&quot;&gt;&lt;/a&gt;Camel context parameters configurable in properties view for Camel version &amp;lt; 2.18&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Before Camel 2.18, the Camel catalog is missing information about Camel Context. Fuse Tooling is now providing this missing piece of information and thus allow to edit Camel Context parameters in Properties view like for any other component. It is activated when there is no element selected on the diagram.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Parameters in Properties view for Camel context&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/camelContextPropertiesView.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;usability-improvement-progress-bar-when-changing-the-camel-version&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#usability-improvement-progress-bar-when-changing-the-camel-version&quot;&gt;&lt;/a&gt;Usability improvement: Progress bar when &quot;Changing the Camel version&quot;&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Since Fuse Tooling 10.1.0, it is possible to change the Camel version. In case the Camel version was not cached locally yet and for slow internet connections, this operation can take a while. There is now a progress bar to see the progress.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Switch Camel Version with Progress Bar&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/switchCamelVersionWithProgressBar.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.1.AM3 for Eclipse Oxygen.1</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.1.am3-for-oxygen.1.html</guid>
	<link>https://tools.jboss.org/blog/4.5.1.am3-for-oxygen.1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.1.AM3 (Developer Milestone 3) build for Eclipse Oxygen.1.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.1.AM3.html&quot;&gt;JBoss Tools 4.5.1 AM3&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.1.AM3.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift-io&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift-io&quot;&gt;&lt;/a&gt;OpenShift.io&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;openshift-io-login&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift-io-login&quot;&gt;&lt;/a&gt;OpenShift.io login&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is possible to login from JBoss Tools to OpenShift.io. A single account will be maintained per workspace. Once you initially logged onto OpenShift.io, all
      needed account information (tokens,…​) will be stored securely.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;There are two ways to login onto OpenShift.io:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;through the UI&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;via a third party service that will invoke the proper extension point&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;ui-based-login-to-openshift-io&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#ui-based-login-to-openshift-io&quot;&gt;&lt;/a&gt;UI based login to OpenShift.io&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the toobar, you should see a new icon &lt;span class=&quot;image&quot;&gt;&lt;img alt=&quot;Toolbar&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-16x16.png&quot; /&gt;&lt;/span&gt;. Click on it and it will launch the login.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If this is the first time you login to OpenShift.io or if you OpenShift.io account tokens are not valid anymore, you should see a browser launched with the following content:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio browser&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-browser.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enter your RHDP login and the browser will then auto-close and an extract (for security reasons) of the OpenShift.io token will be displayed:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio token dialog&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-token-dialog.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This dialog will be also shown if an OpenShift.io account was configured in the workspace and the account information is valid.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;via-extension-point&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#via-extension-point&quot;&gt;&lt;/a&gt;Via extension point&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The OpenShift.io integration can be invoked by a third party service through the &lt;code&gt;org.jboss.tools.openshift.io.code.tokenProvider&lt;/code&gt; extension point.
      This extension point will perform the same actions as the UI but basically will return an access token for OpenShift.io to the third party service.
      A detailed explanation of how to use this extension point is described here: &lt;a href=&quot;https://github.com/jbosstools/jbosstools-openshift/wiki/OpenShift.io-token-provider&quot;&gt;Wiki page&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can display the account information using the Eclipse &lt;code&gt;Jboss Tools → OpenShift.io&lt;/code&gt; preference node. If you workspace does not contain an OpenShift.io account yet, you should see the following:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio preferences&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-preferences.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you have a configured OpenShift.io account, you should see this:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio preferences1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-preferences1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;cdk-3-2-beta-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#cdk-3-2-beta-server-adapter&quot;&gt;&lt;/a&gt;CDK 3.2 Beta Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new server adapter has been added to support the next generation of CDK 3.2. This is Tech Preview in this release as CDK 3.2 is Beta.
      While the server adapter itself has limited functionality, it is able to start and stop the CDK virtual machine via its minishift binary.
      Simply hit Ctrl+3 (Cmd+3 on OSX) and type CDK, that will bring up a command to setup and/or launch the CDK server adapter.
      You should see the old CDK 2 server adapter along with the new CDK 3 one (labeled &lt;strong&gt;Red Hat Container Development Kit 3.2+&lt;/strong&gt; ).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;All you have to do is set the credentials for your Red Hat account, the location of the CDK’s minishift binary file, the type of virtualization hypervisor
      and an optional CDK profile name.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once you’re finished, a new CDK Server adapter will then be created and visible in the Servers view.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once the server is started, Docker and OpenShift connections should appear in their respective views, allowing the user to quickly create a new Openshift application and begin developing their AwesomeApp in a highly-replicatable environment.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter3.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter4&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter4.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock warning&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-warning&quot; title=&quot;Warning&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      This is Tech Preview. The implementation is subject to change, may not work with next releases of CDK 3.2 and testing has been limited.
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;global-beans-improve-support-for-bean-references&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#global-beans-improve-support-for-bean-references&quot;&gt;&lt;/a&gt;Global Beans: improve support for Bean references&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is now possible to set Bean references from User Interface when creating a new Bean:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Create Factory Bean Reference&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/factoryBeanReference.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Editing Bean references is also now available on the properties view when editing an existing Bean:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Edit Factory Bean Reference&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/factoryBeanReference-propertiesView.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Additional validation has been added to help users avoid mixing Beans defined with class names and Beans defined referencing other beans.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.1.AM2 for Eclipse Oxygen.1</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.1.am2-for-oxygen.1.html</guid>
	<link>https://tools.jboss.org/blog/4.5.1.am2-for-oxygen.1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.1.AM2 (Developer Milestone 2) build for Eclipse Oxygen.1.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.1.AM2.html&quot;&gt;JBoss Tools 4.5.1 AM2&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.0.AM2.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift-3&quot;&gt;&lt;/a&gt;OpenShift 3&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;new-command-to-tune-resource-limits&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#new-command-to-tune-resource-limits&quot;&gt;&lt;/a&gt;New command to tune resource limits&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new command has been added to tune resource limits (CPU, memory) on an OpenShift deployment.
      Itâ€™s available for a Service, a DeploymentConfig, a ReplicationController or a Pod.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To activate it, go the the OpenShift explorer, select the OpenShift resource, right click and select &lt;code&gt;Edit resource limits&lt;/code&gt;.
      The following dialog will show up:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;edit resource limits&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/edit-resource-limits.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;After you changed the resource limits for this deployment, it will be updated and new pods will be spawned (not for ReplicationController)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;edit resource limits1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/edit-resource-limits1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;discover-docker-registry-url-for-openshift-connections&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#discover-docker-registry-url-for-openshift-connections&quot;&gt;&lt;/a&gt;Discover Docker registry URL for OpenShift connections&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When an OpenShift connection is created, the Docker registry URL is empty. When the CDK is started through the CDK server adapter, an OpenShift
      connection is created or updated if a matching OpenShift connection is found. But what if you have several OpenShift connections, the remaining ones
      will be left with the empty URL.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find the matching Docker registry URL when editing the OpenShift connection through the &lt;code&gt;Discover&lt;/code&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;edit connection discover&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/edit-connection-discover.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click on the &lt;code&gt;Discover&lt;/code&gt; button and the Docker registry URL will be filled if a matching started CDK server adapter is found:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;edit connection discover1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/edit-connection-discover1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;cdi-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#cdi-tools&quot;&gt;&lt;/a&gt;CDI Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;cdi-2-0&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#cdi-2-0&quot;&gt;&lt;/a&gt;CDI 2.0&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;CDI Tools now support CDI 2.0 projects. If your CDI project (with enabled CDI support) has CDI 2.0 jars in its classpath, CDI Tools will recognize it as CDI 2.0 project automatically.
      There is no need to use any special settings to distinguish CDI 1.0 or CDI 1.1 from CDI 2.0 in CDI Tools.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The new javax.enterprise.event.ObservesAsync is now being validated according to the CDI specifications.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;apache-karaf-4-x-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#apache-karaf-4-x-server-adapter&quot;&gt;&lt;/a&gt;Apache Karaf 4.x Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We are happy to announce the addition of new Apache Karaf server adapters. You can now download and install Apache Karaf 4.0 and 4.1 from within your development environment.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Apache Karaf 4x Server Adapters&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/karaf4xadapters.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;switch-apache-camel-version&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#switch-apache-camel-version&quot;&gt;&lt;/a&gt;Switch Apache Camel Version&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now change the Apache Camel version used in your project. To do that you invoke the context menu of the project in the project explorer and navigate into the &lt;code&gt;Configure&lt;/code&gt; menu. There you will find the menu entry called &lt;code&gt;Change Camel Version&lt;/code&gt; which
      will guide you through this process.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Switch Camel Version&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/switchcamelversion.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-validation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improved-validation&quot;&gt;&lt;/a&gt;Improved Validation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The validation in the editor has been improved to find containers which lack mandatory child elements. (for instance a Choice without a child element)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Improved validation&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/containerchildvalidation.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.21.2.AM1 for Eclipse 2021-09</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.21.2.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.21.2.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.21.2.AM1 (Developer Milestone 1) build for Eclipse 2021-09.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2021-09/4.21.2.AM1.html&quot;&gt;JBoss Tools 4.21.2.AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.21.2.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;quarkus-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus-tools&quot;&gt;&lt;/a&gt;Quarkus Tools&lt;/h3&gt;
      
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;quarkus-stream-selection-in-the-new-quarkus-project-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus-stream-selection-in-the-new-quarkus-project-wizard&quot;&gt;&lt;/a&gt;Quarkus stream selection in the new Quarkus project wizard&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When a new Quarkus project/module is to be generated, it is now possible to select the Quarkus stream (see &lt;a href=&quot;https://quarkus.io/blog/quarkus-2x-platform-quarkiverse-registry/&quot;&gt;this article&lt;/a&gt;) on which the generated application will be based on.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;By default, the recommended (latest release) will be selected but you can choose another one:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus31&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus31.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;enhanced-code-completion-in-java-files&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#enhanced-code-completion-in-java-files&quot;&gt;&lt;/a&gt;Enhanced code completion in Java files&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When you want to define a fallback method thanks to the &lt;code&gt;@Fallback&lt;/code&gt; annotation from MicroProfile Fault Tolerance, the code completion is activated on the &lt;code&gt;fallbackMethod&lt;/code&gt; member and will propose you available target methods.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus32&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus32.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;quarkus-launch-configuration-workspace-resolution&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus-launch-configuration-workspace-resolution&quot;&gt;&lt;/a&gt;Quarkus launch configuration workspace resolution&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When you define a Quarkus launch/debug configuration, it is linked to a specific project from your workspace. If this project has a dependency on another project from the workspace, it will be resolved against the workspace and you donâ€™t have to install the dependency in the local Maven/Gradle cache so that it can be resolved.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.6 runtime provider now incorporates Hibernate Core version 5.6.1.Final and Hibernate Tools version 5.6.1.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.8.Final and Hibernate Tools version 5.4.8.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.24.Final and Hibernate Tools version 5.3.24.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.21.0.AM1 for Eclipse 2021-09</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.21.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.21.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.21.0.AM1 (Developer Milestone 1) build for Eclipse 2021-09.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2021-09/4.21.0.AM1.html&quot;&gt;JBoss Tools 4.21.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.21.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;operator-based-services&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#operator-based-services&quot;&gt;&lt;/a&gt;Operator based services&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When developing cloud native applications on OpenShift, developer may need to
      launch services (databases, messaging system,…​) that the application under
      development may need to connect to. The OpenShift tooling allowed to launch such
      services but it was based on the service catalog which is not available anymore on OpenShift 4.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The new feature is based on operators which is the devops way of installing and
      managing software on Kubernetes clusters. So when you want to launch a service
      for your application, you will have to choose from the list of installed
      operators on your cluster and then select type of deployment you want.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the following example, there are two operators installed on our cluster:
      the &lt;a href=&quot;https://strimzi.io&quot;&gt;Strimzi&lt;/a&gt; operator for setting up Kafka clusters on Kubernetes
      and a Postgresql operator.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For each operator, we can select the type of deployment we want to setup.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;operator based services1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/operator-based-services1.gif&quot; width=&quot;80%&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;After you’ve entered the name of your service, it will appear in the application explorer view:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;operator based services2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/operator-based-services2.png&quot; width=&quot;80%&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.5 runtime provider now incorporates Hibernate Core version 5.5.7.Final and Hibernate Tools version 5.5.7.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.22.Final and Hibernate Tools version 5.3.22.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.19.1.AM1 for Eclipse 2021-03</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.19.1.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.19.1.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.19.1.AM1 (Developer Milestone 1) build for Eclipse 2021-03.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2021-03/4.19.1.AM1.html&quot;&gt;JBoss Tools 4.19.1 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.19.1.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-openshift-application-explorer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#improved-openshift-application-explorer&quot;&gt;&lt;/a&gt;Improved OpenShift Application explorer&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When the OpenShift cluster has no applications or projects, user is required to create them. However,
      it may not be obvious for the user that the corresponding function is available from a sub menu of the
      New context menu.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So now, a link will be provided within the tree with an explanation message.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If no projects are available, user will be guided to create one:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer enhanced navigation1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer-enhanced-navigation1.gif&quot; width=&quot;80%&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If no applications are available in a project, user will be guided to create a new component:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;application explorer enhanced navigation2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/application-explorer-enhanced-navigation2.gif&quot; width=&quot;80%&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.32.Final and Hibernate Tools version 5.4.32.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.19.0.AM1 for Eclipse 2021-03</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.19.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.19.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.19.0.AM1 (Developer Milestone 1) build for Eclipse 2021-03.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2021-03/4.19.0.AM1.html&quot;&gt;JBoss Tools 4.19.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.19.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;browser-based-login-to-an-openshift-cluster&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#browser-based-login-to-an-openshift-cluster&quot;&gt;&lt;/a&gt;Browser based login to an OpenShift cluster&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When it comes to login to a cluster, OpenShift Tools supported two different authentication mechanisms:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;user/password&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;token&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The drawback is that it does not cover clusters where a more enhanced and modern authentication infrastructure is in place. So it is now possible to login to the cluster through an embedded web browser.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In order to use it, go to the Login context menu from the Application Explorer view:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;weblogin1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/weblogin1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click on the &lt;code&gt;Retrieve token&lt;/code&gt; button and an embedded web browser will be displayed:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;weblogin2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/weblogin2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Complete the workflow until you see a page that contains &lt;code&gt;Display Token&lt;/code&gt;:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;weblogin3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/weblogin3.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click on &lt;code&gt;Display Token&lt;/code&gt;:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The web browser is automatically closed and youâ€™ll notice that the retrieved token has been set in the original dialog:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;weblogin4&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/weblogin4.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;devfile-registries-management&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#devfile-registries-management&quot;&gt;&lt;/a&gt;Devfile registries management&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Since JBoss Tools 4.18.0.Final, the preferred way of developing components is now based on devfile, which is a YAML file that describe how to build the component and if required, launch other containers with other containers.
      When you create a component, you need to specify a devfile that describe your component. So either you component source contains its own devfile or you need to pick a devfile that is related to your component.
      In the second case, OpenShift Tools supports devfile registries that contains a set of different devfiles. There is a default registry (&lt;a class=&quot;bare&quot; href=&quot;https://github.com/odo-devfiles/registry&quot;&gt;https://github.com/odo-devfiles/registry&lt;/a&gt;) but you may want to have your own registries. It is now possible to add and remove registries as you want.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The registries are displayed in the OpenShift Application Explorer under the &lt;code&gt;Devfile registries&lt;/code&gt; node:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;registries1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/registries1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please note that expanding the registry node will list all devfiles from that registry with a description:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;registries2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/registries2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A context menu on the &lt;code&gt;Devfile registries&lt;/code&gt; node allows you to add new registries, and on the registry node to delete it.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;devfile-enhanced-editing-experience&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#devfile-enhanced-editing-experience&quot;&gt;&lt;/a&gt;Devfile enhanced editing experience&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Although devfile registries can provide ready-to-use devfiles, there may be some advanced cases where users need to write their own devfile. As the syntax is quite complex, the YAML editor has been completed so that to provide:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;syntax validation&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;content assist&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-python-based-components&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#support-for-python-based-components&quot;&gt;&lt;/a&gt;Support for Python based components&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Python-based components were supported but debugging was not possible. This release brings integration between the Eclipse debugger and the Python runtime.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.29.Final and Hibernate Tools version 5.4.29a.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;server-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#server-tools&quot;&gt;&lt;/a&gt;Server Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;wildfly-23-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#wildfly-23-server-adapter&quot;&gt;&lt;/a&gt;Wildfly 23 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A server adapter has been added to work with Wildfly 23.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eap-7-4-beta-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eap-7-4-beta-server-adapter&quot;&gt;&lt;/a&gt;EAP 7.4 Beta Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The server adapter has been adapted to work with EAP 7.4 Beta.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.18.0.AM1 for Eclipse 2020-09</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.18.0.am1.html</guid>
	<link>https://tools.jboss.org/blog/4.18.0.am1.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.18.0.AM1 (Developer Milestone 1) build for Eclipse 2020-09.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/2020-09/4.18.0.AM1.html&quot;&gt;JBoss Tools 4.18.0 AM1&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.18.0.AM1.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;quarkus&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#quarkus&quot;&gt;&lt;/a&gt;Quarkus&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-codestarts-in-new-quarkus-project-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#support-for-codestarts-in-new-quarkus-project-wizard&quot;&gt;&lt;/a&gt;Support for codestarts in New Quarkus project wizard&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;code.quarkus.io has added a new option codestart that allows extension that support
      this new feature to contribute sample code in the generated project. It is enabled
      by default and is accessible from the second step in the wizard:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;quarkus30&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus30.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;devfile-based-deployments&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#devfile-based-deployments&quot;&gt;&lt;/a&gt;Devfile based deployments&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Application Explorer view is now based on odo 2.x, which allows deployments
      to be based on devfile (developer oriented manifest file). The components from
      the default odo registry are listed with legacy S2I components:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;devfile&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/devfile.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is also now possible to bootstrap from an empty project as the components
      from the registry may expose starter projects (sample code that will initialize
      your empty project).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;devfile1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/devfile1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;hibernate-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#hibernate-tools&quot;&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime  providers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;runtime-provider-updates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#runtime-provider-updates&quot;&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.25.Final and Hibernate Tools version 5.4.25.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.20.Final and Hibernate Tools version 5.3.20.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;server-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#server-tools&quot;&gt;&lt;/a&gt;Server Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;wildfly-22-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#wildfly-22-server-adapter&quot;&gt;&lt;/a&gt;Wildfly 22 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A server adapter has been added to work with Wildfly 22.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;cdi-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#cdi-tools&quot;&gt;&lt;/a&gt;CDI Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eclipse-microprofile-support&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#eclipse-microprofile-support&quot;&gt;&lt;/a&gt;Eclipse Microprofile support&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;CDI Tools now support Eclipse Microprofile. Eclipse Microprofile related assets
      are checked against @Inject injections points and are validated according to rules
      specified in various Eclipse Microprofile specifications.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;forge-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-tools&quot;&gt;&lt;/a&gt;Forge Tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;forge-runtime-updated-to-3-9-8-final&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://tools.jboss.org/blog/news.atom#forge-runtime-updated-to-3-9-8-final&quot;&gt;&lt;/a&gt;Forge Runtime updated to 3.9.8.Final&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The included Forge runtime is now 3.9.8.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 30 Dec 2021 08:47:35 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Conditionally direct retrieving API calls to either live or twin channel</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2021-12-22-live-channel-condition.html</guid>
	<link>https://www.eclipse.org/ditto/2021-12-22-live-channel-condition.html</link>
	<description>&lt;p&gt;After the added option to target the &lt;a href=&quot;https://www.eclipse.org/ditto/protocol-twinlive.html#live&quot;&gt;live channel&lt;/a&gt; by adding the &lt;code class=&quot;highlighter-rouge&quot;&gt;channel=live&lt;/code&gt; to HTTP
requests (see also &lt;a href=&quot;https://www.eclipse.org/ditto/2021-12-20-http-live-channel.html&quot;&gt;blog post about “HTTP live channel”&lt;/a&gt;), Eclipse Ditto 
&lt;strong&gt;version 2.3.0&lt;/strong&gt; will in addition support to define a 
&lt;a href=&quot;https://www.eclipse.org/ditto/basic-conditional-requests.html#live-channel-condition&quot;&gt;live channel condition&lt;/a&gt;, which, when evaluating to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;, 
will retrieve data from a device via the live channel, or fall back to the persisted &lt;a href=&quot;https://www.eclipse.org/ditto/protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt; 
otherwise.&lt;/p&gt;

&lt;div class=&quot;alert alert-info&quot;&gt;&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt; &lt;b&gt;Note:&lt;/b&gt; In order to use the live channel, the device receiving live commands must be able to understand
    and answer in &lt;a href=&quot;https://www.eclipse.org/ditto/protocol-specification.html&quot;&gt;Ditto Protocol messages&lt;/a&gt; with the
&lt;a href=&quot;https://www.eclipse.org/ditto/protocol-specification-topic.html#live-channel&quot;&gt;topic’s channel being &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt;&lt;/a&gt;.&lt;/div&gt;

&lt;h2 id=&quot;relying-on-conditions&quot;&gt;Relying on conditions&lt;/h2&gt;

&lt;p&gt;Ditto 2.1.0 added support for &lt;a href=&quot;https://www.eclipse.org/ditto/basic-conditional-requests.html&quot;&gt;conditional requests&lt;/a&gt; by e.g. specifying a &lt;code class=&quot;highlighter-rouge&quot;&gt;condition&lt;/code&gt;
query parameter for HTTP API calls.&lt;/p&gt;

&lt;p&gt;This mechanism can now additionally be used to formulate a condition through the query parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;live-channel-condition&lt;/code&gt;
whether data shall be retrieved via the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel from the device.&lt;/p&gt;

&lt;h2 id=&quot;optionally-update-twin-automatically-based-on-retrieved-live-data&quot;&gt;Optionally update twin automatically based on retrieved live data&lt;/h2&gt;

&lt;p&gt;Whenever a device reports back its actual sensor readings, one can be sure that this data is the most recent “truth”.&lt;br /&gt;
It therefore is obvious to use that data in order to update the persisted twin managed by Ditto.&lt;/p&gt;

&lt;p&gt;This can optionally be enabled by configuring the new 
&lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-mapping.html#updatetwinwithliveresponse-mapper&quot;&gt;UpdateTwinWithLiveResponse mapper&lt;/a&gt; in a Ditto 
&lt;a href=&quot;https://www.eclipse.org/ditto/basic-connections.html&quot;&gt;managed connection&lt;/a&gt;.&lt;br /&gt;
This mapper will transform each “live response” retrieving and transporting data from a device to an additional 
&lt;a href=&quot;https://www.eclipse.org/ditto/protocol-specification-things-merge.html&quot;&gt;merge command&lt;/a&gt; modifying the twin with that &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; data.&lt;/p&gt;

&lt;h2 id=&quot;example-device-is-marked-to-be-polled&quot;&gt;Example: Device is marked to be polled&lt;/h2&gt;

&lt;p&gt;This is for example helpful if the device does not push its newest sensor readings actively into its twin 
representation managed by Ditto, but relies on being polled for the newest readings.&lt;br /&gt;
In that case, the twin could be marked e.g. as &lt;code class=&quot;highlighter-rouge&quot;&gt;attributes/polling-mode=true&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thingId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-polling-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;policyId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-polling-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;attributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;polling-mode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temperature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;23.42&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When an IoT application now needs to retrieve the latest temperature value, it can formulate a query (e.g. in HTTP):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /api/2/things/my.namespace:my-polling-device-1/features/temperature/properties/value
  ?live-channel-condition=eq(attributes/polling-mode,true)
  &amp;amp;timeout=10s
  &amp;amp;live-channel-timeout-strategy=use-twin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The specified &lt;code class=&quot;highlighter-rouge&quot;&gt;live-channel-condition&lt;/code&gt; will evaluate to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;, meaning that the retrieve is transformed to a 
&lt;a href=&quot;https://www.eclipse.org/ditto/protocol-twinlive.html#live&quot;&gt;live command&lt;/a&gt; and sent to the device, e.g. connected via a 
&lt;a href=&quot;https://www.eclipse.org/ditto/basic-connections.html&quot;&gt;managed connection&lt;/a&gt;.&lt;br /&gt;
Upon receiving the “live retrieve” at the device, the device can create a command response correlated with the same
&lt;code class=&quot;highlighter-rouge&quot;&gt;correlation-id&lt;/code&gt; and send it back to Ditto with the current value.&lt;br /&gt;
This value is then returned as result of the &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;, the HTTP response header &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt; will indicate that the data was
sent by the device by having the value &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If the device does not answer with a correctly correlated response within the given &lt;code class=&quot;highlighter-rouge&quot;&gt;timeout&lt;/code&gt;, the request will fall back
to the &lt;a href=&quot;https://www.eclipse.org/ditto/protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt; channel, retrieving the data from the last known persisted temperature value 
in the twin managed by Ditto.&lt;br /&gt;
The HTTP response header &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt; will indicate that the data was received by the persisted twin by having the value 
&lt;code class=&quot;highlighter-rouge&quot;&gt;twin&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;example-device-contains-a-connection-status&quot;&gt;Example: Device contains a connection status&lt;/h2&gt;

&lt;p&gt;Another perfect fit for that feature is when the device (or the device connectivity layer) is able to reflect the 
connection status of the device in the Ditto managed twin.&lt;br /&gt;
When e.g. using &lt;a href=&quot;https://www.eclipse.org/hono/&quot;&gt;Eclipse Hono&lt;/a&gt; in combination with Ditto, the 
&lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-mapping.html#connectionstatus-mapper&quot;&gt;ConnectionStatus&lt;/a&gt; mapper can be configured in a Ditto 
&lt;a href=&quot;https://www.eclipse.org/ditto/basic-connections.html&quot;&gt;managed connection&lt;/a&gt; which will automatically update a &lt;a href=&quot;https://www.eclipse.org/ditto/basic-thing.html#features&quot;&gt;feature&lt;/a&gt; in
the twin based on Hono’s &lt;a href=&quot;https://www.eclipse.org/hono/docs/concepts/device-notifications/&quot;&gt;device notifications&lt;/a&gt; 
reflecting a &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;readySince&quot;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;readyUntil&quot;&lt;/code&gt; timestamp:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thingId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-connection-aware-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;policyId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-connection-aware-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ConnectionStatus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto:ConnectionStatus:1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readySince&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2021-12-22T14:16:18Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readyUntil&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;9999-12-31T23:59:59Z&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temperature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;23.42&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In that case, the &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;readyUntil&quot;&lt;/code&gt; will contain a timestamp how long the device will be ready to receive commands, the 
timestamp &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;9999-12-31T23:59:59Z&quot;&lt;/code&gt; being an alias for indefinitely (once the device disconnects, e.g. from the MQTT 
adapter of Eclipse Hono, this timestamp will be set to the disconnection time).&lt;/p&gt;

&lt;p&gt;Utilizing this “connection awareness”, we can now easily define a query to retrieve data from the real device when it 
is connected and use the persisted &lt;code class=&quot;highlighter-rouge&quot;&gt;twin&lt;/code&gt; when it is not connected or runs into a timeout.&lt;br /&gt;
For using the current time as ISO-8601 timestamp, a new placeholder &lt;code class=&quot;highlighter-rouge&quot;&gt;time:now&lt;/code&gt; was also introduced, usable in RQL
expressions everywhere in Ditto:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /api/2/things/my.namespace:my-connection-aware-device-1/features/temperature/properties/value
  ?live-channel-condition=gt(features/ConnectionStatus/properties/status/readyUntil,time:now)
  &amp;amp;timeout=10s
  &amp;amp;live-channel-timeout-strategy=use-twin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of course every other field in the persisted twin may also be used in the &lt;code class=&quot;highlighter-rouge&quot;&gt;live-channel-condition&lt;/code&gt;, if your devices e.g.
are aware if they are connected or not by other means (e.g. by setting an attribute), this can be utilized as well.&lt;/p&gt;

&lt;h2 id=&quot;feedback&quot;&gt;Feedback?&lt;/h2&gt;

&lt;p&gt;Please &lt;a href=&quot;https://www.eclipse.org/ditto/feedback.html&quot;&gt;get in touch&lt;/a&gt; if you have feedback or questions towards this new functionality.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt; 
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Frank Appel: Xmas Clean Sheet Update (0.9)</title>
	<guid isPermaLink="false">https://www.codeaffine.com/?p=138561</guid>
	<link>https://www.codeaffine.com/2021/12/21/xmas-clean-sheet-update/</link>
	<description>&lt;p&gt;Written by &lt;a href=&quot;https://www.codeaffine.com/author/fappel/&quot; rel=&quot;nofollow&quot;&gt;Frank Appel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Xmas Clean Sheet update introduces a new theme derivate. Welcome the glare effect reducing Cream theme! &lt;/p&gt;


&lt;div class=&quot;notification lock cannothide&quot;&gt;&lt;div class=&quot;boximg infoimg&quot;&gt;&lt;/div&gt;&lt;h2&gt;The Clean Sheet Eclipse Design&lt;/h2&gt;

In case you've missed out on the topic and you are wondering what I'm talking about, here is a screenshot of my real world setup using the Clean Sheet theme (click on the image to enlarge).

&lt;a href=&quot;http://fappel.github.io/xiliary/clean-sheet-screenshot.html&quot;&gt;&lt;img alt=&quot;Eclipse IDE Look and Feel: Clean Sheet Screenshot&quot; class=&quot;alignnone size-full wp-image-12279&quot; height=&quot;408&quot; src=&quot;https://www.codeaffine.com/wp-content/uploads/2015/11/clean-sheet-eclipse-theme.png&quot; width=&quot;850&quot; /&gt;&lt;/a&gt;

For more information please refer to the features landing page at &lt;a href=&quot;http://fappel.github.io/xiliary/clean-sheet.html&quot; target=&quot;_blank&quot;&gt;http://fappel.github.io/xiliary/clean-sheet.html&lt;/a&gt;, read the introductory Clean Sheet feature description &lt;a href=&quot;https://www.codeaffine.com/2015/11/04/clean-sheet-an-ergonomic-eclipse-theme-for-windows-10/&quot;&gt;blog post&lt;/a&gt;, and check out the &lt;a href=&quot;http://fappel.github.io/xiliary/clean-sheet-new-and-noteworthy.html&quot; target=&quot;_blank&quot;&gt;New &amp;amp; Noteworthy&lt;/a&gt; page.&lt;/div&gt;



&lt;p&gt;&lt;/p&gt;



&lt;h2&gt;Introducing Cream&lt;/h2&gt;



&lt;p&gt;The original &lt;a href=&quot;https://www.codeaffine.com/2015/11/04/clean-sheet-an-ergonomic-eclipse-theme-for-windows-10/&quot;&gt;Clean Sheet&lt;/a&gt; theme can sometimes still be susceptible to glaring effects. How much depends among other things on the monitor brightness, the ambient lighting, and the sensitivity of the user’s eye. The Cream theme reduces the background color’s proportion of blue. As a result, glare is diminished. Otherwise, it has the same feature set as the Clean Sheet theme and is available on Windows and Mac. If you are experiencing interfering glaring effects on bright monitor screens while working with light themes on Eclipse, consider giving Cream a try. &lt;/p&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter size-full&quot;&gt;&lt;a href=&quot;http://fappel.github.io/xiliary/cream-screenshot.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-138565&quot; height=&quot;375&quot; src=&quot;https://www.codeaffine.com/wp-content/uploads/2021/12/cream-cut.png&quot; width=&quot;451&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Click on the image for full size screenshot&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;&lt;/p&gt;



&lt;h2&gt;Discontinuation of Dark Theme and Windows Theme with Flat-Scrollbars&lt;/h2&gt;



&lt;p&gt;With the intent to reduce maintenance effort, the Dark and Windows themes are no longer available. There are Eclipse dark themes that incorporate the Clean Sheet &lt;a href=&quot;https://www.codeaffine.com/2014/12/17/sacrilege-custom-swt-scrollbar/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Flat-Scrollbars&lt;/a&gt; technology, for example, the &lt;a href=&quot;https://github.com/PyvesB/eclipse-planet-themes&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;eclipse-planet-themes&lt;/a&gt; or the &lt;a href=&quot;https://www.genuitec.com/products/devstyle/&quot; rel=&quot;noreferrer noopener nofollow&quot; target=&quot;_blank&quot;&gt;DevStyle&lt;/a&gt; theme. As there is a new Eclipse default theme available now for a while, the windows 7 theme adaption looked pretty much dated …&lt;/p&gt;



&lt;h2&gt;Bug Fixes&lt;/h2&gt;



&lt;p&gt;This update resolves an oddment of the ruler numbers issue fix &lt;a href=&quot;https://github.com/fappel/xiliary/issues/87&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;#87&lt;/a&gt;. Kudos to &lt;a href=&quot;https://twitter.com/_Pyves&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Pierre-Yves B.&lt;/a&gt; for contributing the initial fixes. Furthermore, there is a syntax highlighting for keywords adjustment to support Java 16 &lt;em&gt;record&lt;/em&gt;s. Please refer to issues &lt;a href=&quot;https://github.com/fappel/xiliary/issues/103&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;#103&lt;/a&gt; and &lt;a href=&quot;https://github.com/fappel/xiliary/issues/107&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;#107&lt;/a&gt; for more details.&lt;/p&gt;


&lt;h2&gt;Clean Sheet / Cream Installation&lt;/h2&gt;

&lt;p&gt;Drag the 'Install' link below to your running Eclipse instance&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;drag&quot; href=&quot;http://marketplace.eclipse.org/marketplace-client-intro?mpc_install=2588223&quot; title=&quot;Drag to your running Eclipse* workspace. *Requires Eclipse Marketplace Client&quot;&gt;&lt;img alt=&quot;Drag to your running Eclipse* workspace. *Requires Eclipse Marketplace Client&quot; class=&quot;img-responsive&quot; src=&quot;https://marketplace.eclipse.org/sites/all/themes/solstice/public/images/marketplace/btn-install.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;Select Help &amp;gt; Install New Software.../Check for Updates.&lt;br /&gt;
P2 repository software site: @ &lt;a href=&quot;http://fappel.github.io/xiliary/&quot;&gt;http://fappel.github.io/xiliary/&lt;/a&gt;&lt;br /&gt;
Feature: Code Affine Theme&lt;/p&gt;

&lt;p&gt;After feature installation and workbench restart select the ‘Clean Sheet’ / 'Cream' theme:&lt;br /&gt;
Preferences: General &amp;gt; Appearance &amp;gt; Theme: Clean Sheet / Cream&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;



&lt;h2&gt;Dark Mode vs. Light Mode: Which Is Better?&lt;/h2&gt;



&lt;p&gt;Recently, I stumbled across an interesting research article by the &lt;a href=&quot;https://www.nngroup.com/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Nielsen Norman Group&lt;/a&gt; in the context of the work on Cream. It examines the advantages and disadvantages of dark and light modes. So, in case you wonder how much of the trend toward dark UI modes is justified from a scientific point of view I recommend the read (&lt;a href=&quot;https://www.nngroup.com/articles/dark-mode/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;https://www.nngroup.com/articles/dark-mode/&lt;/a&gt;).&lt;/p&gt;



&lt;h2&gt;Finally…&lt;/h2&gt;



&lt;p&gt;Of course, it’s interesting to hear suggestions or find out about further potential issues that need to be resolved. Feel free to use the &lt;a href=&quot;https://github.com/fappel/xiliary/issues&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Xiliary Issue Tracker&lt;/a&gt; or the comment section below for reporting.&lt;/p&gt;



&lt;p&gt;With this in mind, I’d like to thank all the new and long term Clean Sheet / Cream adopters for the support and wish everybody a Merry Christmas and a Happy New Year :-)&lt;/p&gt;



&lt;p class=&quot;has-small-font-size&quot;&gt;Title Image: © Depositphotos.com/zphoto&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://www.codeaffine.com/2021/12/21/xmas-clean-sheet-update/&quot; rel=&quot;nofollow&quot;&gt;Xmas Clean Sheet Update (0.9)&lt;/a&gt; appeared first on &lt;a href=&quot;https://www.codeaffine.com&quot; rel=&quot;nofollow&quot;&gt;Code Affine&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 21 Dec 2021 16:29:45 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Migrating Eclipse-based Tools/Plugins to Eclipse Theia or VSCode</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=45394</guid>
	<link>https://eclipsesource.com/blogs/2021/12/21/migrating-eclipse-based-tools-plugins-to-eclipse-theia-or-vscode/</link>
	<description>&lt;p&gt;Do you have an existing tool based on Eclipse RCP or a plugin for the Eclipse Desktop IDE? Do you wonder...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2021/12/21/migrating-eclipse-based-tools-plugins-to-eclipse-theia-or-vscode/&quot; rel=&quot;nofollow&quot;&gt;Migrating Eclipse-based Tools/Plugins to Eclipse Theia or VSCode&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 21 Dec 2021 13:48:24 +0000</pubDate>
</item>
<item>
	<title>Marc Nuri: Build Kubernetes controllers with Fabric8 Kubernetes Client, Quarkus, and JKube</title>
	<guid isPermaLink="true">https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm</guid>
	<link>https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm</link>
	<description>&lt;div&gt;&lt;a href=&quot;https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm&quot;&gt;Original post&lt;/a&gt;&lt;/div&gt;
    &lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm/#introduction&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;introduction&quot;&gt;&lt;/span&gt;Introduction&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/starbuxman&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://twitter.com/starbuxman&quot;&gt;Josh Long&lt;/a&gt;, one of my favorite Java champions and advocates, has recently published an &lt;a href=&quot;https://joshlong.com/jl/blogPost/kubernetes-java-client-and-spring-native-and-graalvm.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://joshlong.com/jl/blogPost/kubernetes-java-client-and-spring-native-and-graalvm.html&quot;&gt;article&lt;/a&gt; showing how to create a simple &lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/kubernetes-operator-vs-controller&quot; title=&quot;Kubernetes Operator vs. Controller&quot;&gt;Kubernetes controller&lt;/a&gt; using Spring Boot Native and the Official Kubernetes Client.&lt;/p&gt;&lt;p&gt;Since this is one of my favorite topics, and I'm currently working on the Fabric8 Kubernetes Client, I thought it would be nice to create a port of his example using &lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/kubernetes-client-java-fabric8-introduction&quot; title=&quot;Kubernetes Client for Java: Fabric8 introduction&quot;&gt;Fabric8 Kubernetes Client&lt;/a&gt; , &lt;a class=&quot;tag-link &quot; href=&quot;https://blog.marcnuri.com/tag/quarkus&quot; title=&quot;Quarkus&quot;&gt;Quarkus&lt;/a&gt; and &lt;a class=&quot;tag-link &quot; href=&quot;https://blog.marcnuri.com/tag/jkube&quot; title=&quot;JKube&quot;&gt;Eclipse JKube&lt;/a&gt; instead. The structure of the original post has also been replicated so that the differences for each part can be easily spotted.&lt;/p&gt;&lt;p&gt;Please, don't take this post as an &lt;code&gt;xxx&lt;/code&gt; is better than &lt;code&gt;zzz&lt;/code&gt; article. The intention of the article is to showcase the available alternatives so that developers can mix and match whatever they like. I think that we are living a great moment for Java and that having so many choices for anything cloud-related is making Java shine again.&lt;/p&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm/#undefined&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span&gt;&lt;/span&gt;Fabric8 Kubernetes Client&lt;/h2&gt;&lt;p&gt;The &lt;a class=&quot;tag-link &quot; href=&quot;https://blog.marcnuri.com/tag/fabric8&quot; title=&quot;Fabric8&quot;&gt;Fabric8&lt;/a&gt; Kubernetes Client is an automatically code-generated Java client for the Kubernetes API. Quarkus has a &lt;a href=&quot;https://quarkus.io/guides/kubernetes-client&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://quarkus.io/guides/kubernetes-client&quot;&gt;built-in extension&lt;/a&gt; to support the Fabric8 client both in JVM and native mode, so your only concern should be to add the extension's dependency (and taking a little bit of &lt;a href=&quot;https://quarkus.io/guides/kubernetes-client#note-on-generic-types&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://quarkus.io/guides/kubernetes-client#note-on-generic-types&quot;&gt;care with generics&lt;/a&gt;).&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;dependency&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;io.quarkus&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;quarkus-kubernetes-client&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;dependency&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm/#example-kubernetescontrollerapplication&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;example-kubernetescontrollerapplication&quot;&gt;&lt;/span&gt;Example KubernetesControllerApplication&lt;/h2&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-java&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;package&lt;/span&gt;&lt;span&gt; com.marcnuri.demo.booternetes.port;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;3&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.fabric8.kubernetes.api.model.ListOptionsBuilder;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;4&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.fabric8.kubernetes.api.model.Node;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;5&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.fabric8.kubernetes.api.model.Pod;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;6&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.fabric8.kubernetes.client.KubernetesClient;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;7&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.fabric8.kubernetes.client.KubernetesClientException;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;8&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.fabric8.kubernetes.client.informers.ResourceEventHandler;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;9&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.fabric8.kubernetes.client.informers.SharedIndexInformer;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;10&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.fabric8.kubernetes.client.informers.SharedInformerFactory;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;11&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.quarkus.runtime.Quarkus;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;12&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.quarkus.runtime.QuarkusApplication;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;13&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.quarkus.runtime.ShutdownEvent;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;14&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; io.quarkus.runtime.annotations.QuarkusMain;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;15&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;16&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; javax.enterprise.context.ApplicationScoped;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;17&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; javax.enterprise.event.Observes;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;18&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; javax.inject.Inject;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;19&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; javax.inject.Singleton;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;20&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;import&lt;/span&gt;&lt;span&gt; java.util.Objects;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;21&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;22&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@QuarkusMain&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;23&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;public&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;color: #c26230;&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;hljs-class&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;color: #ffc66d;&quot;&gt;KubernetesControllerApplication&lt;/span&gt;&lt;span class=&quot;hljs-class&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;color: #c26230;&quot;&gt;implements&lt;/span&gt;&lt;span class=&quot;hljs-class&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;color: #ffc66d;&quot;&gt;QuarkusApplication&lt;/span&gt;&lt;span class=&quot;hljs-class&quot;&gt; &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;24&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;25&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Inject&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;26&lt;/span&gt;  KubernetesClient client;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;27&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Inject&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;28&lt;/span&gt;  SharedInformerFactory sharedInformerFactory;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;29&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Inject&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;30&lt;/span&gt;  ResourceEventHandler&amp;lt;Node&amp;gt; nodeEventHandler;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;31&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;32&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Override&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;33&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #ffc66d;&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt;(String... args)&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;throws&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; Exception &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;34&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;35&lt;/span&gt;&lt;span&gt;      client.nodes().list(&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;new&lt;/span&gt;&lt;span&gt; ListOptionsBuilder().withLimit(&lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;1L&lt;/span&gt;&lt;span&gt;).build());
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;36&lt;/span&gt;&lt;span&gt;    } &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;catch&lt;/span&gt;&lt;span&gt; (KubernetesClientException ex) {
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;37&lt;/span&gt;      System.out.println(ex.getMessage());
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;38&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;return&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;39&lt;/span&gt;    }
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;40&lt;/span&gt;    sharedInformerFactory.startAllRegisteredInformers().get();
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;41&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;final&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;var&lt;/span&gt;&lt;span&gt; nodeHandler = sharedInformerFactory.getExistingSharedIndexInformer(Node.class);
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;42&lt;/span&gt;    nodeHandler.addEventHandler(nodeEventHandler);
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;43&lt;/span&gt;    Quarkus.waitForExit();
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;44&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;return&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;45&lt;/span&gt;  }
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;46&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;47&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #ffc66d;&quot;&gt;onShutDown&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #9b859d;&quot;&gt;@Observes&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt; ShutdownEvent event)&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;48&lt;/span&gt;&lt;span&gt;    sharedInformerFactory.stopAllRegisteredInformers(&lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;true&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;49&lt;/span&gt;  }
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;50&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;51&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #ffc66d;&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt;(String... args)&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;52&lt;/span&gt;    Quarkus.run(KubernetesControllerApplication.class, args);
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;53&lt;/span&gt;  }
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;54&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;55&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@ApplicationScoped&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;56&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;static&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;final&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;color: #c26230;&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;hljs-class&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;color: #ffc66d;&quot;&gt;KubernetesControllerApplicationConfig&lt;/span&gt;&lt;span class=&quot;hljs-class&quot;&gt; &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;57&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;58&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Inject&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;59&lt;/span&gt;    KubernetesClient client;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;60&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;61&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Singleton&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;62&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt;SharedInformerFactory &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #ffc66d;&quot;&gt;sharedInformerFactory&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;63&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;return&lt;/span&gt;&lt;span&gt; client.informers();
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;64&lt;/span&gt;    }
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;65&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;66&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Singleton&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;67&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt;SharedIndexInformer&amp;lt;Node&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #ffc66d;&quot;&gt;nodeInformer&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt;(SharedInformerFactory factory)&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;68&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;return&lt;/span&gt;&lt;span&gt; factory.sharedIndexInformerFor(Node.class, &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;0&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;69&lt;/span&gt;    }
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;70&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;71&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Singleton&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;72&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt;SharedIndexInformer&amp;lt;Pod&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #ffc66d;&quot;&gt;podInformer&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt;(SharedInformerFactory factory)&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;73&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;return&lt;/span&gt;&lt;span&gt; factory.sharedIndexInformerFor(Pod.class, &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;0&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;74&lt;/span&gt;    }
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;75&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;76&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Singleton&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;77&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt;ResourceEventHandler&amp;lt;Node&amp;gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #ffc66d;&quot;&gt;nodeReconciler&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt;(SharedIndexInformer&amp;lt;Node&amp;gt; nodeInformer, SharedIndexInformer&amp;lt;Pod&amp;gt; podInformer)&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;78&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;return&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;new&lt;/span&gt;&lt;span&gt; ResourceEventHandler&amp;lt;&amp;gt;() {
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;79&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;80&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Override&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;81&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #ffc66d;&quot;&gt;onAdd&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt;(Node node)&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;82&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #bc9458; font-style: italic;&quot;&gt;// n.b. This is executed in the Watcher's  WebSocket Thread&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;83&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #bc9458; font-style: italic;&quot;&gt;// Ideally this should be executed by a Processor running in a dedicated thread&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;84&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #bc9458; font-style: italic;&quot;&gt;// This method should only add an item to the Processor's queue.&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;85&lt;/span&gt;&lt;span&gt;          System.out.printf(&lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;&quot;node: %s%n&quot;&lt;/span&gt;&lt;span&gt;, Objects.requireNonNull(node.getMetadata()).getName());
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;86&lt;/span&gt;          podInformer.getIndexer().list().stream()
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;87&lt;/span&gt;            .map(pod -&amp;gt; Objects.requireNonNull(pod.getMetadata()).getName())
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;88&lt;/span&gt;&lt;span&gt;            .forEach(podName -&amp;gt; System.out.printf(&lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;&quot;pod name: %s%n&quot;&lt;/span&gt;&lt;span&gt;, podName));
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;89&lt;/span&gt;        }
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;90&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;91&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Override&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;92&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #ffc66d;&quot;&gt;onUpdate&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt;(Node oldObj, Node newObj)&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span&gt;{}
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;93&lt;/span&gt;
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;94&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #9b859d;&quot;&gt;@Override&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;95&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #ffc66d;&quot;&gt;onDelete&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt;(Node node, &lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #c26230;&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;color: #d0d0ff;&quot;&gt; deletedFinalStateUnknown)&lt;/span&gt;&lt;span class=&quot;hljs-function&quot;&gt; &lt;/span&gt;&lt;span&gt;{}
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;96&lt;/span&gt;      };
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;97&lt;/span&gt;    }
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;98&lt;/span&gt;  }
&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;99&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is a very simple &lt;a href=&quot;https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/v0.0.1/src/main/java/com/marcnuri/demo/booternetes/port/KubernetesControllerApplication.java&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/v0.0.1/src/main/java/com/marcnuri/demo/booternetes/port/KubernetesControllerApplication.java&quot;&gt;example application&lt;/a&gt; that iterates through the &lt;code&gt;Pod&lt;/code&gt; instances and prints their name whenever a &lt;code&gt;Node&lt;/code&gt; is added (or the existent Nodes when the application starts).&lt;/p&gt;&lt;p&gt;It's a port of the original post's application and I tried to structure it in a very similar way to achieve the same result and keep the code visually similar.&lt;/p&gt;&lt;p&gt;You can compile the application to a native executable by running:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-bash&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;mvn -Pnative clean package&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you run the application you will get an output similar to:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-bash&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;$ ./target/kubernetes-controller-0.0.1-SNAPSHOT-runner
&lt;/span&gt;__  ____  __  _____   ___  __ ____  ______ 
 --/ __ \/ / / / _ | / _ \/ //_/ / / / __/ 
 -/ /_/ / /_/ / __ |/ , _/ ,&amp;lt; / /_/ /\ \   
--\___\_\____/_/ |_/_/|_/_/|_|\____/___/   
&lt;span&gt;2021-12-21 10:59:46,834 INFO  [io.quarkus] (main) kubernetes-controller 0.0.1-SNAPSHOT native (powered by Quarkus 2.5.2.Final) started &lt;/span&gt;&lt;span style=&quot;color: #c26230;&quot;&gt;in&lt;/span&gt;&lt;span&gt; 0.020s. Listening on: http://0.0.0.0:8080
&lt;/span&gt;2021-12-21 10:59:46,834 INFO  [io.quarkus] (main) Profile prod activated. 
2021-12-21 10:59:46,834 INFO  [io.quarkus] (main) Installed features: [cdi, kubernetes-client, resteasy-jackson, smallrye-context-propagation, vertx]
node: fv-az210-846
pod name: kube-apiserver-fv-az210-846
pod name: kubernetes-controller-c44477d9b-zd4pt
pod name: kube-proxy-9sz5l
pod name: storage-provisioner
pod name: etcd-fv-az210-846
pod name: kube-scheduler-fv-az210-846
pod name: coredns-64897985d-49w7x
pod name: kube-controller-manager-fv-az210-846
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That's 20 milliseconds, or 20 thousandths of a second. In addition, the resulting application takes up a trivially small memory footprint, 23.5 MiB of RAM.&lt;/p&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm/#example-creating-a-container-image-(docker-image)&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;example-creating-a-container-image-(docker-image)&quot;&gt;&lt;/span&gt;Creating a container image (Docker Image)&lt;/h2&gt;&lt;p&gt;Quarkus has several extensions to create Docker/Container images. However, since I'm part of the team maintaining &lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-introduction-kubernetes-openshift&quot; title=&quot;Eclipse JKube introduction: Java tools and plugins for Kubernetes and OpenShift&quot;&gt;JKube&lt;/a&gt;, I'll show you how to perform the full Kubernetes experience with JKube's &lt;a href=&quot;https://github.com/eclipse/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube&quot;&gt;Kubernetes Maven Plugin&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;In this case, the only necessary step is to add the required dependency to the &lt;a href=&quot;https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/b3f27c98020a4e8006a88c5c61fe8762d42ec399/pom.xml#L58-L62&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/b3f27c98020a4e8006a88c5c61fe8762d42ec399/pom.xml#L58-L62&quot;&gt;plugins section&lt;/a&gt;:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;org.eclipse.jkube&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;kubernetes-maven-plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;1.5.1&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can now create the image by running:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-bash&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;mvn -Pnative k8s:build&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;JKube automatically detects the native profile and creates a tiny distribution using &lt;a href=&quot;https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://catalog.redhat.com/software/containers/ubi8/ubi-minimal/5c359a62bed8bd75a2c3fba8&quot;&gt;Red Hat's UBI minimal&lt;/a&gt; image.&lt;/p&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm/#kubernetes-resource-manifest-generation-(yaml)&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;kubernetes-resource-manifest-generation-(yaml)&quot;&gt;&lt;/span&gt;Kubernetes resource manifest generation (YAML)&lt;/h2&gt;&lt;p&gt;For this part, JKube also infers the configuration and generates the required configuration YAML files. For any standard project you wouldn't really need to add any extra configuration.&lt;/p&gt;&lt;h3 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm/#cluster-role-binding-and-role&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;cluster-role-binding-and-role&quot;&gt;&lt;/span&gt;Cluster Role Binding and Role&lt;/h3&gt;&lt;p&gt;However, in this case we need to access the underlying cluster API, so we need to authorize the Pod's service account via &lt;a href=&quot;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://kubernetes.io/docs/reference/access-authn-authz/rbac/&quot;&gt;RBAC&lt;/a&gt;.&lt;/p&gt;&lt;div class=&quot;alert alert__danger&quot;&gt;The original article binds the service account to the &lt;code&gt;cluster-admin&lt;/code&gt; role which can be dangerous. To keep things simple we're just going to create a new cluster role with read access to Pods and Nodes, and bind it to the default Service Account. It would be better to create a specific Service Account too.&lt;/div&gt;&lt;p&gt;To achieve this we'll add two fragments for the Cluster Role and the Cluster Role Binding that JKube will pick up and merge with the rest of generated resources:&lt;/p&gt;&lt;p&gt;Cluster Role &lt;a href=&quot;https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/v0.0.1/src/main/jkube/kubernetes-controller-java-cr.yaml&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/v0.0.1/src/main/jkube/kubernetes-controller-java-cr.yaml&quot;&gt;&lt;code&gt;src/main/jkube/kubernetes-controller-java-cr.yaml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-yaml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;rules:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;2&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;apiGroups:&lt;/span&gt;&lt;span&gt; [&lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;]
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;3&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;resources:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;4&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;nodes&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;5&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;pods&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;6&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;verbs:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;7&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;list&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;8&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;get&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;9&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;watch&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cluster Role Binding &lt;a href=&quot;https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/v0.0.1/src/main/jkube/kubernetes-controller-java-crb.yaml&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/v0.0.1/src/main/jkube/kubernetes-controller-java-crb.yaml&quot;&gt;&lt;code&gt;src/main/jkube/kubernetes-controller-java-crb.yaml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-yaml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;subjects:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;2&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;kind:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;ServiceAccount&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;3&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;default&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;4&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;namespace:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;${jkube.namespace}&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;5&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;roleRef:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;6&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;apiGroup:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;rbac.authorization.k8s.io&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;7&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;kind:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;ClusterRole&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span class=&quot;comment linenumber react-syntax-highlighter-line-number&quot; style=&quot;display: inline-block; padding-right: 1em; text-align: right;&quot;&gt;8&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;kubernetes-controller-java&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm/#cluster-role-binding-and-role&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;cluster-role-binding-and-role&quot;&gt;&lt;/span&gt;Namespace&lt;/h3&gt;&lt;p&gt;To keep things clean, we're going to create a dedicated &lt;code&gt;Namespace&lt;/code&gt; for our application. To achieve this with JKube we only need to provide the following &lt;a href=&quot;https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/b3f27c98020a4e8006a88c5c61fe8762d42ec399/pom.xml#L16-L17&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/b3f27c98020a4e8006a88c5c61fe8762d42ec399/pom.xml#L16-L17&quot;&gt;Maven properties&lt;/a&gt;:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;jkube.namespace&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;kubernetes-controller-java&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;jkube.namespace&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;jkube.enricher.jkube-namespace.namespace&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;${jkube.namespace}&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;jkube.enricher.jkube-namespace.namespace&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm/#example-creating-a-container-image-(docker-image)&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;example-creating-a-container-image-(docker-image)&quot;&gt;&lt;/span&gt;Deploying to Minikube&lt;/h2&gt;&lt;p&gt;The original article deploys the application to a Google Cloud Kubernetes environment (GKE), however I don't have any GKE cluster available. In this case I will show you how to deploy to &lt;a href=&quot;https://github.com/kubernetes/minikube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/kubernetes/minikube&quot;&gt;Minikube&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;To skip pushing the image to a container image registry we can share Minikube's Docker daemon by invoking the following command and build the image directly on Minikube:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-bash&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;eval&lt;/span&gt;&lt;span&gt; $(minikube docker-env)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next we can build, generate application manifests and deploy them to our cluster by running:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-bash&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;mvn -Pnative k8s:build k8s:resource k8s:apply&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here's a trivial &lt;a href=&quot;https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/v0.0.1/.github/workflows/deploy-test.yaml&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/marcnuri-demo/kubernetes-controller-jl-port/blob/v0.0.1/.github/workflows/deploy-test.yaml&quot;&gt;GitHub Actions file&lt;/a&gt; that performs the mentioned steps and deploys them to a &lt;a href=&quot;https://github.com/manusa/actions-setup-minikube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/manusa/actions-setup-minikube&quot;&gt;dedicated Minikube cluster&lt;/a&gt;:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-yaml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Deploy&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Tests&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;
&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;on:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;push:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;branches:&lt;/span&gt;&lt;span&gt; [&lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;main&lt;/span&gt;&lt;span&gt;]
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;pull_request:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;branches:&lt;/span&gt;&lt;span&gt; [&lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;main&lt;/span&gt;&lt;span&gt;]
&lt;/span&gt;
&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;jobs:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;deploy-and-test:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Deploy&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;and&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Test&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;runs-on:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;ubuntu-latest&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;steps:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Checkout&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;uses:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;actions/checkout@v2&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Setup&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Minikube-Kubernetes&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;uses:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;manusa/actions-setup-minikube@v2.4.3&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;with:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;minikube version:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;v1.24.0&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;kubernetes version:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;v1.23.0&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;github token:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;${{&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;secrets.GITHUB_TOKEN&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;}}&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Setup&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Java&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;17&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;uses:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;actions/setup-java@v2&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;with:&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;java-version:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'17'&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;distribution:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'temurin'&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Build&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;run:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;mvn&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;-Pnative&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;package&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Run&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;and&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;test&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;from&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;host&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;run:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;timeout&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;5s&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;./target/kubernetes-controller-0.0.1-SNAPSHOT-runner&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;out.txt&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;||&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;grep&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;&quot;node:&quot;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;out.txt&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Deploy&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;run:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;mvn&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;-Pnative&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;k8s:build&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;k8s:resource&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;k8s:apply&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Test&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Deployment&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;run:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;|
&lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;          kubectl wait --for=condition=available --timeout=60s --namespace kubernetes-controller-java deployments.apps/kubernetes-controller
&lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;          kubectl logs --namespace kubernetes-controller-java --tail=-1 --selector app=kubernetes-controller | grep &quot;node:&quot;
&lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;&lt;/span&gt;&lt;span&gt;      &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;-&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;name:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Print&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Application&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;Logs&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span style=&quot;color: #6d9cbe;&quot;&gt;run:&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;|&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;          &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;kubectl&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;logs&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;--namespace&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;kubernetes-controller-java&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;--tail=-1&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;--selector&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;app=kubernetes-controller&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/fabric8-kubernetes-java-client-and-quarkus-and-graalvm/#conclusion&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;conclusion&quot;&gt;&lt;/span&gt;Conclusion&lt;/h2&gt;&lt;p&gt;As you can see, generating and deploying a Java Kubernetes controller with Quarkus and JKube can be even easier than with Go and just as performant thanks to GraalVM.&lt;/p&gt;&lt;p&gt;As Josh said in his original blog &lt;a href=&quot;https://joshlong.com/jl/blogPost/kubernetes-java-client-and-spring-native-and-graalvm.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://joshlong.com/jl/blogPost/kubernetes-java-client-and-spring-native-and-graalvm.html&quot;&gt;post&lt;/a&gt;, it's a great time to be alive. Again, I want to remark that this is not a Spring vs. Quarkus post. The intention is to show the amount of choices Java developers have these days and that Java is still alive and Kicking.&lt;/p&gt;&lt;p&gt;You can find the full source code for this post at &lt;a href=&quot;https://github.com/marcnuri-demo/kubernetes-controller-jl-port&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/marcnuri-demo/kubernetes-controller-jl-port&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 21 Dec 2021 13:00:00 +0000</pubDate>
        <enclosure url="https://blog.marcnuri.com/static/6dba115990119cb116a4e7f15a5ab236/e5189/quarkus-graalvm-fabric8.jpg" length="0" type="image/jpg"/>
</item>
<item>
	<title>Eclipse Announcements: JakartaOne Livestream 2021 Sessions now on YouTube!</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/jakartaone-livestream-2021-sessions-now-youtube</guid>
	<link>https://newsroom.eclipse.org/news/announcements/jakartaone-livestream-2021-sessions-now-youtube</link>
	<description>Watch all the sessions from JakartaOne Livestream 2021 on YouTube now!</description>
	<pubDate>Mon, 20 Dec 2021 20:29:19 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Sending live channel commands via HTTP to devices</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2021-12-20-http-live-channel.html</guid>
	<link>https://www.eclipse.org/ditto/2021-12-20-http-live-channel.html</link>
	<description>&lt;p&gt;The upcoming release of Eclipse Ditto &lt;strong&gt;version 2.3.0&lt;/strong&gt; will support sending commands via the HTTP API 
directly to devices using the &lt;a href=&quot;https://www.eclipse.org/ditto/protocol-twinlive.html#live&quot;&gt;live channel&lt;/a&gt; by just adding the &lt;code class=&quot;highlighter-rouge&quot;&gt;channel=live&lt;/code&gt; 
query parameter to the same HTTP API request which would target the &lt;a href=&quot;https://www.eclipse.org/ditto/protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;http-live-channel&quot;&gt;HTTP Live channel&lt;/h2&gt;

&lt;p&gt;Ditto supports sending all kind of &lt;a href=&quot;https://www.eclipse.org/ditto/protocol-specification-things.html#commands&quot;&gt;Thing commands&lt;/a&gt; via
the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel directly to devices.
When sending a &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; command to  a device, the device is responsible for sending a correlated and correct response 
in &lt;a href=&quot;https://www.eclipse.org/ditto/protocol-overview.html&quot;&gt;Ditto Protocol&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ditto supports two types of &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt;s for communication.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/ditto/protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt;: The default value of the channel parameter is &lt;code class=&quot;highlighter-rouge&quot;&gt;twin&lt;/code&gt; 
to communicate with the persisted &lt;strong&gt;twin&lt;/strong&gt; representation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/ditto/protocol-twinlive.html#live&quot;&gt;live&lt;/a&gt;: The &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt; parameter can be changed to &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; 
to communicate with the real device.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;alert alert-info&quot;&gt;&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt; &lt;b&gt;Note:&lt;/b&gt; In order to use the live channel, the device receiving live commands must be able to understand
  and answer in &lt;a href=&quot;https://www.eclipse.org/ditto/protocol-specification.html&quot;&gt;Ditto Protocol messages&lt;/a&gt; with the
&lt;a href=&quot;https://www.eclipse.org/ditto/protocol-specification-topic.html#live-channel&quot;&gt;topic’s channel being &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt;&lt;/a&gt;.&lt;/div&gt;

&lt;p&gt;When using the &lt;code class=&quot;highlighter-rouge&quot;&gt;twin&lt;/code&gt; channel, the command is routed to the Ditto backend and handled by the &lt;strong&gt;twin&lt;/strong&gt; persistence.
Before using the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel, it is necessary to create the &lt;strong&gt;digital twin&lt;/strong&gt; of the device in the 
Ditto backend.&lt;/p&gt;

&lt;p&gt;If the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel is used, the command is directly routed to the device. In this case the device is 
responsible for answering the command and sending back a response. In case no response is sent back, the Ditto HTTP API 
is responding with &lt;code class=&quot;highlighter-rouge&quot;&gt;408 Request Timeout&lt;/code&gt;.&lt;br /&gt;
The default timeout for live commands is &lt;code class=&quot;highlighter-rouge&quot;&gt;10s&lt;/code&gt; but it can be changed by setting the &lt;code class=&quot;highlighter-rouge&quot;&gt;timeout&lt;/code&gt; parameter to the 
desired value.&lt;/p&gt;

&lt;p&gt;Ditto ensures that the &lt;code class=&quot;highlighter-rouge&quot;&gt;correlation ID&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;entity ID&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;command response type&lt;/code&gt; of the command response 
is the same as in the sending command. If this is not the case, Ditto is dropping the response and the caller of the 
HTTP request will get a &lt;code class=&quot;highlighter-rouge&quot;&gt;408 Request Timeout&lt;/code&gt; with a message that the timeout was caused by an incompatible
command response from the device.&lt;/p&gt;

&lt;h3 id=&quot;permissions-for-live-commands&quot;&gt;Permissions for live commands&lt;/h3&gt;

&lt;p&gt;Sending live commands to devices is restricted by the policy of the thing.&lt;br /&gt;
Thus Ditto ensures that only authorized parties with &lt;code class=&quot;highlighter-rouge&quot;&gt;WRITE&lt;/code&gt; permission are able to send commands or messages.&lt;br /&gt;
Ditto also filters responses from the device based on the policy. This ensures that the requester only gets the data
where he/she has &lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; permission on.&lt;/p&gt;

&lt;p&gt;For retrieve commands, the &lt;a href=&quot;https://www.eclipse.org/ditto/basic-auth.html#authenticated-subjects&quot;&gt;authenticated subject&lt;/a&gt; needs to have 
(at least partial) &lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; permission at the resource which is requested.&lt;br /&gt;
In case a &lt;code class=&quot;highlighter-rouge&quot;&gt;RetrieveThing&lt;/code&gt; (via HTTP a &lt;code class=&quot;highlighter-rouge&quot;&gt;GET /api/2/things/&amp;lt;thing-id&amp;gt;&lt;/code&gt;) command is sent to a real device and the 
requester only has partial &lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; permission on the thing, the response is filtered based on the policy 
and only the fields where &lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; permission is granted are returned.&lt;/p&gt;

&lt;h3 id=&quot;live-commands-via-http-api&quot;&gt;Live commands via HTTP API&lt;/h3&gt;

&lt;p&gt;When using the HTTP API the &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt; parameter can either be specified via HTTP Header or via HTTP query parameter.&lt;br /&gt;
In the examples below both ways are possible to specify the channel parameter.&lt;/p&gt;

&lt;h4 id=&quot;live-command-with-http-header&quot;&gt;Live command with HTTP Header&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; GET &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'channel: live'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'timeout: 30s'&lt;/span&gt; /api/2/things/org.eclipse.ditto:coffeebrewer&lt;span class=&quot;s1&quot;&gt;'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;live-command-with-http-query-parameter&quot;&gt;Live command with HTTP query parameter&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; GET /api/2/things/org.eclipse.ditto:coffeebrewer?channel&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;live&amp;amp;timeout&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;30s&lt;span class=&quot;s1&quot;&gt;'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;The following section provides an example how to use the HTTP &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel together with the Ditto Java client.&lt;/p&gt;

&lt;p&gt;For demonstration purpose, we assume that the thing with ID &lt;code class=&quot;highlighter-rouge&quot;&gt;org.eclipse.ditto:outdoor-sensor&lt;/code&gt; already exists.&lt;/p&gt;

&lt;p&gt;In this example we want to retrieve the live state of the device by sending a &lt;code class=&quot;highlighter-rouge&quot;&gt;RetrieveThing&lt;/code&gt; command via
the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel directly to the device.&lt;/p&gt;

&lt;h3 id=&quot;permissions-to-execute-the-example&quot;&gt;Permissions to execute the example&lt;/h3&gt;

&lt;p&gt;For this example, the &lt;a href=&quot;https://www.eclipse.org/ditto/basic-auth.html#authenticated-subjects&quot;&gt;authenticated subject&lt;/a&gt; has
&lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;WRITE&lt;/code&gt; permissions on the complete thing resource to send the command and retrieve the full response.&lt;/p&gt;

&lt;h3 id=&quot;executing-the-example&quot;&gt;Executing the example&lt;/h3&gt;

&lt;p&gt;When sending a command over the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel to a device, the device needs to take action and send back a response.&lt;br /&gt;
The response from the device is routed back to the initial requester of the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; command at the HTTP API.&lt;/p&gt;

&lt;p&gt;In this example the &lt;a href=&quot;https://www.eclipse.org/ditto/client-sdk-java.html&quot;&gt;Ditto Java Client&lt;/a&gt; acts as device and sends back the response.&lt;br /&gt;
The following snippet shows how to register for retrieve thing live commands and send back a &lt;code class=&quot;highlighter-rouge&quot;&gt;RetrieveThingResponse&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thingId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;org.eclipse.ditto:outdoor-sensor&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;featureId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;environment-sensor&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Attributes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;location&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;outdoor in the woods&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Feature&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThingsModelFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newFeatureBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ThingsModelFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newFeaturePropertiesBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;temperature&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;humidity&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;56.3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;featureId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Thing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThingsModelFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newThingBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thingId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFeature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAttributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// initialize the ditto-client and startConsumption() of live commands&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DittoClient&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dittoClient&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;dittoClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;live&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thingId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;handleRetrieveThingCommandsFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retrieveThingLiveCommand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retrieveThingLiveCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;retrieved&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When the above shown code snippet is running and the following HTTP request is sent out:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; GET /api/2/things/org.eclipse.ditto:outdoor-sensor?channel&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;live&amp;amp;timeout&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;15s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The received HTTP response payload should look like this:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thingId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto:outdoor-sensor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;_namespace&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;attributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;location&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;outdoor in the woods&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;environment-sensor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temperature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;humidity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;56.3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;feedback&quot;&gt;Feedback?&lt;/h2&gt;

&lt;p&gt;Please &lt;a href=&quot;https://www.eclipse.org/ditto/feedback.html&quot;&gt;get in touch&lt;/a&gt; if you have feedback or questions towards this new functionality.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt; 
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: IoT &amp; Edge Developer Priorities and Challenges</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1650</guid>
	<link>https://eclipse-foundation.blog/2021/12/16/iot-edge-developer-priorities-and-challenges/</link>
	<description>&lt;p&gt;The results of the Eclipse Foundation’s seventh annual &lt;a href=&quot;https://outreach.eclipse.foundation/iot-edge-developer-2021&quot;&gt;IoT &amp;amp; Edge Developer Survey&lt;/a&gt; have been compiled and the report is available to download. As in previous years, this year’s survey provides important insights into developer trends and challenges, platform choices, and target markets. &lt;/p&gt;



&lt;p&gt;Administered by the &lt;a href=&quot;https://iot.eclipse.org&quot;&gt;Eclipse IoT Working Group&lt;/a&gt;, the &lt;a href=&quot;https://edgenative.eclipse.org/&quot;&gt;Edge Native Working Group&lt;/a&gt;, and the &lt;a href=&quot;https://sparkplug.eclipse.org/&quot;&gt;Sparkplug Working Group&lt;/a&gt;, this year’s survey was conducted over a period of seven weeks, starting in late August. We received responses from more than 660 developers, committers, architects, and decision-makers from a broad set of industries and organizations globally. &lt;/p&gt;



&lt;h2 id=&quot;what-technologies-are-developers-choosing&quot;&gt;&lt;strong&gt;What Technologies are Developers Choosing&lt;/strong&gt;?&lt;/h2&gt;



&lt;ul&gt;&lt;li&gt;IoT and edge developers told us they’re using C and C++ for constrained devices, but prefer Python over Java for edge servers, IoT and edge gateways, and cloud platform development.&lt;/li&gt;&lt;li&gt;MQTT has emerged as the clear leader in industrial IoT (IIoT) communications protocols. It showed solid growth in adoption over the past year, while protocols such as REST, HTTP/HTTPS, and TCP/IP showed a significant decline in IIoT usage compared to 2020.&lt;/li&gt;&lt;li&gt;AWS IoT is the preferred middleware, with a significant lead over Microsoft Azure IoT and Google Cloud IoT Platform.&lt;/li&gt;&lt;li&gt;Artificial intelligence is still the most frequently selected edge computing workload.&lt;/li&gt;&lt;li&gt;While Arm continues to dominate hardware architectures for constrained devices, gateways, and edge servers, RISC-V and &lt;a href=&quot;https://www.openhwgroup.org/#about-us&quot;&gt;OpenHW Group&lt;/a&gt; CORE-V architectures are showing strong market share gains.&lt;/li&gt;&lt;/ul&gt;



&lt;h2 id=&quot;industrial-automation-is-the-top-industry-focus-area&quot;&gt;&lt;strong&gt;Industrial Automation Is the Top Industry Focus Area&lt;/strong&gt;&lt;/h2&gt;



&lt;p&gt;While industrial automation has displaced smart agriculture as the leading industry focus area, that doesn’t mean efforts on smart agriculture applications are dropping off. In fact, developer focus on smart agriculture rose seven percent from the 2020 survey results. However, focus on industrial automation rose 13 percent, indicating a sharp increase in demand for these types of applications.&lt;/p&gt;



&lt;p&gt;Building automation, emergency management, and smart cities rounded out the top five industry focus areas.&lt;/p&gt;



&lt;h2 id=&quot;security-is-the-top-concern&quot;&gt;&lt;strong&gt;Security Is the Top Concern&lt;/strong&gt;&lt;/h2&gt;



&lt;p&gt;Almost half of this year’s survey respondents cited security as their primary worry when developing IoT and edge applications. However, concerns about connectivity, deployment, and integration complexity also rose this year, painting a picture of a changing landscape.&lt;/p&gt;



&lt;p&gt;The results underscore the challenges developers face in determining which are the right technologies for the job. They also indicate that more IoT and edge solutions are moving past the proof-of-concept phase as developers look for technologies that help them optimize and integrate production systems to deliver better user experiences.&lt;/p&gt;



&lt;h2 id=&quot;get-involved-in-eclipse-iot-edge-native-communities&quot;&gt;&lt;strong&gt;Get Involved in Eclipse IoT &amp;amp; Edge Native Communities&lt;/strong&gt;&lt;/h2&gt;



&lt;p&gt;To stay current with the happenings in the Eclipse IoT Working Group, join the mailing list &lt;a href=&quot;https://accounts.eclipse.org/mailing-list/iot-wg&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;To join the Eclipse Edge Native Working Group conversation on Slack, click &lt;a href=&quot;https://edgenative.eclipse.org/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;h2 id=&quot;read-the-full-report&quot;&gt;&lt;strong&gt;Read the Full Report&lt;/strong&gt;&lt;/h2&gt;



&lt;p&gt;For detailed insights, &lt;a href=&quot;https://outreach.eclipse.foundation/iot-edge-developer-2021&quot;&gt;Download the IoT &amp;amp; Edge Developer Survey Results&lt;/a&gt; &lt;/p&gt;</description>
	<pubDate>Thu, 16 Dec 2021 14:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Community Perspective: 20 Years of the Eclipse IDE</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/community-perspective-20-years-eclipse-ide</guid>
	<link>https://newsroom.eclipse.org/news/announcements/community-perspective-20-years-eclipse-ide</link>
	<description>To help us celebrate 20 years of the Eclipse IDE, we reached out to some of the community members who use and contribute to the platform to find out why they got involved, what theyâ€™ve learned so far, and what they expect for the future.</description>
	<pubDate>Thu, 16 Dec 2021 10:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Cloud DevTools: Internationalization in Eclipse Theia</title>
	<guid isPermaLink="true">https://ecdtools.eclipse.org/resources/blogs/2021-12-16-theia-i18n/</guid>
	<link>https://ecdtools.eclipse.org/resources/blogs/2021-12-16-theia-i18n/</link>
	<description>Even though some attempts by contributors have been made in the past, as of mid 2021 still Theia had no support for different locales. Arduino has addressed this with the all new Arduino IDE based on Theia. Having supported Arduino previously with their IDE, they tasked TypeFox with contributing this feature to Theia.</description>
	<pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate>
	<author>webdev@eclipse-foundation.org (Christopher Guindon)</author>
</item>
<item>
	<title>Wayne Beaton: The Eclipse Foundation Is Your Destination For Commercial-Friendly Open Source Projects</title>
	<guid isPermaLink="false">http://waynebeaton.wordpress.com/?p=5719</guid>
	<link>https://waynebeaton.wordpress.com/2021/12/15/the-eclipse-foundation-is-your-destination-for-commercial-friendly-open-source-projects/</link>
	<description>&lt;p&gt;As  a member of the Eclipse Foundation, you already know the value of making a project open source. Open source allows organizations to participate in a thriving developer community, while sharing the costs of innovation and focusing their resources on building differentiated features that customers value. &lt;/p&gt;



&lt;p&gt;However, all open source organizations are not created equal and certain objectives will be better met by partnering with one that best aligns with your organizational needs. For example, if your objective is to drive broad adoption with commercial-friendly production ready code, the Eclipse Foundation is the right choice &lt;/p&gt;



&lt;h2 id=&quot;creating-a-commercial-friendly-environment-for-open-source&quot;&gt;Creating a Commercial-Friendly Environment For Open Source&lt;/h2&gt;



&lt;p&gt;The Eclipse Foundation&lt;a href=&quot;https://www.eclipse.org/org/services/&quot;&gt; provides key services&lt;/a&gt; to support and grow open source projects, while leaving your organization’s developers free to focus on writing code. Our focus is on enabling commercial ecosystems around open source technology. The Foundation does this by providing processes and practices that maximize opportunities to work in a truly open and transparent manner, and minimize the risks associated with copyright and licensing.&lt;/p&gt;



&lt;p&gt;Here are just a few of the reasons that bringing your open source projects to the Eclipse Foundation makes good business sense:&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;V&lt;/strong&gt;&lt;strong&gt;endor-Neutral Process&lt;/strong&gt;: The &lt;a href=&quot;https://www.eclipse.org/projects/dev_process/&quot;&gt;Eclipse Foundation Development Process&lt;/a&gt;, describes principles and practices to manage the open source project lifecycle in a consistent open, transparent, meritocratic, and vendor-neutral manner. In essence, the Eclipse Foundation Development Process describes a vendor-neutral “level playing field” that encourages diverse and collaborative open source, mitigating the risk of domination by any single party. This means that your developers’ ideas and contributions are just as valuable as everyone else’s.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Intellectual Property and Due Diligence&lt;/strong&gt;: The Eclipse Foundation provides robust contributor and committer agreement management. The Eclipse Foundation’s Intellectual Property Due Diligence Process provides support to project teams for reviewing large contributions, and ensuring that all third party content is available under terms that are compatible with the project license, and — ultimately — commercial adoption.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Collaborative Working Group Structure&lt;/strong&gt;: Eclipse Foundation Working Groups provide a means for Eclipse Projects to collaborate at higher levels. Working groups, for example, organise our annual simultaneous release which makes it easier for downstream consumers to adopt new Eclipse IDE releases; and provide us with a means to host vendor neutral services like the Eclipse Marketplace and the OpenVSX registry, and specification branding programs that enable project teams working on specifications to engage with a broad community of adopters and implementers. &lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Infrastructure Support:&lt;/strong&gt; To provide reliable and scalable service for committers working on projects and consumers who use the technology, the Eclipse Foundation manages the IT infrastructure for each project. This includes managing Git code repositories and code review tools, issue trackers, Jenkins build farms, developer-oriented mailing lists and forums, and websites. &lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Marketing and Ecosystem Development Support:&lt;/strong&gt; The Eclipse Foundation also provides vendor-neutral marketing and ecosystem development services to help get projects in front of the right audiences and support their growth. Our creative team assists in the development of logos and graphics, helping you develop a brand identity that fits your project.&lt;/p&gt;



&lt;p&gt;Like much of the Eclipse Foundation’s activity, community is at the forefront of our ecosystem development efforts. Participation from our passionate developer communities allows us to create content, ranging from webinars to white papers and newsletter articles, that illustrates how members are leveraging the power of open source to accomplish their goals.&lt;/p&gt;



&lt;p&gt;The bottom line is that some of the most significant advantages that organizations and individual developers gain from open source can only be realized through participation in an open source organization that has underlying principles, processes, and practices that support vendor-neutral open collaboration and innovation, as opposed to simply sharing your code online.&lt;/p&gt;



&lt;h2 id=&quot;how-to-get-started&quot;&gt;How To Get Started&lt;/h2&gt;



&lt;p&gt;Do you have a project to host at the Eclipse Foundation? The first step is to submit a project proposal. The proposal must minimally include a description of the project, a declaration of scope, and a list of prospective members before we make it accessible to the public for community review. For more information on how to get started, see the &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#starting&quot;&gt;Eclipse Foundation Project Handbook&lt;/a&gt;.&lt;br /&gt;To experience these benefits and get the most out of open source, &lt;a href=&quot;https://projects.eclipse.org/create/project-proposal&quot;&gt;submit a project proposal&lt;/a&gt;.&lt;/p&gt;
			&lt;div id=&quot;atatags-26942-61b9f8db2cfae&quot;&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 15 Dec 2021 14:16:53 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Diagram editors with Eclipse GLSP – towards 1.0</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=45386</guid>
	<link>https://eclipsesource.com/blogs/2021/12/15/diagram-editors-with-eclipse-glsp-towards-1-0/</link>
	<description>&lt;p&gt;Eclipse GLSP is a framework for building web-based diagram editors. These diagram editors can be embedded into Eclipse Theia, into VS...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2021/12/15/diagram-editors-with-eclipse-glsp-towards-1-0/&quot; rel=&quot;nofollow&quot;&gt;Diagram editors with Eclipse GLSP – towards 1.0&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Wed, 15 Dec 2021 08:15:42 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: The Eclipse Foundation Is Your Destination For Commercial-Friendly Open Source Projects</title>
	<guid isPermaLink="true">http://blog.waynebeaton.ca/posts/ecosystem/destination/</guid>
	<link>http://blog.waynebeaton.ca/posts/ecosystem/destination/</link>
	<description>As a member of the Eclipse Foundation, you already know the value of making a project open source. Open source allows organizations to participate in a thriving developer community, while sharing the costs of innovation and focusing their resources on building differentiated features that customers value.
However, all open source organizations are not created equal and certain objectives will be better met by partnering with one that best aligns with your organizational needs.</description>
	<pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Getting started with Eclipse Cloud Developer Tools</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=45380</guid>
	<link>https://eclipsesource.com/blogs/2021/12/13/getting-started-with-eclipse-cloud-developer-tools/</link>
	<description>&lt;p&gt;Are you interested in building web- and cloud-based tools? Are you wondering what Eclipse Theia is, how it compares to VS...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2021/12/13/getting-started-with-eclipse-cloud-developer-tools/&quot; rel=&quot;nofollow&quot;&gt;Getting started with Eclipse Cloud Developer Tools&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Mon, 13 Dec 2021 10:21:19 +0000</pubDate>
</item>
<item>
	<title>Eclipse Cloud DevTools: Eclipse Cloud DevTools Contributor Award: Improving the Migration Guide for Eclipse Theia</title>
	<guid isPermaLink="true">https://ecdtools.eclipse.org/resources/blogs/2021-12-13-theia-cotm/</guid>
	<link>https://ecdtools.eclipse.org/resources/blogs/2021-12-13-theia-cotm/</link>
	<description>The Eclipse Cloud Developer Tools contributor award this month goes to Evolved Binary for improving the migration guide and process for Eclipse Theia.</description>
	<pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate>
	<author>webdev@eclipse-foundation.org (Christopher Guindon)</author>
</item>
<item>
	<title>Webtools News: WTP 3.24 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink198</guid>
	<link>http://eclipse.org/webtools/releases/3.24</link>
	<description>&lt;div&gt;
      The Eclipse Web Tools Platform 3.24 has been released!
      &lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
      and updates can be performed using the Eclipse IDE 2021-12
      &lt;a href=&quot;http://download.eclipse.org/releases/2021-12/&quot;&gt;Update Site&lt;/a&gt;
      or through any of the related
      &lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
      .
      Release 3.24 is included in the 2021-12
      &lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2021-12/r/eclipse-ide-enterprise-java-and-web-developers&quot;&gt;
        Eclipse IDE for Enterprise Java and Web Developers
      &lt;/a&gt;
      , with selected portions also included in several
      &lt;a href=&quot;https://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
      . Adopters can download
      &lt;a href=&quot;https://download.eclipse.org/webtools/downloads/drops/R3.24.0/R-3.24.0-20211122101137/&quot;&gt;the R3.24 p2 repository&lt;/a&gt;
      directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink198&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 08 Dec 2021 16:59:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Celebrating Eclipse at 20</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/celebrating-eclipse-20</guid>
	<link>https://newsroom.eclipse.org/news/announcements/celebrating-eclipse-20</link>
	<description>Today the Eclipse project and the Eclipse Foundation are shipping Eclipse IDE 2021â€‘12, the latest in a string of releases that go back to November 2001. How better to mark its 20th anniversary than to celebrate another release!</description>
	<pubDate>Wed, 08 Dec 2021 16:34:51 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Celebrating Eclipse at 20</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1645</guid>
	<link>https://eclipse-foundation.blog/2021/12/08/celebrating-eclipse-at-20/</link>
	<description>&lt;p&gt;Today the Eclipse project and the Eclipse Foundation are shipping Eclipse IDE 2021‑12, the latest in a string of releases that go back to November 2001. How better to mark its 20th anniversary than to celebrate another release!&lt;/p&gt;



&lt;p&gt;Last month we published a &lt;a href=&quot;https://newsroom.eclipse.org/news/announcements/eclipse-ide-turns-20&quot;&gt;press release&lt;/a&gt; and a &lt;a href=&quot;https://www.eclipse.org/eclipseide/20anniversary/&quot;&gt;landing page&lt;/a&gt; to celebrate twenty years of Eclipse history, which we are augmenting today with &lt;a href=&quot;https://youtu.be/5B0HERBB2Kc&quot;&gt;a celebration video&lt;/a&gt; that includes great segments from Eclipse project leaders, both past and present. I highly recommend taking the time to watch it to learn about the history of this ground breaking open source project, as well as hearing where the community plans to take it in the future. And, definitely don’t miss the guitar solo at the end! I would like to thank the members of the original Eclipse project team who participated: Erich Gamma (Microsoft), John Duimovich (Red Hat), Steve Northover (IBM), and Paul Buck (Eclipse Foundation). I would also like to thank Sarika Sinha (IBM) and Mickael Istria (Red Hat), who joined the video to talk about the project today and who continue to make the Eclipse IDE a great platform for developers around the world. &lt;/p&gt;



&lt;p&gt;It is impossible to overstate the impact that the Eclipse IDE has had on the software industry, the open source community, and the Java ecosystem. Envisioned originally as “a kind of universal tool platform – an open extensible IDE for anything and nothing in particular”, The Eclipse project and platform can be celebrated for many milestones. Here are just a few:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;The technology itself was groundbreaking. Using the Java language, while utilizing the desktop UI frameworks, made the Eclipse IDE a fast and attractive solution for the enterprise developers of the day. Don’t forget that the original design intent was to compete with Microsoft’s Visual Studio and ensure that the Java ecosystem had an ecosystem of professional tools. Coupling that with the most extensible architecture ever seen in a tooling platform made the Eclipse IDE perfect for its time. No one can dispute that the Eclipse IDE was part of the overall value equation that allowed Java to become dominant in the enterprise.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The Eclipse Rich Client Platform was based on the insight that if you could build desktop-portable IDEs, you could re-use that platform for building desktop-portable applications. Pre-dating the Web 2.0 technologies that we now all use, RCP was &lt;strong&gt;the&lt;/strong&gt; go-to technology for building portable desktop applications in the enterprise for a decade. RCP was used extensively in banking, insurance, and healthcare (to name just a few) as the basis for the applications that millions of people used every day.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Language support was another key Eclipse win. Although to this day many developers think of the Eclipse IDE as Java-centric, it was used to create language IDEs for almost every available programming language. Today the Eclipse C/C++ Development Tools (CDT) project remains the dominant platform used by the embedded and RTOS markets for their developer tools. Arm, Renesas, Xilinx, ST Micro, NXP, etc. all ship Eclipse IDE-based products today.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The “Eclipse Way” of development, first described by Erich Gamma and John Weigand at EclipseCon so many years ago, explained how an open source project could sustainably deliver high quality code on a predictable schedule. And those processes still work today, as we celebrate yet another Eclipse IDE release delivered on time to the day. For over 16 years now, that highly predictable schedule delivered by an open source community has been a marvel of mature development processes embraced by a community.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;While commonplace today, the Eclipse project was one of the first (if not the first) projects to consciously create a consortium of industry players in support of an open source community. It is hard to overstate how novel this was in 2001, when the professionalization of open source was an entirely new idea. I can confirm that the experiment was a success.&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;But none of this would have been possible without the hard work and dedication of literally hundreds of people over the years. Initially created by the IBM subsidiary Object Technology International, the Eclipse IDE in its early days was very much an IBM-led project. The Eclipse Foundation was created in 2004 as a vendor-neutral home for the project in order to help build trust amongst potential adopters, and to steward a community. By all measures that strategy was a success, with many IBM competitors joining the Eclipse Foundation and creating tools on top of the platform. After a few years, Eclipse adopters were a who’s who of the industry at the time, including BEA Systems, Blackberry, Borland, Computer Associates, Compuware, HP, Intel, Motorola, Nokia, Oracle, SAP, Sybase, and Wind River. &lt;/p&gt;



&lt;p&gt;The success in growing the Eclipse ecosystem resulted in an increase in potential contributors, and today the Eclipse Project is incredibly diverse with over a dozen different companies supporting committers on the project. On behalf of the entire community, I would like to thank each and every one of the committers and contributors who have and continue to make the Eclipse IDE a success.&lt;/p&gt;



&lt;p&gt;And finally, twenty years is a long time. I would also like to thank and remember the team members who I knew personally that are no longer with us to enjoy this moment. Jeem and Dani, you are missed.&lt;/p&gt;</description>
	<pubDate>Wed, 08 Dec 2021 14:12:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse Foundation Releases 2021 IoT &amp; Edge Developer Survey Results</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-foundation-releases-2021-iot-edge-developer-survey-results</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-foundation-releases-2021-iot-edge-developer-survey-results</link>
	<description>&lt;p class=&quot;rtecenter&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;– The world’s largest open source IoT community reveals developer trends focused on edge computing, AI, and security, with results detailing platform use, developer concerns, target markets, and more – &lt;/span&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BRUSSELS – DECEMBER 7, 2021 –  &lt;/strong&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The &lt;/span&gt;&lt;a href=&quot;http://www.eclipse.org&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse Foundation&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, the world’s largest open source foundation focused on the Internet of Things (IoT), today announced results from its 2021 IoT &amp;amp; Edge Developer Survey. Administered by the &lt;/span&gt;&lt;a href=&quot;https://iot.eclipse.org&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse IoT Working Group&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, the &lt;/span&gt;&lt;a href=&quot;https://edgenative.eclipse.org/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse Edge Native Working Group&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, and the &lt;/span&gt;&lt;a href=&quot;https://sparkplug.eclipse.org/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse Sparkplug Working Group&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, the survey provides essential insights into IoT and edge computing industry landscapes, the challenges developers are facing, and the opportunities for enterprise stakeholders in the IoT &amp;amp; edge open source ecosystem. Now in its seventh year, the survey is the IoT &amp;amp; edge industry’s leading technical survey. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;“The IoT and edge computing go hand-in-hand with each technology influencing the other,” said Mike Milinkovich, executive director of the Eclipse Foundation. “Once again, this survey provides significant insights into what developers are working on and what challenges they face as we move into 2022.”&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The online survey was conducted over a period of seven weeks (Aug 26, 2021 - October 12, 2021) during which time 662 global developers, committers, architects, and decision-makers from a broad set of industries and organizations participated. Key findings include:&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Industrial automation has displaced smart agriculture as the leading vertical industry for IoT and edge computing technologies &lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Security (46%), connectivity (38%) and deployment (31%) are the top three concerns for IoT developers &lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;C and C++ are the most widely used programming languages for constrained devices. Developers prefer Python over Java for edge servers, IoT &amp;amp; edge gateways, and cloud platform development&lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Artificial Intelligence (21%) remains the top edge computing workload, unchanged from 2020. However, the number of workloads diversified significantly.  &lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The IoT middleware market is dominated by AWS IoT (37%), Microsoft Azure IoT (27%), and Google Cloud IoT Platform (22%)&lt;/span&gt;&lt;/li&gt;
	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Message Broker-MQTT (44%) is the top technology used in messaging infrastructure &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The survey data also contains details around edge computing workloads,  developer concerns, and breakdowns by market. The entire report and its ground-breaking insights can be downloaded &lt;/span&gt;&lt;a href=&quot;https://outreach.eclipse.foundation/iot-edge-developer-2021&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;here&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse IoT’s knowledge and expertise spanning 10+ years of experience in the field of edge and IoT. Eclipse IoT is home to open source innovation that has delivered some of the industry’s most popular IoT protocols. CoAP (Eclipse Californium), DDS (Eclipse Cyclone DDS), LwM2M (Eclipse Leshan), MQTT (Eclipse Paho, Eclipse Mosquitto and Eclipse Amlen) and OPC UA (Eclipse Milo) are all built around Eclipse IoT projects. Other popular Eclipse IoT production-ready platforms cover use cases such as digital twins (Eclipse Ditto), energy management (Eclipse VOLTTRON), contactless payments (Eclipse Keyple), Industrial applications (Eclipse Kura) in addition to Eclipse Kapua  — a modular IoT cloud platform that manages data, devices, and much more.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;To learn more about how to get involved with Eclipse IoT, Edge Native, Sparkplug or other working groups at the Eclipse Foundation, visit the Foundation’s membership page. Working group members benefit from a broad range of services, including exclusive access to detailed industry research findings, marketing assistance, and expert open source governance.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;For further IoT &amp;amp; edge related information, please reach us at:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;IoT@eclipse.org&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Edgenative@eclipse.org&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About the Eclipse Foundation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter &lt;/span&gt;&lt;a href=&quot;https://twitter.com/EclipseFdn&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;@EclipseFdn&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, &lt;/span&gt;&lt;a href=&quot;https://linkedin.com/company/eclipse-foundation&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;LinkedIn&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; or visit &lt;/span&gt;&lt;a href=&quot;http://eclipse.org&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;eclipse.org&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Third-party trademarks mentioned are the property of their respective owners.&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;###&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Media contacts: &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL&lt;/u&gt;&lt;br /&gt;
Julia Rauch / Sophie Dechansreiter / Tobias Weiß&lt;br /&gt;
Sendlinger Straße 42A&lt;br /&gt;
80331 Munich&lt;br /&gt;
EclipseFoundation@schwartzpr.de&lt;br /&gt;
+49 (89) 211 871 – 43 / -35 / -70&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/u&gt;&lt;br /&gt;
Jay Nichols&lt;br /&gt;
jay@nicholscomm.com&lt;br /&gt;
+1 408-772-1551&lt;/p&gt;</description>
	<pubDate>Tue, 07 Dec 2021 10:00:00 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: Java News Roundup: IntelliJ IDEA, JEP 421, Groovy, Open Liberty, Hibernate ORM, Eclipse Collections</title>
	<guid isPermaLink="true">https://www.infoq.com/news/2021/12/java-news-roundup-nov29-2021/?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>https://www.infoq.com/news/2021/12/java-news-roundup-nov29-2021/?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;https://res.infoq.com/news/2021/12/java-news-roundup-nov29-2021/en/headerimage/java-roundup-1638844343730.jpg&quot; /&gt;&lt;p&gt;This week's Java roundup for November 29th, 2021, features news from OpenJDK, JDK 18, Project Loom Build 18-loom+7-288, multiple Spring project point releases, Quarkus 2.5.1.Final, WildFly 26 Beta 1, Open Liberty 21.0.0.12, Hibernate ORM 6.0.0-Beta2, Eclipse Mojarra 2.3.17, GraalVM Native Build Tools 0.9.8, Groovy 4.0.0-RC1, Eclipse Collections 11.0.0, IntelliJ IDEA 2021.3, and JReleaser 0.9.0.&lt;/p&gt; &lt;i&gt;By Michael Redlich&lt;/i&gt;</description>
	<pubDate>Tue, 07 Dec 2021 06:30:00 +0000</pubDate>
</item>
<item>
	<title>Denis Roy: Is software development Green?</title>
	<guid isPermaLink="false">7068 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/denis-roy/software-development-green</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;The world is environmentally conscious like never before. The planet's resources are not endless, and the amount of waste that our environment can tolerate is limited. We understand the need to recycle, the need for public transit, the need to use green energy, such as wind power and electric cars. We're all starting to do what we can to &lt;strong&gt;minimize our footprint&lt;/strong&gt; on this planet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So why are we so wasteful in the software development cycle?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You know that scenario I'm talking about: one line change in a Pull Request triggers a build, where a compute environment is created from scratch, megabytes and megabytes of data pulled from the Internet, massive amounts of code are compiled, verified against complex test suites, digitally signed and placed in an artifact storage that is seldomly cleaned up. Compound all that if the module built is a dependency that triggers another, larger build.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The environment is then torn down and discarded&lt;/strong&gt;, only to be recreated moments later, perhaps multiple times a day, to support that need for Continuous Integration and the immediate feedback loop.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We're generation Giga&lt;/strong&gt; -- we have Gigabits/sec of bandwidth, dozens of Gigabytes of RAM, multiple processors operating at several GigaHertz, and thousands of Gigabytes of storage on devices that can move several Gigabytes of data each second. &lt;strong&gt;So why not?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As I stand behind a cabinet in the Eclipse Datacenter upgrading our network gear, &lt;strong&gt;I feel the heat of all those servers&lt;/strong&gt; being blown in my face. Power units on each side of the cabinet, each delivering 60 amps of 208v 3-phase AC current, are silent -- I think. &lt;strong&gt;I can't hear anything&lt;/strong&gt; but the soothing sound of &lt;strong&gt;thousands of fans&lt;/strong&gt; dissipating all the heat. But my comfort is only temporary: I walk down the long isle of cabinets, make two left turns to avoid the &lt;strong&gt;bedroom-sized Air Conditioner units&lt;/strong&gt;, and I'm in the cold zone -- where cool, conditioned air blows up from the floor, ingested from the front of cabinets, and transformed into hot air. The three &lt;strong&gt;transport-truck-sized diesel-powered generators&lt;/strong&gt; outside the building are standing by, should the building's &lt;strong&gt;closet-sized UPS batteries&lt;/strong&gt; near depletion in the event of a power outage.&lt;/p&gt;

&lt;p&gt;Where I live, &lt;strong&gt;water is free&lt;/strong&gt; and &lt;strong&gt;AC power is dirt cheap&lt;/strong&gt;. I could fill a full sink of hot water, wash each individual plate, bowl, dish and utensil with a clean cloth I use only once, drain and restart. Each plate, bowl and utelsil would be &lt;strong&gt;as clean as the previous&lt;/strong&gt;.  Who cares, it's cheap, and &lt;strong&gt;it's free, right&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;No, it's not. It's not free. It's not cheap.&lt;/p&gt;

&lt;p&gt;And it's not Green, either.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 02 Dec 2021 20:16:33 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: 5 Questions for Michael Plagge, Eclipse Foundation Europe GmbH</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/5-questions-michael-plagge-eclipse-foundation-europe-gmbh</guid>
	<link>https://newsroom.eclipse.org/news/announcements/5-questions-michael-plagge-eclipse-foundation-europe-gmbh</link>
	<description>Eclipse Foundation Director of Ecosystem Development Michael Plagge discussed industry challenges and opportunities for digitization in this interview with the eco Association.</description>
	<pubDate>Thu, 02 Dec 2021 13:28:33 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Eclipse Collections 11.0 Released</title>
	<guid isPermaLink="false">https://medium.com/p/d14df63f5d1d</guid>
	<link>https://medium.com/oracledevs/eclipse-collections-11-0-released-d14df63f5d1d?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Features you want with the collections you need.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*2RUG1AAgoDDQco3bmrfnGw.jpeg&quot; /&gt;&lt;figcaption&gt;Hampton Court Palace, England, 2004, Photo taken by Donald Raab&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Eclipse Collections 11.0 is here&lt;/h3&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/501/1*jYt7jTOJZuvxHZafavQuRA.png&quot; /&gt;&lt;figcaption&gt;Eclipse Collections 11.0 in Maven Central&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I’m excited to share that the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/releases/tag/11.0.0&quot;&gt;11.0 release&lt;/a&gt; is now available in Maven Central. It has been over a year since we released Eclipse Collections 10.4 in August, 2020. Since then there have been three new JDK releases (15, 16, 17)! Eclipse Collections continues to participate in the &lt;a href=&quot;https://wiki.openjdk.java.net/display/quality/Quality+Outreach&quot;&gt;OpenJDK Quality Outreach Program&lt;/a&gt; and tests against the latest releases of the JDK as they become available. We are currently building and testing actively against JDK 8, 11, 17, and 18 EA.&lt;/p&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt; — &lt;a href=&quot;https://twitter.com/sirishapratha/status/1465358352670765066&quot;&gt;@sirishapratha&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;10 years as OSS, 6 years at Eclipse Foundation&lt;/h3&gt;&lt;p&gt;GS Collections was released in January 2012, and was migrated to the Eclipse Foundation in December 2015. We celebrate 6 years of &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; at the Eclipse Foundation in December 2021, and 10 years of open source development and public releases in January 2022.&lt;/p&gt;&lt;p&gt;Thank you to everyone who worked to make Eclipse Collections possible, and to all of the contributors who have invested time and energy into this wonderfully feature rich library the past 6 years at the Eclipse Foundation.&lt;/p&gt;&lt;p&gt;Here’s a look back at the article in InfoQ detailing GS Collections migrating to the Eclipse Foundation to become Eclipse Collections six years ago.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.infoq.com/news/2016/01/GS-Collections-Eclipse-Foundn/&quot;&gt;GS Collections Moves to the Eclipse Foundation&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Thank you to the release team&lt;/h3&gt;&lt;p&gt;The Eclipse Collections 11.0 release would not have been possible without the efforts of Eclipse Collections committer &lt;a href=&quot;https://medium.com/u/8fe7c47c374f&quot;&gt;Sirisha Pratha&lt;/a&gt; and Eclipse Collections Project Lead &lt;a href=&quot;https://medium.com/u/4285d8a2ca86&quot;&gt;Nikhil Nanivadekar&lt;/a&gt;. Thank you for all of your hard work at delivering this release!&lt;/p&gt;&lt;h3&gt;Thank you to the community&lt;/h3&gt;&lt;p&gt;The 11.0 release has a lot of new features submitted by our outstanding community of contributors. Thank you so much to all of the contributors who donated their valuable time to making Eclipse Collections more feature rich and even higher quality. Your efforts are very much appreciated.&lt;/p&gt;&lt;h3&gt;New Features with Contributor Blogs&lt;/h3&gt;&lt;p&gt;I’ve been encouraging Eclipse Collections contributors to write blogs about the features they contribute to the project. I do my best to set a good example and try to regularly blog about any features I added to Eclipse Collections, or new katas I add to the Eclipse Collections Kata repository.&lt;/p&gt;&lt;p&gt;Following are a few of the blogs written by contributors about features they have contributed to the Eclipse Collections 11.0 release.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added containsAny and containsNone on primitive iterables.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://rinatigati.medium.com/primitive-containsany-containsnone-in-eclipse-collections-60fbfc7e4c3f&quot;&gt;Primitive containsAny &amp;amp; containsNone in Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Blog by &lt;/em&gt;&lt;a href=&quot;https://medium.com/u/6578859a4ea6&quot;&gt;&lt;em&gt;Rinat Gatyatullin&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added union, intersect, difference, symmetric difference, cartesianProduct , isSubsetOf, isProperSubsetOf to primitive sets.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://pratha-sirisha.medium.com/primitive-set-operations-in-eclipse-collections-b126c9121d15&quot;&gt;Primitive Set Operations in Eclipse Collections&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://pratha-sirisha.medium.com/primitive-set-operations-in-eclipse-collections-part-2-97cb8e8e5fc7&quot;&gt;Primitive Set Operations in Eclipse Collections — Part 2&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Blogs by &lt;/em&gt;&lt;a href=&quot;https://medium.com/u/8fe7c47c374f&quot;&gt;&lt;em&gt;Sirisha Pratha&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added anySatisfyWithOccurrences, allSatisfyWithOccurrences, noneSatisfyWithOccurrences, detectWithOccurrences to Bag.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@goldbal/ec-by-example-new-features-in-the-bag-api-8802fd568211&quot;&gt;EC by Example: new features in the Bag API&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Blog by &lt;/em&gt;&lt;a href=&quot;https://medium.com/u/da10a7c5350&quot;&gt;&lt;em&gt;Alex Goldberg&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added putAllMapIterable method to MutableMap.&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Added withMapIterable to MutableMap.&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Added newWithMap and newWithMapIterable to ImmutableMap.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://neha-nsit.medium.com/new-ways-to-create-maps-in-eclipse-collections-map-api-8bb5d74be01d&quot;&gt;New ways to create Maps in Eclipse Collections Map API&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Blog by &lt;/em&gt;&lt;a href=&quot;https://medium.com/u/fd242ea950aa&quot;&gt;&lt;em&gt;Neha Sardana&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added toImmutableList/Set/Bag/Map/BiMap to RichIterable.&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Added toImmutableSortedList/Set/Bag to RichIterable.&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Added toImmutableSortedBag/List/Set with Comparator to RichIterable.&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Added toImmutableSortedBagBy/ListBy/SetBy with Function to RichIterable.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/improving-the-symmetry-of-converter-methods-in-eclipse-collections-922d74a3f065&quot;&gt;Improving the symmetry of converter methods in Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Blog by &lt;/em&gt;&lt;a href=&quot;https://medium.com/u/df39b86e9f04&quot;&gt;&lt;em&gt;Donald Raab&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added ClassComparer utility.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/how-to-introspect-and-find-conceptual-symmetry-between-classes-in-java-696999b7eeda&quot;&gt;How to introspect and find conceptual symmetry between classes in Java&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Blog by &lt;/em&gt;&lt;a href=&quot;https://medium.com/u/df39b86e9f04&quot;&gt;&lt;em&gt;Donald Raab&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;More new Features w/ Examples&lt;/h3&gt;&lt;p&gt;The following are the remaining list of new features. The features in bold have examples immediately following.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added &lt;/strong&gt;&lt;strong&gt;selectWithIndex and &lt;/strong&gt;&lt;strong&gt;rejectWithIndex to &lt;/strong&gt;&lt;strong&gt;OrderedIterable and &lt;/strong&gt;&lt;strong&gt;ListIterable.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;@Test&lt;br /&gt;public void selectWithIndex()&lt;br /&gt;{&lt;br /&gt;    var list = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4);&lt;br /&gt;    var actual = list.selectWithIndex((each, i) -&amp;gt; each + i &amp;gt; 3);&lt;br /&gt;    var expected = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(3, 4);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, actual);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;@Test&lt;br /&gt;public void rejectWithIndex()&lt;br /&gt;{&lt;br /&gt;    var list = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4);&lt;br /&gt;    var actual = list.rejectWithIndex((each, i) -&amp;gt; each + i &amp;gt; 3);&lt;br /&gt;    var expected = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, actual);&lt;br /&gt;}&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;Added covariant overrides for sortThis().&lt;/li&gt;&lt;li&gt;Added covariant return types to methods in MultiReaderList that return this.&lt;/li&gt;&lt;li&gt;Added primitive singleton iterator.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Added &lt;/strong&gt;&lt;strong&gt;toSortedList(&lt;/strong&gt;&lt;strong&gt;Comparator) and &lt;/strong&gt;&lt;strong&gt;toSortedListBy(&lt;/strong&gt;&lt;strong&gt;Function) to primitive iterables.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;@Test&lt;br /&gt;public void toSortedListWithComparator()&lt;br /&gt;{&lt;br /&gt;    var set = IntSets.&lt;strong&gt;&lt;em&gt;immutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4, 5);&lt;br /&gt;    var list = set.toSortedList((i1, i2) -&amp;gt; i2 - i1);&lt;br /&gt;    var expected = IntLists.&lt;strong&gt;&lt;em&gt;immutable&lt;/em&gt;&lt;/strong&gt;.with(5, 4, 3, 2, 1);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, list);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;@Test&lt;br /&gt;public void toSortedListByWithFunction()&lt;br /&gt;{&lt;br /&gt;    var set = IntSets.&lt;strong&gt;&lt;em&gt;immutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4, 5);&lt;br /&gt;    var list = set.toSortedListBy(Math::&lt;em&gt;negateExact&lt;/em&gt;);&lt;br /&gt;    var expected = IntLists.&lt;strong&gt;&lt;em&gt;immutable&lt;/em&gt;&lt;/strong&gt;.with(5, 4, 3, 2, 1);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, list);&lt;br /&gt;}&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added &lt;/strong&gt;&lt;strong&gt;isEqual and &lt;/strong&gt;&lt;strong&gt;isSame to &lt;/strong&gt;&lt;strong&gt;Pair and &lt;/strong&gt;&lt;strong&gt;Triple as default methods.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;@Test&lt;br /&gt;public void isEqual()&lt;br /&gt;{&lt;br /&gt;    Twin&amp;lt;String&amp;gt; pair1 = Tuples.&lt;em&gt;twin&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertTrue&lt;/em&gt;(pair1.isEqual());&lt;br /&gt;    Twin&amp;lt;String&amp;gt; pair2 = Tuples.&lt;em&gt;twin&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertFalse&lt;/em&gt;(pair2.isEqual());&lt;br /&gt;&lt;br /&gt;    Triplet&amp;lt;String&amp;gt; triple1 = Tuples.&lt;em&gt;triplet&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertTrue&lt;/em&gt;(triple1.isEqual());&lt;br /&gt;    Triplet&amp;lt;String&amp;gt; triple2 = Tuples.&lt;em&gt;triplet&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertFalse&lt;/em&gt;(triple2.isEqual());&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;@Test&lt;br /&gt;public void isSame()&lt;br /&gt;{&lt;br /&gt;    Twin&amp;lt;String&amp;gt; pair1 = Tuples.&lt;em&gt;identicalTwin&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertTrue&lt;/em&gt;(pair1.isSame());&lt;br /&gt;    Twin&amp;lt;String&amp;gt; pair2 = Tuples.&lt;em&gt;twin&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, new String(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;));&lt;br /&gt;    Assertions.&lt;em&gt;assertFalse&lt;/em&gt;(pair2.isSame());&lt;br /&gt;&lt;br /&gt;    Triplet&amp;lt;String&amp;gt; triple1 = Tuples.&lt;em&gt;identicalTriplet&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertTrue&lt;/em&gt;(triple1.isSame());&lt;br /&gt;    Triplet&amp;lt;String&amp;gt; triple2 = Tuples.&lt;em&gt;triplet&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, new String(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;), &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertFalse&lt;/em&gt;(triple2.isSame());&lt;br /&gt;}&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added converters from &lt;/strong&gt;&lt;strong&gt;Pair and &lt;/strong&gt;&lt;strong&gt;Triple to &lt;/strong&gt;&lt;strong&gt;List types.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;@Test&lt;br /&gt;public void pairToList()&lt;br /&gt;{&lt;br /&gt;    Twin&amp;lt;String&amp;gt; twin = Tuples.&lt;em&gt;twin&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;);&lt;br /&gt;    var mutableList = Tuples.&lt;em&gt;pairToList&lt;/em&gt;(twin);&lt;br /&gt;    var fixedSizeList = Tuples.&lt;em&gt;pairToFixedSizeList&lt;/em&gt;(twin);&lt;br /&gt;    var immutableList = Tuples.&lt;em&gt;pairToImmutableList&lt;/em&gt;(twin);&lt;br /&gt;    var expected = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, mutableList);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, fixedSizeList);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, immutableList);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;@Test&lt;br /&gt;public void tripleToList()&lt;br /&gt;{&lt;br /&gt;    Triplet&amp;lt;String&amp;gt; triplet = Tuples.&lt;em&gt;identicalTriplet&lt;/em&gt;(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;);&lt;br /&gt;    var mutableList = Tuples.&lt;em&gt;tripleToList&lt;/em&gt;(triplet);&lt;br /&gt;    var fixedSizeList = Tuples.&lt;em&gt;tripleToFixedSizeList&lt;/em&gt;(triplet);&lt;br /&gt;    var immutableList = Tuples.&lt;em&gt;tripleToImmutableList&lt;/em&gt;(triplet);&lt;br /&gt;    var expected = Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, mutableList);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, fixedSizeList);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, immutableList);&lt;br /&gt;}&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added &lt;/strong&gt;&lt;strong&gt;toImmutableSortedBagBy to &lt;/strong&gt;&lt;strong&gt;Collectors2.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collectors2toImmutableSortedBagBy()&lt;br /&gt;{&lt;br /&gt;    List&amp;lt;Integer&amp;gt; list = List.&lt;em&gt;of&lt;/em&gt;(1, 2, 2, 3, 3, 3);&lt;br /&gt;    ImmutableSortedBag&amp;lt;Integer&amp;gt; bag = &lt;br /&gt;        list.stream().collect(&lt;br /&gt;            Collectors2.&lt;em&gt;toImmutableSortedBagBy&lt;/em&gt;(Math::&lt;em&gt;negateExact&lt;/em&gt;));&lt;br /&gt;    Comparator&amp;lt;Integer&amp;gt; c = &lt;br /&gt;        Functions.&lt;em&gt;toIntComparator&lt;/em&gt;(Math::&lt;em&gt;negateExact&lt;/em&gt;);&lt;br /&gt;    var expected = SortedBags.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(c, 1, 2, 2, 3, 3, 3);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, bag);&lt;br /&gt;}&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added &lt;/strong&gt;&lt;strong&gt;toImmutableSortedMap and &lt;/strong&gt;&lt;strong&gt;toImmutableSortedMapBy to &lt;/strong&gt;&lt;strong&gt;Collectors2.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collects2toImmutableSortedMap()&lt;br /&gt;{&lt;br /&gt;    List&amp;lt;Integer&amp;gt; list = List.&lt;em&gt;of&lt;/em&gt;(1, 2, 3);&lt;br /&gt;    Comparator&amp;lt;Integer&amp;gt; c =&lt;br /&gt;        Functions.&lt;em&gt;toIntComparator&lt;/em&gt;(Math::&lt;em&gt;negateExact&lt;/em&gt;);&lt;br /&gt;    ImmutableSortedMap&amp;lt;Integer, String&amp;gt; map =&lt;br /&gt;        list.stream().collect(&lt;br /&gt;            Collectors2.&lt;em&gt;toImmutableSortedMap&lt;/em&gt;(c, e -&amp;gt; e, String::&lt;em&gt;valueOf&lt;/em&gt;));&lt;br /&gt;    var expected = SortedMaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(c, 1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, 3, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, map);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;@Test&lt;br /&gt;public void collects2toImmutableSortedMapBy()&lt;br /&gt;{&lt;br /&gt;    List&amp;lt;Integer&amp;gt; list = List.&lt;em&gt;of&lt;/em&gt;(1, 2, 3);&lt;br /&gt;    Function&amp;lt;Integer, Integer&amp;gt; negate = Math::&lt;em&gt;negateExact&lt;/em&gt;;&lt;br /&gt;    ImmutableSortedMap&amp;lt;Integer, String&amp;gt; map =&lt;br /&gt;        list.stream().collect(&lt;br /&gt;            Collectors2.&lt;em&gt;toImmutableSortedMapBy&lt;/em&gt;(negate, e -&amp;gt; e, String::&lt;em&gt;valueOf&lt;/em&gt;));&lt;br /&gt;    Comparator&amp;lt;Integer&amp;gt; c = Comparator.&lt;em&gt;comparing&lt;/em&gt;(negate);&lt;br /&gt;    var expected = SortedMaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(c, 1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, 3, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, map);&lt;br /&gt;}&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Added &lt;/strong&gt;&lt;strong&gt;toSortedMap and &lt;/strong&gt;&lt;strong&gt;toSortedMapBy to &lt;/strong&gt;&lt;strong&gt;Collectors2.&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;@Test&lt;br /&gt;public void collects2toSortedMap()&lt;br /&gt;{&lt;br /&gt;    List&amp;lt;Integer&amp;gt; list = List.&lt;em&gt;of&lt;/em&gt;(1, 2, 3);&lt;br /&gt;    Comparator&amp;lt;Integer&amp;gt; c =&lt;br /&gt;        Functions.&lt;em&gt;toIntComparator&lt;/em&gt;(Math::&lt;em&gt;negateExact&lt;/em&gt;);&lt;br /&gt;    MutableSortedMap&amp;lt;Integer, String&amp;gt; map =&lt;br /&gt;        list.stream().collect(&lt;br /&gt;            Collectors2.&lt;em&gt;toSortedMap&lt;/em&gt;(c, e -&amp;gt; e, String::&lt;em&gt;valueOf&lt;/em&gt;));&lt;br /&gt;    var expected = SortedMaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(c, 1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, 3, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, map);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;@Test&lt;br /&gt;public void collects2toSortedMapBy()&lt;br /&gt;{&lt;br /&gt;    List&amp;lt;Integer&amp;gt; list = List.&lt;em&gt;of&lt;/em&gt;(1, 2, 3);&lt;br /&gt;    Function&amp;lt;Integer, Integer&amp;gt; negate = Math::&lt;em&gt;negateExact&lt;/em&gt;;&lt;br /&gt;    MutableSortedMap&amp;lt;Integer, String&amp;gt; map =&lt;br /&gt;        list.stream().collect(&lt;br /&gt;            Collectors2.&lt;em&gt;toSortedMapBy&lt;/em&gt;(negate, e -&amp;gt; e, String::&lt;em&gt;valueOf&lt;/em&gt;));&lt;br /&gt;    Comparator&amp;lt;Integer&amp;gt; c = Comparator.&lt;em&gt;comparing&lt;/em&gt;(negate);&lt;br /&gt;    var expected = SortedMaps.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(c, 1, &lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, 2, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, 3, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(expected, map);&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;Norwegian Website Translation&lt;/h3&gt;&lt;p&gt;We now have a &lt;a href=&quot;https://www.eclipse.org/collections/no-nb/index.html&quot;&gt;Norwegian translation&lt;/a&gt; of the Eclipse Collections web site.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/927/1*sBs0er6d8PUX0PRD0bieoQ.png&quot; /&gt;&lt;figcaption&gt;Norwegian Translation of the Eclipse Collections website&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Thank you to &lt;a href=&quot;https://twitter.com/rmehmandarov&quot;&gt;Rustam Mehmandarov&lt;/a&gt; for the contribution and to &lt;a href=&quot;https://twitter.com/madsopheim&quot;&gt;Mads Opheim&lt;/a&gt; for reviewing the translation!&lt;/p&gt;&lt;h3&gt;Three new Eclipse Collections Katas in 2021&lt;/h3&gt;&lt;p&gt;There were three new code katas created and added to the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata&quot;&gt;Eclipse Collections Kata repository&lt;/a&gt; in 2021. I wrote the following blog about the six Eclipse Collections Katas. The Eclipse Collections katas are the best hands-on resource for learning the Eclipse Collections library.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/the-eclipse-collections-code-katas-d1539d45d104&quot;&gt;The Eclipse Collections Code Katas&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;And there’s more!&lt;/h3&gt;&lt;p&gt;Please refer to the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/releases/tag/11.0.0&quot;&gt;11.0 release notes&lt;/a&gt; for a more comprehensive set of changes made available in the 11.0 release. In there you will find details of optimizations, tech debt reduction, removed functionality, build changes, and a list of breaking changes.&lt;/p&gt;&lt;h3&gt;Thank you&lt;/h3&gt;&lt;p&gt;We continue to see an upward trend of downloads from Maven Central each month. From all the contributors and committers to the entire Eclipse Collections community… thank you for using Eclipse Collections!&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/804/1*aEgAOTAi3OscjYKWP0-1fg.png&quot; /&gt;&lt;figcaption&gt;Downloads of eclipse-collections for the past 12 months&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;We hope you enjoy all of the new features and improvements in the 11.0 release!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=d14df63f5d1d&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/eclipse-collections-11-0-released-d14df63f5d1d&quot;&gt;Eclipse Collections 11.0 Released&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/oracledevs&quot;&gt;Oracle Developers&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Tue, 30 Nov 2021 03:07:21 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: CDT.cloud? C/C++ tooling in the web/cloud</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=45359</guid>
	<link>https://eclipsesource.com/blogs/2021/11/26/cdt-cloud-c-c-tooling-in-the-web-cloud/</link>
	<description>&lt;p&gt;Are you looking to build a custom C/C++ tool using modern technologies? Do you have an existing Eclipse CDT-based toolchain and...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2021/11/26/cdt-cloud-c-c-tooling-in-the-web-cloud/&quot; rel=&quot;nofollow&quot;&gt;CDT.cloud? C/C++ tooling in the web/cloud&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Fri, 26 Nov 2021 11:08:20 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: The Eclipse Collections Code Katas</title>
	<guid isPermaLink="false">https://medium.com/p/d1539d45d104</guid>
	<link>https://donraab.medium.com/the-eclipse-collections-code-katas-d1539d45d104?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Learn the Eclipse Collections library by completing hands-on Java code katas.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*QMgLov7OvGIqDEim&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@carlheyerdahl?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Carl Heyerdahl&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;We learn best by doing&lt;/blockquote&gt;&lt;h3&gt;What is Eclipse Collections?&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt;Eclipse Collections&lt;/a&gt; is an open source Java collections library. Eclipse Collections has been evolving as a Java library since 2004. It was first released into open source as GS Collections in January 2012. It was later moved to the Eclipse Foundation in December 2015 and became &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;You can read more about the history of GS Collections and its move to the Eclipse Foundation in the following article in InfoQ.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.infoq.com/news/2016/01/GS-Collections-Eclipse-Foundn/&quot;&gt;GS Collections Moves to the Eclipse Foundation&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;What are the Eclipse Collections Katas?&lt;/h3&gt;&lt;p&gt;The Eclipse Collections Katas are structured exercises organized into individual kata modules that will help you learn the Eclipse Collections library. There are currently six distinct code katas that make up the Eclipse Collections Kata Project on GitHub.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata&quot;&gt;GitHub - eclipse/eclipse-collections-kata: Eclipse Collections Katas&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The katas are the best way to learn the Eclipse Collections library. The Eclipse Collections project started out at the Eclipse Foundation initially with two supporting code katas — the&lt;strong&gt; Company Kata&lt;/strong&gt; and the &lt;strong&gt;Pet Kata&lt;/strong&gt;. These two katas have been used over the past decade to teach thousands of Java developers how to use the Eclipse Collections library. They are still the best katas to start learning Eclipse Collections by doing.&lt;/p&gt;&lt;p&gt;I blogged about the two original Eclipse Collections katas a few years ago.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/a-tale-of-two-katas-ec956410d26d&quot;&gt;A Tale of Two Katas&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;More doing, more learning&lt;/h3&gt;&lt;p&gt;Over the past four years, four more code katas have been added to the Eclipse Collections Kata project. Each kata focuses on a different area of Eclipse Collections. The more Eclipse Collections katas you do, the more you will learn about Eclipse Collections.&lt;/p&gt;&lt;p&gt;I will briefly describe each of the four new Eclipse Collections katas, and what motivated their creation.&lt;/p&gt;&lt;h4&gt;Candy Kata&lt;/h4&gt;&lt;p&gt;The Candy Kata was originally developed to teach Java developers about the Bag data structure available in Eclipse Collections.&lt;/p&gt;&lt;p&gt;Halloween is a popular holiday in the U.S. Many school aged kids get dressed up in costumes and go around their neighborhoods collecting candy in bags. In my neighborhood, the school kids usually make the rounds collecting bags of candy in different groups. The youngest kids start with their parents early in the afternoon, followed by the middle school kids before sunset, and then finally the high school kids who usually go out in the evening.&lt;/p&gt;&lt;p&gt;This kata has a single test class with two tests that focus on using methods on Bag and Set classes.&lt;/p&gt;&lt;p&gt;I blogged about the Candy Kata on Halloween back in 2018.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://donraab.medium.com/trick-or-treat-a-halloween-kata-d469e1400d48&quot;&gt;Trick or Treat: A Halloween Kata&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Converter Method Kata&lt;/h4&gt;&lt;p&gt;The Converter Method Kata started out as a blog that explained how to convert one collection type to another type using Eclipse Collections converter methods. Converter methods are methods that being with the prefix “to” and copy collections contents from one type to another. In order to convert a List to a Set in Eclipse Collections, you can call toSet on the List. The kinds of converters a developer can learn in this kata are as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Convert object collections to MutableCollection types&lt;/li&gt;&lt;li&gt;Convert object collections to ImmutableCollection types&lt;/li&gt;&lt;li&gt;Convert Java Streams to MutableCollection types using Collectors2&lt;/li&gt;&lt;li&gt;Convert Java Streams to ImmutableCollection types using Collectors2&lt;/li&gt;&lt;li&gt;Convert primitive collections to other primitive MutableCollection types&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I blogged about the converter methods available in Eclipse Collections almost a year ago.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/converter-methods-in-eclipse-collections-6b9bfc0f2490&quot;&gt;Converter methods in Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Top Methods Kata&lt;/h4&gt;&lt;p&gt;The Top Methods Kata started out as a blog where I wanted to see how many of the Eclipse Collections methods I could include in a single method example. I decided to stop at 25 methods, even though there are a lot more in the RichIterable interface. We all have limited time, so I wanted to create a kata that a developer could complete that would expose them to the most commonly used methods in the Eclipse Collections API as quickly as possible.&lt;/p&gt;&lt;p&gt;The Top Methods Kata has a single test that you need to complete. There is a test method for each method in the Eclipse Collections API I wanted to include as an example for developers to learn.&lt;/p&gt;&lt;p&gt;Linked here is the original blog which I later turned into the Top Methods Kata.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/my-25-favorite-eclipse-collections-apis-a51589ee5c4a&quot;&gt;My 25 favorite methods from the Eclipse Collections API&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Lost and Found Kata&lt;/h4&gt;&lt;p&gt;Eclipse Collections is a huge library. The code base has over 1 million lines of code. This makes it a challenge to teach all of the amazing features available in the Eclipse Collections API to developers. A million lines of code is just too much code to just sit down and read. This rather large code base has 18 years of software engineering investment, including contributions from over 100 developers. There are many data structures and algorithms you will not find direct equivalents for in the JDK today.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/u/4285d8a2ca86&quot;&gt;Nikhil Nanivadekar&lt;/a&gt; and I gave a talk on Eclipse Collections to a few hundred software engineers in Amazon at the end of July 2021. In this talk we included examples of several data structures and algorithms that we felt were not generally well known by developers, and had no direct equivalent in the JDK. After delivering this talk, I decided I would write a few blogs going into much more detail about the “missing Java data structures no one ever told you about”. The following blog links to the blog series I wrote in August 2021.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/blog-series-the-missing-java-data-structures-no-one-ever-told-you-about-17f34cc4b7e2&quot;&gt;Blog Series: The missing Java data structures no one ever told you about&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The Lost and Found Kata was a translation of this blog series into an advanced code kata that can help contributors who are interested learn Eclipse Collections in depth.&lt;/p&gt;&lt;p&gt;The kata is broken into three sections and covers many different data types. I’m including this snapshot of the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata/blob/master/lost-and-found-kata/README.md&quot;&gt;README.md&lt;/a&gt; to show what a developer can potentially learn by completing this kata.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*Gh5b16JpqX2mIUaX-y6xKQ.png&quot; /&gt;&lt;figcaption&gt;README — What is in the Lost and Found Kata?&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;After 18 years of working on Eclipse Collections, I started to feel like I was at risk of forgetting more than I could remember. I wanted to write down as many things that I know or learned, in blogs and katas before the knowledge became only mysterious artifacts buried in a million lines of code. This is why I created this kata. In this kata I am sharing lessons I learned directly with developers in hand-on exercises, hopefully guaranteeing this found knowledge is never at risk of being lost again.&lt;/p&gt;&lt;h3&gt;Do. Or do not. There is no Try.&lt;/h3&gt;&lt;p&gt;I hope this blog motivates some developers to complete the Eclipse Collections katas. We are looking for more committers for the Eclipse Collections library. If you are interested in investing and committing time to your own learning and the development of the library, then I highly recommend completing the Lost and Found Kata. For more information on becoming a committer on a project managed at the Eclipse Foundation, check out this post on the Eclipse Foundation Wiki.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://wiki.eclipse.org/Development_Resources/Becoming_a_Committer&quot;&gt;Development Resources/Becoming a Committer&lt;/a&gt;&lt;/p&gt;&lt;p&gt;For folks looking for some quick examples to read, or to validate their own solutions to the katas, there are solution modules checked in for each of the katas.&lt;/p&gt;&lt;p&gt;I hope you enjoy these katas! Feedback, improvements and contributions to the katas are amazing and welcome contributions to the library!&lt;/p&gt;&lt;p&gt;Thank you!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=d1539d45d104&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 23 Nov 2021 20:42:05 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Announcing Eclipse Ditto Release 2.2.0</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2021-11-22-release-announcement-220.html</guid>
	<link>https://www.eclipse.org/ditto/2021-11-22-release-announcement-220.html</link>
	<description>&lt;p&gt;The Eclipse Ditto teams announces availability of Eclipse Ditto &lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/2.2.0&quot;&gt;2.2.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It features several nice added features and e.g. allows using the dash &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; in the namespace part of thing IDs.&lt;/p&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: &lt;a href=&quot;https://iot.eclipse.org/adopters/#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From our various &lt;a href=&quot;https://www.eclipse.org/ditto/feedback.html&quot;&gt;feedback channels&lt;/a&gt; we however know of more adoption.&lt;br /&gt;
If you are making use of Eclipse Ditto, it would be great to show this by adding your company name to that list of 
known adopters.&lt;br /&gt;
In the end, that’s one main way of measuring the success of the project.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 2.2.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Filter for twin life-cycle events like e.g. “thing created” or “feature deleted” via RQL expressions&lt;/li&gt;
  &lt;li&gt;Possibility to forward connection logs via fluentd or Fluent Bit to an arbitrary logging system&lt;/li&gt;
  &lt;li&gt;Add OAuth2 client credentials flow as an authentication mechanism for Ditto managed HTTP connections&lt;/li&gt;
  &lt;li&gt;Enable loading additional extra JavaScript libraries for Rhino based JS mapping engine&lt;/li&gt;
  &lt;li&gt;Allow using the dash &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; as part of the “namespace” part in Ditto thing and policy IDs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Policy enforcement for event publishing was fixed&lt;/li&gt;
  &lt;li&gt;Search updater cache inconsistencies were fixed&lt;/li&gt;
  &lt;li&gt;Fixed diff computation in search index on nested arrays&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional work is also included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Collect Apache Kafka consumer metrics and expose them to Prometheus endpoint&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_220.html&quot;&gt;2.2.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: How to introspect and find conceptual symmetry between classes in Java</title>
	<guid isPermaLink="false">https://medium.com/p/696999b7eeda</guid>
	<link>https://medium.com/javarevisited/how-to-introspect-and-find-conceptual-symmetry-between-classes-in-java-696999b7eeda?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Demonstrating ClassComparer, a utility class built with Eclipse Collections.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*V1mbPbNwl92ux4JM&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@throughjackseyes?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Jack French&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;A challenge with rich APIs&lt;/h3&gt;&lt;p&gt;Rich APIs can be great. They can significantly reduce the duplication of code by providing many useful common behaviors. Sometimes there are different implementations of classes that have a similar rich set of method signatures. Some classes in Java are conceptually equivalent, even if they don’t share a common parent abstraction that defines that behavior.&lt;/p&gt;&lt;p&gt;The problem is that we as humans sometimes need help determining and understanding the subtle differences between classes that are conceptually the same. Parsing and comparing the text in Java source files or Javadoc that may be hundreds of lines long is laborious and error prone. Sometimes we miss things. Computers can help us here so we can identify and understand patterns.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; is a library that has a primary design goal of providing good symmetry in its API. This goal is extremely challenging to achieve, given the size of the Eclipse Collections API. The Eclipse Collections API has grown so much in the past 18 years, I’ve needed some help to fully understand it.&lt;/p&gt;&lt;h3&gt;A solution for comparing classes&lt;/h3&gt;&lt;p&gt;A few years ago, I wrote some code in a utility class for comparing the method signatures in two classes. The utility leverages the methods available in Java to introspect classes along with data structures and algorithms available in Eclipse Collections to compare the methods.&lt;/p&gt;&lt;p&gt;There is nothing spectacularly amazing about the utility I wrote that compares classes. I have shared earlier versions of the source code in a previous blog (linked towards the end). It wasn’t until recently when I had to copy the code to my current Eclipse Collections project and modify it in order to compare IntIterable and RichIterable that I decided it would be useful to include it in the Eclipse Collections eclipse-collections-testutils module so I can easily use it in any project where I may need to compare rich APIs.&lt;/p&gt;&lt;p&gt;The utility does the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Reads the methods of each Class using getMethods&lt;/li&gt;&lt;li&gt;Optionally reads the parameters for each Method using getParameters&lt;/li&gt;&lt;li&gt;Optionally will include the return type of each method&lt;/li&gt;&lt;li&gt;Adds a String for each method to one of two MutableSortedSet instances&lt;/li&gt;&lt;li&gt;Calculates the intersection of the two sets of methods&lt;/li&gt;&lt;li&gt;Calculates the differences of the two sets of methods in both directions&lt;/li&gt;&lt;li&gt;Outputs the methods sorted alphabetically and groups them by their first letter&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are a few other useful methods on the utility class named ClassComparer, but this is its primary purpose.&lt;/p&gt;&lt;h4&gt;Keep it simple&lt;/h4&gt;&lt;p&gt;The utility creates the equivalent of a Venn Diagram between the method signatures of two classes. The clever part, if there is any, is that the utility class will allow you to optionally include parameter types and return types in the method signature comparison. By excluding parameter types and return types, we are able to determine if two classes have good conceptual symmetry by simply comparing the method names.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/836/1*MLDII9cDuTqBqqZv8IHbrw.png&quot; /&gt;&lt;/figure&gt;&lt;h3&gt;A simple comparison&lt;/h3&gt;&lt;p&gt;As a first example of a comparison, I will compare StringBuffer and StringBuilder. Note: I was using this code in my local Eclipse Collections project, which is currently using Java 8. StringBuilder was introduced as a drop-in replacement for StringBuffer in Java 5, so we would expect them to have identical method signatures. Conceptually, they are identical. When we dig deeper into the details, we will see that they have subtle differences.&lt;/p&gt;&lt;p&gt;Here’s the code required to compare the two classes, excluding parameter types or return types.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/834/1*-6fH0bDwDnur2jAdGHQutA.png&quot; /&gt;&lt;figcaption&gt;Compare StringBuffer.class and StringBuilder.class&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;This particular method will do the comparison and output a text version of the intersection and bi-directional difference of StringBuffer and StringBuilder classes. Because I have used the default constructor, method parameter types and return types are excluded from the comparison.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/873/1*IgecasL9iO7Zplddw6WBlg.png&quot; /&gt;&lt;figcaption&gt;Output of intersection and differences between StringBuffer and StringBuilder&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Now, let’s compare the output when we include the parameters in the methods.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1007/1*STxC72TDYJs02TtKeWuzWA.png&quot; /&gt;&lt;figcaption&gt;Setting the first flag to true enables the inclusion of method parameter types&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Here’s the output with the method parameters included.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*j9zg041q3V4QrNcGO4jm4g.png&quot; /&gt;&lt;figcaption&gt;Output comparing StringBuffer and StringBuilder with parameter types&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The classes still look identical. So let’s include return types, by setting the second flag in the ClassComparer constructor to true.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1000/1*cuORGbD7QtzXJbml_YT7og.png&quot; /&gt;&lt;figcaption&gt;Setting the second flag to true enables the inclusion of method return types&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Now the output looks much different.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*wxWgLMEh7ewx92BUCxkEfQ.png&quot; /&gt;&lt;figcaption&gt;Output comparing StringBuffer and StringBuilder with parameter and return types&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Many of the method signatures return either StringBuffer or StringBuilder. There is a parent abstraction for both named AbstractStringBuilder which defines many of the methods like append that are called from the two subclasses and are overridden to return a the specific return type. This is why the number of methods grew significantly in the bi-directional difference.&lt;/p&gt;&lt;h3&gt;An experimental Swing UI&lt;/h3&gt;&lt;p&gt;I decided to build a quick prototype Swing UI to display the intersection and differences for ClassComparer. The Swing UI is nicer for quickly comparing the differences, as it uses a three pane list view which more or less emulates a Venn Diagram, just without the overlapping circles.&lt;/p&gt;&lt;p&gt;Here’s what the Swing UI looks like comparing the two classes above.&lt;/p&gt;&lt;h4&gt;Excluding parameter and return types&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*S3mP02F50maMLk8KuLYbrw.png&quot; /&gt;&lt;figcaption&gt;Swing UI comparing StringBuffer and StringBuilder excluding parameter and return types&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Including parameter types&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*XDnGem03FMppe5AMAY98xQ.png&quot; /&gt;&lt;figcaption&gt;Swing UI comparing StringBuffer and StringBuilder including parameter types only&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Including parameter and return types&lt;/h4&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*i3HjQuILjHaWGMBHwwssqw.png&quot; /&gt;&lt;figcaption&gt;Swing UI comparing StringBuffer and StringBuilder including parameter and return types&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Finding asymmetry in the Eclipse Collections API&lt;/h3&gt;&lt;p&gt;To illustrate how a developer working on Eclipse Collections can use this utility to find potential work to complete in the space of improving symmetry, I will compare a primitive collection interface with its equivalent on the object side.&lt;/p&gt;&lt;h4&gt;IntIterable vs. RichIterable&lt;/h4&gt;&lt;p&gt;First, let’s compare the method signatures for IntIterable and RichIterable from a purely conceptual view. We can do this just by using the constructor with no parameter on ClassComparer.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/808/1*gTetQqeqVimQ72JIFawFXw.png&quot; /&gt;&lt;figcaption&gt;Compare IntIterable and RichIterable interfaces&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The output shows some interesting differences between the primitive collection parent type and the object collection parent type even at the conceptual level. Conceptual symmetry is the most important concern we have in Eclipse Collections. We clearly have plenty of work to do in this space.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*sDZW9sMjM-D5thM3jbv18g.png&quot; /&gt;&lt;figcaption&gt;The output comparing IntIterable and RichIterable interfaces&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Looking at the same output in the experimental Swing UI shows one of the strengths of the text output that groups methods by their first letter. There is no need to scroll in the text output, where with the three pane Swing UI, all methods do not fit on the screen so scrolling is required.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*Sr-_DLNSDwUs86KHhaVsJQ.png&quot; /&gt;&lt;figcaption&gt;The Swing UI comparing IntIterable and RichIterable&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Look what happens to the text output when we add parameter types and return types to the methods in the comparison.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*SYixWbvTqpwZQTvF97EM1w.png&quot; /&gt;&lt;figcaption&gt;Part 1 of the output comparing IntIterable and RichIterable including parameter and return types&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*RmMbPtU4KiWAhq_rX6M-xg.png&quot; /&gt;&lt;figcaption&gt;Part 2 of the output comparing IntIterable and RichIterable including parameter and return types&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;As we can see, there are quite a few methods overloaded in the Eclipse Collections RichIterable and IntIterable interfaces. Using the conceptual view without method parameter and return types hides this detail. This detail is important, so both views have value.&lt;/p&gt;&lt;p&gt;This is what the Swing UI looks like for this larger comparison.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*FS_A-VgYWZTQRIqEL6khkQ.png&quot; /&gt;&lt;figcaption&gt;The Swing UI comparing IntIterable and RichIterable including parameter and return types&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The Swing UI is potentially more useful for this particular comparison, since scrolling is required in both cases.&lt;/p&gt;&lt;h3&gt;Stay tuned&lt;/h3&gt;&lt;p&gt;The code for ClassComparer will be available in the Eclipse Collections 11.0 release which is due out soon. It is located in the eclipse-collections-testutils module. If you want to see the code, it is now available in the Eclipse Collections repo linked below.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/eclipse-collections-testutils/src/main/java/org/eclipse/collections/impl/test/ClassComparer.java&quot;&gt;eclipse-collections/ClassComparer.java at master · eclipse/eclipse-collections&lt;/a&gt;&lt;/p&gt;&lt;p&gt;An older version of the code exists in the following blog, which is where I first started exploring how I could more easily understand the differences between rich APIs.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/graduating-from-minimal-to-rich-java-apis-c50192c8322f&quot;&gt;Graduating from Minimal to Rich Java APIs&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I’ve used the ClassComparer utility to produce all of the examples in this blog. The Swing UI code which is part of a separate class is not included yet in Eclipse Collections. I need to discuss the potential inclusion of the swing code with the other Eclipse Collections committers. It would be unique for Eclipse Collections eclipse-collections-testutils module to include any UI code, so I can’t make any promises on it arriving there. For now, here is a gist with the code for the experimental Swing UI.&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/5c561bf56ae0d618248d0f6a4ca33b31/href&quot;&gt;https://medium.com/media/5c561bf56ae0d618248d0f6a4ca33b31/href&lt;/a&gt;&lt;p&gt;I hope you found this useful. Thanks for reading!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Other &lt;strong&gt;Java Resource articles&lt;/strong&gt; you may like to explore&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-java-programmer-roadmap-f9db163ef2c2&quot;&gt;The 2021 Java Programmer RoadMap&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/11-advanced-core-java-online-courses-to-join-in-2021-46011661257a&quot;&gt;11 Advanced Core Java Online Courses to Join in 2021&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/7-best-webflux-and-reactive-spring-boot-courses-for-java-programmers-33b7c6fa8995&quot;&gt;7 Best WebFlux and Reactive Spring Boot Courses for Java Programmers&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=696999b7eeda&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/how-to-introspect-and-find-conceptual-symmetry-between-classes-in-java-696999b7eeda&quot;&gt;How to introspect and find conceptual symmetry between classes in Java&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/javarevisited&quot;&gt;Javarevisited&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Fri, 19 Nov 2021 20:54:59 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Welcome AsiaInfo to the Jakarta EE Working Group!</title>
	<guid isPermaLink="false">7065 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/welcome-asiainfo-jakarta-ee-working-group</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/asiainfo.png&quot; style=&quot;height: 78px; width: 136px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is great to see that our Chinese membership is growing!   &lt;a href=&quot;https://www.asiainfo.com/zh_cn/index.html&quot;&gt;&lt;u&gt;HuNan AsiaInfo AnHui&lt;/u&gt;&lt;/a&gt; is a Chinese software company, mainly engaged in basic software research and development, committed to communication operators, artificial intelligence, 5G, Internet of Things software and cloud computing, big data and other industry applications. Current products include database product AntDB, Application middleware product FlyingServer, AI-RPA, etc. The goal is to provide good basic software, connect relevant global norms and technologies, and serve the huge software demand market in China.&lt;/p&gt;

&lt;p&gt;Warm welcome to the &lt;a href=&quot;https://www.asiainfo.com/zh_cn/index.html&quot;&gt;&lt;u&gt;HuNan AsiaInfo AnHui&lt;/u&gt;&lt;/a&gt; as a new member of the Jakarta EE Working Group! &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 18 Nov 2021 17:06:31 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Welcome SOUJava to the Jakarta EE Working Group!</title>
	<guid isPermaLink="false">7064 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/welcome-soujava-jakarta-ee-working-group</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;We have another Java User Group as a Guest member! I am extremely happy to let you know that &lt;a href=&quot;https://soujava.org.br/&quot; target=&quot;_blank&quot;&gt;SOUJava&lt;/a&gt; has joined Jakarta EE Working Group! &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://soujava.org.br/&quot;&gt;&lt;u&gt;SOU Java&lt;/u&gt;&lt;/a&gt; does not need an introduction in the Java community! Their members are already heavily involved in Jakarta EE-related projects and having them as a Guest Member of the Jakarta EE Working Group additionally shows their commitment to advancing enterprise Java development.&lt;/p&gt;

&lt;p&gt;Please join me in welcoming the SOUJava to Jakarta EE Working Group! It is great to see the Jakarta EE Working Group and our community is continuously growing.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 17 Nov 2021 16:50:41 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Jakarta EE Community Update Fall 2021</title>
	<guid isPermaLink="false">7063 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-update-fall-2021%C2%A0</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;The summer is usually a time when the activities slow down a little, and Jakarta EE is no exception. Throughout the summer, the Jakarta EE Platform project has put all its attention on Jakarta EE 10, while the TCK project has started with the massive task of refactoring the TCK. Other projects also  moved forward during summer.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;The fall for Jakarta EE, however, has been and still is very busy! The teams are continuously working on the new releases on the individual specifications, while the Jakarta EE platform team is working on planning the Platform and Profile&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;s&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (yes it will be plural for Profiles going forward!) release for the version 10. We are also working hard to bring you all the latest Jakarta EE news in our &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2021/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;JakartaOne Livestream event&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; that will be happening on December 7th this year. Our Compatibility Product list and membership base are growing, , and the Jakarta EE boat is sailing strong and in the right direction!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;Here are some of highlights:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;JakartaOne Livestream 2021: The Biggest Jakarta EE Event of the Year!&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;The biggest celebration of &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Jakarta EE&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; is always our&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2021/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt; JakartaOne Livestream 2021&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;annual event! This year is no exception, so save the date &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;December 7th, 202&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;and please&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 13pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.crowdcast.io/e/jakartaone-livestream-2/register&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 15pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;strong&gt;&lt;u&gt;register&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 13.999999999999998pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt; &lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;and let us know you’ll be there!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;Our popular &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;http://jakartaone.org&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;JakartaOne Livestream&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; virtual conference series, as you know, runs in different languages as well! &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;We had the following language-specific events:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;August 21st, 2021 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2021/turkish/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;JakartaOne Livestream - Turkish&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;September 29th, 2021 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2021/portuguese/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;JakartaOne Livestream - Portuguese&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;October 1st, 2021 -  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2021/hispano/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;JakartaOne Livestream - Spanish&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;The Jakarta EE Community and Working Group is Growing&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;It is great to see new members continuously joining the working group. Recently, we welcomed:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;img src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/soujava.png&quot; style=&quot;height: 97px; width: 134px;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://soujava.org.br/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;SOU Java&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; does not need an introduction in the Java community! Their members are already heavily involved in Jakarta EE-related projects and having them as a Guest Member of the Jakarta EE Working Group additionally shows their commitment to advancing enterprise Java development.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/asiainfo.png&quot; style=&quot;height: 78px; width: 136px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;It is great to see that our Chinese membership is growing!   &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.asiainfo.com/zh_cn/index.html&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;HuNan Asiainfo AnHui&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,founded on September 25, 2019, is a Chinese software company, mainly engaged in basic software research and development, committed to communication operators, artificial intelligence, 5G, Internet of Things software and cloud computing, big data and other industry applications. Current products include database product AntDB, Application middleware product FlyingServer, AI-RPA, etc. The goal is to provide good basic software, connect relevant global norms and technologies, and serve the huge software demand market in China.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;If you or your company are interested in the work of the Jakarta EE Working Group, please visit our &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/membership/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;membership pages&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; and get in touch! &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Jakarta Tech Talks&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;We had quite a few new Jakarta Tech Talks! Please visit the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLutlXcN4EAwC64sgFLJSWAgQJvVo6T4D&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Jakarta Tech Talk playlist &lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;on Jakarta EE YouTube channel to view the recordings, here are a few:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;h1&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #00a4bd;&quot;&gt;&lt;u&gt;Jakarta RPC: JAX-RS for RPC Services&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt;
	&lt;/li&gt;
	&lt;li&gt;
	&lt;h1&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=GgR-c4B8rvE&amp;amp;list=PLutlXcN4EAwC64sgFLJSWAgQJvVo6T4Dh&amp;amp;index=2&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Automated Refactoring for Java-Based Applications&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h1&gt;
	&lt;/li&gt;
	&lt;li&gt;
	&lt;h1&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0-oT5OGkax8&amp;amp;list=PLutlXcN4EAwC64sgFLJSWAgQJvVo6T4Dh&amp;amp;index=3&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;What is in for the Jakarta EE Developer&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h1&gt;
	&lt;/li&gt;
	&lt;li&gt;
	&lt;h1&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=9Qhe8WgiwIo&amp;amp;list=PLutlXcN4EAwC64sgFLJSWAgQJvVo6T4Dh&amp;amp;index=4&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Getting Started with Jakarta NoSQL and MongoDB&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h1&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;If you have a topic / talk related to enterprise java development you’d like to share with the community, please let us know. Fill out this &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSdbG1FTITUCtzk36N0mc_981rMnuThqFLQMHJg2IFxOTkPoRQ/viewform&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;form&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; and we’ll help you out to set it up and promote it! &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Jakarta EE 10 is Taking Shape!&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt;I am beyond excited to see all the progress we see related to &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/eclipse-ee4j/jakartaee-platform/labels/EE10&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Jakarta EE 10 in GitHub&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt; (label EE10). The creation/plan review for &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/specifications/coreprofile/10/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;strong&gt;&lt;u&gt;Jakarta EE Core Profile 10&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt;was approved by the Jakarta EE Specification Committee. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/eclipse-ee4j/jakartaee-platform/issues/363&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;strong&gt;&lt;u&gt;Jakarta EE Web Profile 10&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt; and &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/eclipse-ee4j/jakartaee-platform/issues/364&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;strong&gt;&lt;u&gt;Jakarta EE Platform 10&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt; issues are in discussion and plan reviews are expected soon. Please join the discussion and Jakarta EE Platform call to provide your input, refer to&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Jakarta EE Specifications Calendar&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_e9ki8t2gc75sh07qdh95c8ofvc%40group.calendar.google.com&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;public url&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/ical/eclipse-foundation.org_e9ki8t2gc75sh07qdh95c8ofvc%40group.calendar.google.com/public/basic.ics&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;iCal&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;) &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt; for details on all technical calls.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Jakarta EE Individual Specifications and Project Teams &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;All meetings in the various specification projects are published in the public &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Jakarta EE Specifications Calendar&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_e9ki8t2gc75sh07qdh95c8ofvc%40group.calendar.google.com&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;public url&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/ical/eclipse-foundation.org_e9ki8t2gc75sh07qdh95c8ofvc%40group.calendar.google.com/public/basic.ics&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;iCal&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;).Everyone interested is welcome to join the calls. Do note that the Jakarta EE Platform team is extremely busy and productive. The call is public and is welcome to all people who would like to contribute to technical discussions.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;Select the one that you are interested in and help out. Each specification team is eager to welcome you! &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Want To Learn How To Use Jakarta EE?  &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt;The&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://eclipse-ee4j.github.io/cargotracker/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt; Eclipse Cargo Tracker &lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt;is a fantastic example of an end-to-end Jakarta EE application that showcases core Jakarta EE technologies. Thanks to &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.scaleforce.net/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Scaleforce &lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt;and &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jelastic.com/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Jelastic &lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt;for providing resources to deploy the demo application to the cloud.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt;Give &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://cargo-tracker.j.scaleforce.net/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;the Cargo Tracker&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt; a try and consider contributing to the project at &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/eclipse-ee4j/cargotracker/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Cargo Tracker GitHub repository&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #4c4d4e;&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;EclipseCon 2021 recordings! &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #262f3d;&quot;&gt;&lt;span style=&quot;background-color: #fdfdfd;&quot;&gt;We had a great conference and presence at the EclipseCon 2021! &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.eclipsecon.org/2021/jakarta-ee-community-day&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;background-color: #fdfdfd;&quot;&gt;&lt;u&gt;The Jakarta EE Community Day&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #262f3d;&quot;&gt;&lt;span style=&quot;background-color: #fdfdfd;&quot;&gt; was fabulously organized by the community! Many thanks to &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #262f3d;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;strong&gt;Reza Rahman, Werner Keil &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #262f3d;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;and &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #262f3d;&quot;&gt;&lt;span style=&quot;background-color: #ffffff;&quot;&gt;&lt;strong&gt;Petr Aubrecht. &lt;/strong&gt;The presentations are available in the &lt;a href=&quot;https://drive.google.com/drive/u/0/folders/1qpRwUxEzWJrAQ7CDPbQHTgnM0m61VtA6&quot;&gt;folder&lt;/a&gt;.  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #262f3d;&quot;&gt;&lt;span style=&quot;background-color: #fdfdfd;&quot;&gt;The conference talk recordings are now available on YouTube in the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaRXTpMGCTjbUtSwBnTtFa0U&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;span style=&quot;background-color: #fdfdfd;&quot;&gt;&lt;u&gt;EclipseCon 2021 Playlist&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #262f3d;&quot;&gt;&lt;span style=&quot;background-color: #fdfdfd;&quot;&gt;, and in Swapcard. In Swapcard, go to Agenda to locate a talk (Tuesday, Wednesday, and Thursday only), and click on the title to watch the video. We are hoping to see you next year in person!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Adopt A Spec!&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;Attention all &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;JUGs: get recognized for your involvement in the specification development!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;We need help from the community! All JUGs out there, please choose the specification of your interest and adopt it. Here is the information about the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/community/adopt-a-spec/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Adopt-A-Spec&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; program. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Stay Connected With the Jakarta EE Community&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;The Jakarta EE community is very active and there are a number of channels to help you stay up to date with all of the latest and greatest news and information. Subscribe to your preferred channels today:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;·&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Social media:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://twitter.com/jakartaee&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt; Twitter&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.facebook.com/JakartaEE/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt; Facebook&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.linkedin.com/groups/13597511/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt; LinkedIn Group&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;, &lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.linkedin.com/showcase/28816222/admin/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;LinkedIn Page&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;·&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Mailing lists:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; jakarta.ee-community@eclipse.org, jakarta.ee-wg@eclipse.org,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/connect/mailing-lists/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #800080;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;project mailing lists&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://app.slack.com/client/TK4DKL42G&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Slack workspace&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;·&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Calendars:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/u/0/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0@group.calendar.google.com&amp;amp;ctz=America/Toronto&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Jakarta EE Community Calendar&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_e9ki8t2gc75sh07qdh95c8ofvc%40group.calendar.google.com&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Jakarta EE Specification Meetings Calendar&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;·&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Newsletters, blogs, and emails:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;strong&gt;&lt;u&gt; &lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Eclipse Community Newsletter&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartablogs.ee/#main-content&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt; Jakarta EE blogs&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.agilejava.eu/category/hashtag-jakartaee/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;Hashtag Jakarta EE&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;·&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 6.999999999999999pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Meetings:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt; Jakarta Tech Talks&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt; Jakarta EE Update&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, and Eclipse Foundation events and conferences&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;You can find the complete list of channels&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/connect/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #800080;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt;here&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;To help shape the future of open source, cloud native Java, get involved in the&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakarta.ee/membership/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt; Jakarta EE Working Group&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Calibri,sans-serif;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;img src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/pasted.png&quot; style=&quot;height: 161px; width: 263px;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 16 Nov 2021 22:23:04 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: You are invited!!! JakartaOne Livestream 2021 the Jakarta EE event of the year!</title>
	<guid isPermaLink="false">7062 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/you-are-invited-jakartaone-livestream-2021-jakarta-ee-event-year</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;The biggest celebration of &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Jakarta EE&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt; is always our&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://jakartaone.org/2021/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;u&gt; JakartaOne Livestream 2021&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;annual event! This year is no exception, so save the date &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;December 7th, 2021 &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;and please&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.crowdcast.io/e/jakartaone-livestream-2/register&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #1155cc;&quot;&gt;&lt;strong&gt;&lt;u&gt;register&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;  and let us know you’ll be there!!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;This year again, it will be a twelve hour virtual event that will provide you with a variety of talks and discussions related to Jakarta EE. Join us to find out what are the future plans for the individual specifications but also plans for the platform and the profiles. We have a great lineup of speakers for the main talks; to avoid missing anyone here is the picture from the website. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;NOTE: please refer to the &lt;a href=&quot;https://jakartaone.org/2021/&quot;&gt;website &lt;/a&gt;for updates and possible sessions time changes &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/Screen%20Shot%202021-11-19%20at%209.54.20%20AM.png&quot; style=&quot;height: 333px; width: 600px;&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/Screen%20Shot%202021-11-19%20at%209.55.40%20AM.png&quot; style=&quot;height: 266px; width: 600px;&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/Screen%20Shot%202021-11-19%20at%209.56.12%20AM.png&quot; style=&quot;height: 143px; width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;We’ll be having quite a few surprises for the &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;Studio Jakarta EE sessions&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, as well! So stay tuned for these. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;As we are having a long day, we’ll be having pizza! So make your own, create it as Jakarta EE as possible and share the picture on social media. Do not forget to tag us (@JakartaOneCong and @JakartaEE) or show it on the day of the event! We want to celebrate all of your work related to Jakarta EE including pizza!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: Arial;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://blogs.eclipse.org/sites/default/files/users/user180/JakartaOne%20The%20largest%20Jakarta%20EE%20event%20of%202021.png&quot; style=&quot;height: 338px; width: 600px;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 16 Nov 2021 19:12:21 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: OSPO Alliance Announces the OSS Good Governance Handbook</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/ospo-alliance-announces-oss-good-governance-handbook</guid>
	<link>https://newsroom.eclipse.org/news/announcements/ospo-alliance-announces-oss-good-governance-handbook</link>
	<description>&lt;p&gt;The OSPO Alliance today announced the publication of the first version of the &lt;a href=&quot;https://ospo.zone/ggi/&quot;&gt;Open Source Good Governance Handbook&lt;/a&gt;. Collaboratively developed in the framework of the OW2 Open Source Good Governance initiative, the handbook introduces a methodology to implement professional management of open source software in an organisation. It addresses the need to use open source software properly and fairly, safeguarding organisations from technical, legal and IP threats, and maximising for them the advantages of open source.&lt;/p&gt;

&lt;p&gt;This methodology goes beyond compliance and liability. It is about building awareness in communities of end-users (open software developers themselves) and systems integrators, and developing mutually beneficial relationships within the FOSS ecosystem.&lt;/p&gt;

&lt;p&gt;The Good Governance Handbook provides a comprehensive methodology based on a few key concepts. From a generic perspective, the approach is structured along five Goals (Usage, Trust, Culture, Engagement and Strategy), each supported by five Canonical Activities described in the handbook. At execution stage, the methodology requires adapting the Canonical Activities to the specific condition of each organisation by transferring them into Customized Activity Scorecards which, put together, constitute a roadmap for setting up and running an Open Source Program Office (OSPO) and a management system to monitor progress.&lt;/p&gt;

&lt;p&gt;The OSS Good Governance Handbook is the first major publication of the OSPO Alliance to help companies and public institutions implement an Open Source Program Office (OSPO).  The OSPO Alliance provides an organisation-neutral venue for contributors to share resources, experience and skills. Supporters can opt to contribute in several ways: at the new OSPO.Zone website, contribute directly to the next steps of the &lt;a href=&quot;https://www.ow2.org/view/OSS_Governance/&quot;&gt;Good Governance Initiative&lt;/a&gt; methodology, and share their experiences (both successes and failures!) as case studies or with more informal short interviews. &lt;/p&gt;

&lt;p&gt;“This publication is the result of nearly two years of collaborative work with OW2 members and OSS practitioners. We are now moving to the implementation and customization phase with some key adopters of the methodology. We are excited to publish this effort with the OSPO Alliance,” said Cédric Thomas, CEO of OW2.&lt;/p&gt;

&lt;p&gt;The OSPO Alliance is also pleased to welcome eight new supporters, including the Free Software Foundation Europe, SAP, and WiPro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quotations From Supporters About Their Participation In the OSPO Alliance: &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;APELL&lt;/strong&gt;&lt;br /&gt;
“APELL (Association Professionnelle Européenne du Logiciel Libre), Europe’s Open Source Business Association, and its national members, are eager to support the mission of the OSPO Alliance. Europe is an open source champion, and there is still massive potential to tap everywhere from large and small software vendors to big open source users, both in the private and public sectors. We see that this partnership will be very important to strengthening not only Europe's but the world's capacity to use and contribute to open source at an even greater scale. Increased understanding of open source governance and the establishment of Open Source Programme Offices hold massive potential to enable open innovation at large in society,” said Timo Väliharju, Founder and board member of APELL.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CNLL&lt;/strong&gt; &lt;br /&gt;
“The CNLL, the association representing the free software sector in France, has long supported the creation of OSPOs, or &quot;free software missions&quot;, in France, at the level of the Government but also at the level of major local authorities, as well as at the European level. The mission of these OSPOs in France should be to make concrete the notion of &quot;encouraging the use of free software&quot; within the administration, as provided for in Article 16 of the Digital Republic Act (or Lemaire Act) of 2016. These OSPOs should network with each other and with organizations representing the industry in order to fully realize the economic and strategic benefits of OSS in Europe,” said Stéfane Fermigier, co-president of CNLL.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OSBA&lt;/strong&gt;&lt;br /&gt;
“The OSB Alliance – Bundesverband für digitale Souveränität e.V. represents about 170 companies from the Open Source economy. We are committed to sustainably anchoring the central importance of open source software and open standards for a digitally sovereign society in the public consciousness.&lt;/p&gt;

&lt;p&gt;“For the OSB Alliance establishing an OSPO is a great strategic approach for public or private organisations to professionalize their engagement with the Open Source Ecosystem. So we see the OSPO Alliance as an exciting new European initiative to support organisations in the public, private or academia sector with information and best practices on OSPOs. Such support can especially accelerate the process of setting up important OSPOs as planned e.g. at EU level or the planned Zendis in Germany,” declared Peter Ganten, Chairman of the OSBA-Board.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FSFE&lt;/strong&gt;     &lt;br /&gt;
“The Free Software Foundation Europe (FSFE) is a charity that empowers users to control technology. Since 2001 the FSFE has been enhancing users' rights by abolishing barriers for software freedom. For 20 years FSFE has been helping individuals and organisations to understand how Free Software contributes to freedom, transparency, and self-determination.&lt;br /&gt;
 &lt;br /&gt;
Joining OSPO.Zone is another brick in the wall to ensure that more Free Software is developed and used - be it in the private or governmental sector. Free Software gives everybody the right to use, study, share and improve software. To make sure that these rights are understood and used an OSPO can make a difference,” said Matthias Kirschner, President Free Software Foundation Europe&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About the OSPO Alliance: &lt;/strong&gt;&lt;br /&gt;
The OSPO Alliance was established by leading European open source non-profit organisations, including OW2, Eclipse Foundation, OpenForum Europe, and Foundation for Public Code, and experienced practitioners with the aim to grow awareness for open source in Europe and to globally promote structured, responsible and professional management of open source by companies and administrations. OSPO.Zone is the new website for delivering the resources and collaboration envisaged by the OSPO Alliance. Learn more at &lt;a href=&quot;https://ospo.zone&quot;&gt;https://ospo.zone&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Media contacts:&lt;/strong&gt;&lt;br /&gt;
&lt;u&gt;Schwartz Public Relations&lt;/u&gt;&lt;br /&gt;
Sendlinger Straße 42A&lt;br /&gt;
80331 Munich&lt;br /&gt;
EclipseFoundation@schwartzpr.de&lt;br /&gt;
Julia Rauch / Sophie Dechansreiter / Tobias Weiß&lt;br /&gt;
+49 (89) 211 871 – 43 / -35 / -70&lt;br /&gt;
 &lt;/p&gt;</description>
	<pubDate>Tue, 09 Nov 2021 13:00:27 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Register for TheiaCon 2021 now!</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=45278</guid>
	<link>https://eclipsesource.com/blogs/2021/11/09/register-for-theiacon-2021-now/</link>
	<description>&lt;p&gt;EclipseCon 2021 has just closed its doors and we are happy to already announce the next highlight of the year, TheiaCon...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2021/11/09/register-for-theiacon-2021-now/&quot; rel=&quot;nofollow&quot;&gt;Register for TheiaCon 2021 now!&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 09 Nov 2021 08:42:46 +0000</pubDate>
</item>
<item>
	<title>Tom Schindl: How I generate the JavaFlight Recorder Docu</title>
	<guid isPermaLink="false">http://tomsondev.bestsolution.at/?p=5351</guid>
	<link>https://tomsondev.bestsolution.at/2021/11/03/how-i-generate-the-javaflight-recorder-docu/</link>
	<description>&lt;p&gt;From a tweet von &lt;a href=&quot;https://www.morling.dev/blog/&quot;&gt;Gunnar Morling&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;embed-twitter&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;A very useful API improvement merged to &lt;a href=&quot;https://twitter.com/hashtag/JfrUnit?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#JfrUnit&lt;/a&gt;: type-safe access to all the JFR event types and their attributes in assertions (generated from defs at &lt;a href=&quot;https://t.co/iKIl0xIMuF&quot;&gt;https://t.co/iKIl0xIMuF&lt;/a&gt;)! Big shout-out to Federico Mariani (&lt;a href=&quot;https://twitter.com/croway_?ref_src=twsrc%5Etfw&quot;&gt;@croway_&lt;/a&gt;) for this huge piece of work &lt;img alt=&quot;ðŸ™�&quot; class=&quot;wp-smiley&quot; src=&quot;https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f64f.png&quot; style=&quot;height: 1em;&quot; /&gt;.&lt;a href=&quot;https://t.co/IHBBBsn4Ks&quot;&gt;https://t.co/IHBBBsn4Ks&lt;/a&gt; &lt;a href=&quot;https://t.co/du5Y6zSFoE&quot;&gt;pic.twitter.com/du5Y6zSFoE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Gunnar Morling &lt;img alt=&quot;ðŸŒ�&quot; class=&quot;wp-smiley&quot; src=&quot;https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f30d.png&quot; style=&quot;height: 1em;&quot; /&gt; (@gunnarmorling) &lt;a href=&quot;https://twitter.com/gunnarmorling/status/1455974300427685890?ref_src=twsrc%5Etfw&quot;&gt;November 3, 2021&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;I learned today that my work on &lt;a href=&quot;https://bestsolution-at.github.io/jfr-doc/openjdk-matrix.html&quot;&gt;JFR-Doc&lt;/a&gt; is used for JfrUnit. In a follow up Gunnar asked me how those JSON-Files are generated and I promised to write up a blog what I hacked together in an evening to get this going.&lt;/p&gt;
&lt;h2&gt;Get the input&lt;/h2&gt;
&lt;p&gt;The first and most important thing is to get all JFR-Events (those commands are executed eg in your Java-17-Install-Dir)&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot;&gt;./java -XX:StartFlightRecording:filename=/tmp/out-bin.jfr \
-version # Dump JFR Data
./jfr metadata /tmp/out-bin.jfr &amp;amp;gt; /tmp/openjdk-17.jfr
&lt;/pre&gt;
&lt;p&gt;The final file holds content like this&lt;/p&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;class boolean {
}
class byte {
}
class char {
}
class double {
}
class float {
}
class int {
}
class long {
}
class short {
}

@Name(&quot;java.lang.Class&quot;)
@Label(&quot;Java Class&quot;)
class Class {
  @Label(&quot;Class Loader&quot;)
  ClassLoader classLoader;

  @Label(&quot;Name&quot;)
  String name;

  @Label(&quot;Package&quot;)
  Package package;

  @Label(&quot;Access Modifiers&quot;)
  int modifiers;

  @Label(&quot;Hidden&quot;)
  boolean hidden;
}
...
&lt;/pre&gt;
&lt;p&gt;Looks like these are Java-Classes so one strategy could be to just compile those and use Reflection to extract meta informations but I went another route&lt;/p&gt;
&lt;h2&gt;Parsing the .jfr-File&lt;/h2&gt;
&lt;p&gt;Handcrafting a parser is certainly not the way to go. I needed something that could provide me a fairly simple Logical-AST. There are BNF-Definitions for Java but I wanted something much simpler so I fired up my Eclipse IDE and created an Xtext-Project using the wizards and replaced the content in the .xtext-File with&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot;&gt;grammar at.bestsolution.jfr.JFRMeta with org.eclipse.xtext.common.Terminals

generate jFRMeta &quot;http://www.bestsolution.at/jfr/JFRMeta&quot;

Model:
  classes+=Clazz*;

Clazz:
  annotations+=Annotation*
  'class' name=ID ( 'extends' super=QualifiedName )? '{'
    attributes += Attribute*
  '}';

Attribute:
  annotations+=Annotation*
  type=[Clazz|ID] array?='[]'? name=ID ';'
;

Annotation:
  '@' type=[Clazz|ID] ('(' (values+=AnnotationValue |
   ('{' values+=AnnotationValue
   (',' values += AnnotationValue)* '}')) ')')?
;

AnnotationValue:
  valueString=STRING | valueBoolean=Boolean | valueNum=INT
;

enum Boolean:
  TRUE=&quot;true&quot; | FALSE=&quot;false&quot;
;

QualifiedName:
  ID ('.' ID)*;
&lt;/pre&gt;
&lt;p&gt;That’s all required because the .jfr-File is extremly simple so we don’t need a more complex definition.&lt;/p&gt;
&lt;h2&gt;How to convert&lt;/h2&gt;
&lt;p&gt;Well although Xtext is primarily used to develop DSL-Editors for the Eclipse IDE one can run the generated parser in plain old Java. So all now needed is to write a generator who parses the .jfr-File(s) and generate different output from it (HTML, JSON, …) and because although Java now has multiline strings Xtend is the much better choice to write a “code”-generator.&lt;/p&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;package at.bestsolution.jfr

import org.eclipse.xtext.resource.XtextResourceSet
import org.eclipse.xtext.resource.XtextResource
import java.util.ArrayList
import org.eclipse.emf.common.util.URI
import java.nio.file.Files
import java.nio.file.Paths
import at.bestsolution.jfr.jFRMeta.Model
import java.nio.file.StandardOpenOption
import at.bestsolution.jfr.jFRMeta.Clazz

import static extension at.bestsolution.jfr.GenUtil.*
import at.bestsolution.jfr.jFRMeta.Attribute

class JSONGen {
     def static void main(String[] args) {
         val versions = createVersionList(Integer.parseInt(args.get(0)))
         val injector = new JFRMetaStandaloneSetup().createInjectorAndDoEMFRegistration();
         val resourceSet = injector.getInstance(XtextResourceSet);
         resourceSet.addLoadOption(XtextResource.OPTION_RESOLVE_ALL, Boolean.TRUE);

         val models = new ArrayList
         for( v : versions ) {
             val resource = resourceSet.getResource(
                 URI.createURI(&quot;file:/Users/tomschindl/git/jfr-doc/openjdk-&quot;+v+&quot;.jfr&quot;), true);
             val model = resource.getContents().head as Model;
             models.add(model)
         }

         for( pair : models.indexed ) {
             val model = pair.value
             var version = versions.get(pair.key)
             val preModel = pair.key == 0 ? null : models.get(pair.key - 1)
             Files.writeString(Paths.get(&quot;/Users/tomschindl/git/jfr-doc/openjdk-&quot;+version+&quot;.json&quot;),model.generate(preModel,version), StandardOpenOption.TRUNCATE_EXISTING, StandardOpenOption.CREATE)
         }
     }

     def static generate(Model model, Model prevModel, String ver) '''
         {
             &quot;version&quot;: &quot;Â«verÂ»&quot;,
             &quot;distribution&quot;: &quot;openjdk&quot;,
             &quot;events&quot;: [
                 Â«val evts = model.classes.filter[c|c.super == &quot;jdk.jfr.Event&quot;]Â»
                 Â«FOR e : evtsÂ»
                     Â«e.generateEventÂ»Â«IF e !== evts.lastÂ»,Â«ENDIFÂ»
                 Â«ENDFORÂ»
             ],
             &quot;types&quot;: [
                 Â«val types = model.classes.filter[c|c.super === null]Â»
                 Â«FOR t : typesÂ»
                     Â«t.generateTypeÂ»Â«IF t !== types.lastÂ»,Â«ENDIFÂ»
                 Â«ENDFORÂ»
             ]
         }
     '''

     def static generateEvent(Clazz clazz) '''
         {
             &quot;name&quot;: &quot;Â«clazz.nameÂ»&quot;,
             &quot;description&quot;: &quot;Â«clazz.descriptionÂ»&quot;,
             &quot;label&quot;: &quot;Â«clazz.labelÂ»&quot;,
             &quot;categories&quot;: [
                 Â«val cats = clazz.categoriesÂ»
                 Â«FOR cat : catsÂ»
                     &quot;Â«catÂ»&quot;Â«IF cat !== cats.lastÂ»,Â«ENDIFÂ»
                 Â«ENDFORÂ»
             ],
             &quot;attributes&quot;: [
                 Â«FOR a : clazz.attributesÂ»
                     Â«a.generateAttributeÂ»Â«IF a !== clazz.attributes.lastÂ»,Â«ENDIFÂ»
                 Â«ENDFORÂ»
             ]
         }
     '''

     def static generateType(Clazz clazz) '''
         {
             &quot;name&quot;: &quot;Â«clazz.nameÂ»&quot;,
             &quot;attributes&quot;: [
                 Â«FOR a : clazz.attributesÂ»
                     Â«a.generateAttributeÂ»Â«IF a !== clazz.attributes.lastÂ»,Â«ENDIFÂ»
                 Â«ENDFORÂ»
             ]
         }
     '''

     def static generateAttribute(Attribute a) '''
         {
             &quot;name&quot;: &quot;Â«a.nameÂ»&quot;,
             &quot;type&quot;: &quot;Â«a.type.nameÂ»&quot;,
             &quot;contentType&quot;: &quot;Â«a.contentTypeÂ»&quot;,
             &quot;description&quot;: &quot;Â«a.descriptionÂ»&quot;
         }
     '''
}
&lt;/pre&gt;
&lt;p&gt;All sources are available at &lt;a href=&quot;https://github.com/BestSolution-at/jfr-doc&quot; rel=&quot;nofollow&quot;&gt;https://github.com/BestSolution-at/jfr-doc&lt;/a&gt; if you look at this code keep in mind that it was hacked together in an evening&lt;/p&gt;</description>
	<pubDate>Wed, 03 Nov 2021 23:05:58 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Support for OAuth2 client credentials flow for HTTP connections</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2021-11-03-oauth2.html</guid>
	<link>https://www.eclipse.org/ditto/2021-11-03-oauth2.html</link>
	<description>&lt;p&gt;The upcoming release of Eclipse Ditto &lt;strong&gt;version 2.2.0&lt;/strong&gt; supports HTTP connections that authenticate their requests
via OAuth2 client credentials flow as described in
&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6749#section-4.4&quot;&gt;section 4.4 of RFC-6749&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Detailed information can be found at
&lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-protocol-bindings-http.html#oauth2-client-credentials-flow&quot;&gt;Connectivity API &amp;gt; HTTP 1.1 protocol binding&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This blog post shows an example of publishing a twin event to an HTTP endpoint via OAuth2 client credentials flow.
For simplicity, we will use &lt;code class=&quot;highlighter-rouge&quot;&gt;webhook.site&lt;/code&gt; for both the token endpoint and the event publishing destination.
Feel free to substitute them for real OAuth and HTTP servers.&lt;/p&gt;

&lt;h1 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h1&gt;

&lt;p&gt;This example requires 2 webhooks. We will use&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://webhook.site/785e80cd-e6e6-452a-be97-a59c53edb4d9&lt;/code&gt; for access token requests, and&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://webhook.site/6148b899-736f-47e6-9382-90b1d721630e&lt;/code&gt; for event publishing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Replace the webhook URIs by your own.&lt;/p&gt;

&lt;h1 id=&quot;configure-the-token-endpoint&quot;&gt;Configure the token endpoint&lt;/h1&gt;

&lt;p&gt;Configure the token webhook to return a valid access token response. Here is an example for a token expiring
at 00:00 on 1 January 3000. The field &lt;code class=&quot;highlighter-rouge&quot;&gt;expires_in&lt;/code&gt; is an arbitrary big number not reflecting the actual expiration
time of the access token.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Status code: 200&lt;/li&gt;
  &lt;li&gt;Content type: &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Response body:
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;access_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ewogICJhbGciOiAiUlMyNTYiLAogICJ0eXAiOiAiSldUIgp9.ewogICJhdWQiOiBbXSwKICAiY2xpZW50X2lkIjogIm15LWNsaWVudC1pZCIsCiAgImV4cCI6IDMyNTAzNjgwMDAwLAogICJleHQiOiB7fSwKICAiaWF0IjogMCwKICAiaXNzIjogImh0dHBzOi8vbG9jYWxob3N0LyIsCiAgImp0aSI6ICI3ODVlODBjZC1lNmU2LTQ1MmEtYmU5Ny1hNTljNTNlZGI0ZDkiLAogICJuYmYiOiAwLAogICJzY3AiOiBbCiAgICAibXktc2NvcGUiCiAgXSwKICAic3ViIjogIm15LXN1YmplY3QiCn0.QUJD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;expires_in&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1048576&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-scope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;token_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bearer&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The access token has the form &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;headers&amp;gt;.&amp;lt;body&amp;gt;.&amp;lt;signature&amp;gt;&lt;/code&gt;, where &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;headers&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; are base64-encoding
of the headers and the body in JSON format, and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;signature&amp;gt;&lt;/code&gt; is the base-64 encoded signature computed according
to the issuer’s key pair. Since the token webhook is not a real OAuth2 server, the signature in the example is a
placeholder. The unencoded headers and body are as follows.&lt;/p&gt;

&lt;h3 id=&quot;headers&quot;&gt;Headers&lt;/h3&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RS256&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;typ&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;JWT&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;body&quot;&gt;Body&lt;/h3&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;aud&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;client_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-client-id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;exp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32503680000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;iat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;iss&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://localhost/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jti&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;785e80cd-e6e6-452a-be97-a59c53edb4d9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nbf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-scope&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sub&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-subject&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;create-the-connection&quot;&gt;Create the connection&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-manage-connections.html#create-connection&quot;&gt;Create a connection&lt;/a&gt;
publishing twin events to the event publishing webhook using OAuth2 credentials.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;tokenEndpoint&lt;/code&gt; field is set to the access token webhook.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http_oauth2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http_oauth2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;connectionType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http-push&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;connectionStatus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;open&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://webhook.site:443&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;targets&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;address&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;POST:/6148b899-736f-47e6-9382-90b1d721630e&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;topics&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;_/_/things/twin/events&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;authorizationContext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;integration:ditto&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;credentials&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;oauth-client-credentials&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tokenEndpoint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://webhook.site/785e80cd-e6e6-452a-be97-a59c53edb4d9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;clientId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-client-id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;clientSecret&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-client-secret&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;requestedScopes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-scope&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;generate-a-thing-created-event&quot;&gt;Generate a thing-created event&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/ditto/http-api-doc.html#/Things/post_things&quot;&gt;Create a thing&lt;/a&gt;
granting read access to the connection’s subject. The thing-created event will be distributed
to the connection for publishing.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;_policy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;entries&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DEFAULT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;subjects&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{ request:subjectId }}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;the creator&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;integration:ditto&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;the connection&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;resources&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;policy:/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;grant&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;READ&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;WRITE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;revoke&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thing:/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;grant&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;READ&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;WRITE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;revoke&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;http-requests-made-by-the-http-connection&quot;&gt;HTTP requests made by the HTTP connection&lt;/h1&gt;

&lt;p&gt;Before the HTTP connection publishes the thing-created event, it makes an access token request against the token
endpoint to obtain a bearer token.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /785e80cd-e6e6-452a-be97-a59c53edb4d9 HTTP/1.1
Host: webhook.site
Accept: application/json
Content-Type: application/x-www-form-urlencoded

grant_type=client_credentials
&amp;amp;client_id=my-client-id
&amp;amp;client_secret=my-client-secret
&amp;amp;scope=my-scope
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The request should appear at the access token webhook. The webhook should return the configured access token response.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;access_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ewogICJhbGciOiAiUlMyNTYiLAogICJ0eXAiOiAiSldUIgp9.ewogICJhdWQiOiBbXSwKICAiY2xpZW50X2lkIjogIm15LWNsaWVudC1pZCIsCiAgImV4cCI6IDMyNTAzNjgwMDAwLAogICJleHQiOiB7fSwKICAiaWF0IjogMCwKICAiaXNzIjogImh0dHBzOi8vbG9jYWxob3N0LyIsCiAgImp0aSI6ICI3ODVlODBjZC1lNmU2LTQ1MmEtYmU5Ny1hNTljNTNlZGI0ZDkiLAogICJuYmYiOiAwLAogICJzY3AiOiBbCiAgICAibXktc2NvcGUiCiAgXSwKICAic3ViIjogIm15LXN1YmplY3QiCn0.QUJD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;expires_in&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1048576&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-scope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;token_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bearer&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The HTTP connection will cache the access token and use it to authenticate itself at the event publishing webhook
for each thing event, including the first thing-created event.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /6148b899-736f-47e6-9382-90b1d721630e HTTP/1.1
Host: webhook.site
Content-Type: application/vnd.eclipse.ditto+json
Authorization: Bearer ewogICJhbGciOiAiUlMyNTYiLAogICJ0eXAiOiAiSldUIgp9.ewogICJhdWQiOiBbXSwKICAiY2xpZW50X2lkIjogIm15LWNsaWVudC1pZCIsCiAgImV4cCI6IDMyNTAzNjgwMDAwLAogICJleHQiOiB7fSwKICAiaWF0IjogMCwKICAiaXNzIjogImh0dHBzOi8vbG9jYWxob3N0LyIsCiAgImp0aSI6ICI3ODVlODBjZC1lNmU2LTQ1MmEtYmU5Ny1hNTljNTNlZGI0ZDkiLAogICJuYmYiOiAwLAogICJzY3AiOiBbCiAgICAibXktc2NvcGUiCiAgXSwKICAic3ViIjogIm15LXN1YmplY3QiCn0.QUJD

{
  &quot;topic&quot;: &quot;&amp;lt;namespace&amp;gt;/&amp;lt;name&amp;gt;/things/twin/events/created&quot;,
  &quot;headers&quot;: {},
  &quot;path&quot;: &quot;/&quot;,
  &quot;value&quot;: {
    &quot;policyId&quot;: &quot;&amp;lt;policy-id&amp;gt;&quot;
  },
  &quot;revision&quot;: 1
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The HTTP connection will obtain a new token from the access token webhook when the previous token is about to expire.&lt;/p&gt;

&lt;p&gt;Please &lt;a href=&quot;https://www.eclipse.org/ditto/feedback.html&quot;&gt;get in touch&lt;/a&gt; if you have feedback or questions regarding this new functionality.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt; 
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse IDE Turns 20</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-ide-turns-20</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-ide-turns-20</link>
	<description>&lt;p class=&quot;rtecenter&quot;&gt;&lt;em&gt;One of the world’s most popular open source desktop development environments continues to evolve to support a new generation of developers &lt;/em&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;BRUSSELS&lt;/strong&gt; – November 2, 2021 – The Eclipse Foundation, one of the world’s largest open source software foundations, together with the &lt;a href=&quot;https://ide-wg.eclipse.org/&quot;&gt;Eclipse IDE Working Group&lt;/a&gt;, today announced the &lt;a href=&quot;https://www.eclipse.org/eclipseide/20anniversary/&quot;&gt;20th anniversary of the Eclipse Platform&lt;/a&gt; suite of products, related technologies, and ecosystem. Throughout that time, the Eclipse Platform has been instrumental in driving the adoption of open source, as well as serving as the core technology for building some of the most advanced applications in the world. From the Eclipse Java development tools, to NASA’s Mars Rover mission planning software, to massive semiconductors, and myriad other technologies that power our lives, the Eclipse Platform continues to support developers building new applications. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;“As the project that gave our organization its name, it is with great pride that I’ve watched this platform evolve to meet the challenges of today,” said Mike Milinkovich, executive director of the Eclipse Foundation. “The wonderful community that has driven this evolution, as well as our new working group, continue to ensure the Eclipse IDE platform will meet the needs of developers for another 20 years.”&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;20 years after the Eclipse family of projects was first launched, the Eclipse Platform and ecosystem continue to be relied upon worldwide by developers and businesses to create commercially viable products in a variety of industry sectors. With millions of users, tens of millions of downloads annually, and billions of dollars in shared investment, the Eclipse IDE is one of the world’s most popular desktop development environments.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;The Eclipse Foundation recently formed the Eclipse IDE Working Group to support this global community. This new working group provides governance, guidance, and funding for the communities that support the delivery and maintenance of the Eclipse IDE products. Founded by multiple participants, including Bosch, EclipseSource, IBM, Kichwa Coders, Renesas, SAP, VMware, and Yatta Solutions, this governance structure will enable broad collaboration to ensure the Eclipse IDE meets the latest market requirements. All consumers and adopters of Eclipse Platform technologies are highly encouraged to join and participate in this new working group.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;The goal of the Eclipse IDE Working Group is to ensure the continued success, vibrancy, quality, and sustainability of the Eclipse Platform, desktop IDE, and underlying technologies. This effort includes support for planning and delivery processes, as well as the related delivery technology. If the Eclipse IDE is important to your organization’s development efforts, the new working group represents an opportunity to help shape the future of this critical platform. For more information, visit &lt;a href=&quot;https://ide-wg.eclipse.org/&quot;&gt;ide-wg.eclipse.org&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To learn more about how to get involved with the Eclipse IDE Working Group, visit the Eclipse Foundation &lt;a href=&quot;https://www.eclipse.org/membership/#tab-membership&quot;&gt;membership page&lt;/a&gt; or see the working group’s &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/eclipse-ide-charter.php&quot;&gt;Charter&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/wpga/eclipse-ide-working-group-participation-agreement.pdf&quot;&gt;Participation Agreement&lt;/a&gt;. Working group members benefit from a broad range of services, including exclusive access to detailed industry research findings, marketing assistance, and expert open source governance. &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/sponsorship/working-group-sponsorship-agreement.pdf&quot;&gt;Sponsorship&lt;/a&gt; is also welcomed as a way for companies that want to support the Eclipse IDE without joining the working group. &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Quotes from Strategic Members&lt;/h2&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;IBM&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;&quot;20 years ago, when IBM contributed our Java development tools to a consortium of organizations which later on became the Eclipse Foundation, we hoped to create an open process that would excite developers to participate in the shaping and development of the tools they would use every day to create applications,” said Todd Moore, IBM’s VP of Open Technology. “At the time we hoped this would ignite the industry around Java, and the Eclipse Foundation did just that. Here's to 20 more successful years as Java moves into the cloud native world.”&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;Renesas Electronics&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;“Renesas’ embedded tools environment is built through the utilization of the groundbreaking Eclipse platform and the fully functional C/C++ Developers Toolkit (CDT),” said Akyiya Fukui, vice president, IoT and Infrastructure Business Unit, Software Development Division. “The open tools environment, the diverse partners and third party tools integration have quickly become the de facto IDE platform for embedded software for customers around the world. Renesas will continue to support the platform and work closely with the Foundation to ensure the projects build on this success.” &lt;/p&gt;

&lt;h3&gt;Robert Bosch GmbH&lt;/h3&gt;

&lt;p&gt;&quot;We have been using the Eclipse platform for designing and developing solutions for Automotive and IoT use cases. One of the key success factors in software industry is a widely adopted open source platforms, which can be used to create not only developer ecosystems but also commercial solutions. Thanks to contributions from many developers in the Eclipse community, tools and standards are created on an open platform that many companies benefit from. As an Eclipse IDE Strategic group member, we are excited to contribute to the platform and help to keep it powerful for many more years to come,&quot; said Vadiraj Krishnamurthy, Head Technology &amp;amp; Innovation, Robert Bosch Engineering and Business Solutions.&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;SAP&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;“SAP has delivered development tools for SAP NetWeaver based on the Eclipse platform from its very beginning 20 years ago,” said Karl Kessler, vice president of Product Management ABAP Platform, SAP. “Developers have used the SAP tools to build successful applications for the SAP customer base and ecosystem that run more than 70% of the worldwide business transactions around the globe. SAP continues to invest into its tools portfolio, in particular the ABAP development tools (ADT) for Eclipse. ADT helps to build Cloud applications powered by SAP HANA that run on SAP Business Technology Platform and SAP S/4HANA. SAP Partners have used the tool plugins from SAP to deliver tailored tool extensions. SAP will continue to contribute to the Eclipse Foundation to enrich the value of the Eclipse Platform and community.”&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;Vector Informatik GmbH&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;&quot;With PREEvision, we provide an Eclipse-based tool for the automotive industry to develop electronic systems (E/E) of modern vehicles. The Eclipse IDE builds a both solid and versatile basis for us to meet the demands of our customers for a model-based development platform and central E/E data backbone,&quot; says Georg Zimmermann, director for PREEvision. &quot;We started our journey with Eclipse over 15 years ago and the fact that Vector still launches new Eclipse-based products like the DaVinci Developer Adaptive speaks for itself. As an Eclipse IDE Working Group member, we are excited to contribute to the platform and help to keep it powerful for the next 20 years.&quot;&lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;Yatta Solutions GmbH &lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;“To improve development, we need to enable developers. This includes providing them with the best possible tooling,” said Dr. Leif Geiger, product manager, Software Engineer and Co-Founder, Yatta Solutions. “Since the beginning, Eclipse has played a key role in my career. An IBM Eclipse innovation grant funded my research. And Yatta’s first product, UML Lab, is based on Eclipse. Over time, we have increased our commitment towards Eclipse: I became project lead of the Eclipse Marketplace Client open-source project, and I was recently elected Package Maintainer of the Eclipse IDE for Java Developers.”&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Dr. Geiger continued, “I think that now more than ever, we need a vendor-neutral, open-source IDE for businesses and developers alike. By keeping this precious open ecosystem alive and kicking, we can remain independent. But to ensure the best possible future for Eclipse, the IDE needs to become more attractive for businesses and developers alike, and win developers as users and committers again. In the end, the Eclipse IDE is about collaboration among developers and across corporate borders. Let’s keep it that way. Here’s to another 20 years of the Eclipse IDE!”&lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;About the Eclipse Foundation&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter &lt;a href=&quot;http://twitter.com/EclipseFdn&quot;&gt;@EclipseFdn&lt;/a&gt;, &lt;a href=&quot;https://www.linkedin.com/company/eclipse-foundation/&quot;&gt;LinkedIn&lt;/a&gt; or visit &lt;a href=&quot;http://eclipse.org&quot;&gt;eclipse.org&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Third-party trademarks mentioned are the property of their respective owners.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;###&lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Media contacts &lt;/h2&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Julia Rauch / Sophie Dechansreiter / Tobias Weiß&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Sendlinger Straße 42A&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;80331 Munich&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;EclipseFoundation@schwartzpr.de&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;+49 (89) 211 871 – 43 / -35 / -70&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3 dir=&quot;ltr&quot;&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;Jay Nichols&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;jay@nicholscomm.com&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;+1 408-772-1551&lt;/p&gt;</description>
	<pubDate>Tue, 02 Nov 2021 11:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Cloud DevTools: Moving Embedded Software Development Tools into the Cloud</title>
	<guid isPermaLink="true">https://ecdtools.eclipse.org/resources/blogs/2021-11-02-embedded/</guid>
	<link>https://ecdtools.eclipse.org/resources/blogs/2021-11-02-embedded/</link>
	<description>In this article, we introduce the embedded special interest group (embedded SIG), hosted by the Eclipse Foundation. The embedded SIG is an open collaboration of embedded vendors and service providers, with the goal of strengthening the open source ecosystem for building web- and cloud-based tools used for embedded development. The SIG provides the structure for participants to coordinate efforts, share insights and collaborate on technical initiatives and standards.</description>
	<pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
	<author>webdev@eclipse-foundation.org (Christopher Guindon)</author>
</item>
<item>
	<title>Donald Raab: The unparalleled design of Eclipse Collections</title>
	<guid isPermaLink="false">https://medium.com/p/e4340b00f79f</guid>
	<link>https://medium.com/javarevisited/the-unparalleled-design-of-eclipse-collections-e4340b00f79f?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Exploring the evolutionary design of parallelism in &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*VzAbVkDDVmffXu9y&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@fanfandyuen?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Jason Yuen&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Plenty of data, memory, and cores&lt;/h3&gt;&lt;p&gt;In 2006, I was working on a proprietary distributed Java caching architecture in a large financial services company. We cached and indexed all of the firm’s trades and positions in a complex object graph in memory so we could slice and dice through it at high speed. By this time, I had already built and was extensively leveraging the serial eager API of an internal library named Caramel. This library would eventually become what we now know as &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;In the area I was working in 2006, we had many caches that were tens of gigabytes in size, networked together. There were many large collections (millions of objects) that we would iterate through in memory to perform various pipelined calculations which most often involved grouping, netting and aggregating various balances.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*tR5zZr5mBV7ApCWxkta7uQ.jpeg&quot; /&gt;&lt;/figure&gt;&lt;p&gt;Around this time, I would discover the Fork/Join framework from Doug Lea in the original EDU.oswego concurrent utility library. The Fork/Join framework was initially left out of java.util.concurrent when Java 5 was released. It would later be included in Java 7. I learned about the Fork/Join framework reading about it in &lt;a href=&quot;https://www.oreilly.com/library/view/concurrent-programming-in/0201310090/&quot;&gt;“Concurrent Programming in Java”&lt;/a&gt; (CPJ) and this paper on &lt;a href=&quot;http://gee.cs.oswego.edu/dl/papers/fj.pdf&quot;&gt;“A Java Fork/Join Framework”&lt;/a&gt; by Doug Lea.&lt;/p&gt;&lt;p&gt;I went looking for my copy of CPJ on my bookshelf as I was writing this blog and when I couldn’t find it, I bought myself a brand new copy. This book is a must read for all aspiring senior Java developers.&lt;/p&gt;&lt;h3&gt;Eager Serial, Parallel and Fork/Join&lt;/h3&gt;&lt;p&gt;The initial methods in the Caramel library were all serial and eager. I occasionally would add fused methods to combine a couple operations together to increase performance. For example, the method collectIf is a combination of select (inclusive filter) and collect (map or transform). It would be a few years before we would add lazy methods to the API in Eclipse Collections.&lt;/p&gt;&lt;p&gt;For more information and examples of fused methods, please check out the following blog.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/from-eager-to-fused-to-lazy-66450e290002&quot;&gt;From Eager to Fused to Lazy&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The initial implementation of the parallel API in Caramel was eager. There is a utility class that is still available in Eclipse Collections today that provides this eager parallel functionality. The class is named ParallelIterate. The class initially used the Fork/Join framework from the EDU.oswego concurrent library. It would later be converted to use Executor after the java.util.concurrent package was introduced in Java 5 without the Fork/Join framework. When the Fork/Join framework was added in Java 7, a new utility class named FJIterate was added to GS Collections. FJIterate is included in its own module in Eclipse Collections and is distributed in a separate jar file. FJIterate has existed since mid-2013, which was two years after Java 7 was released (July 2011). It will require an extra Maven dependency if you want to use it.&lt;/p&gt;&lt;pre&gt;&amp;lt;&lt;strong&gt;dependency&lt;/strong&gt;&amp;gt;&lt;br /&gt;    &amp;lt;&lt;strong&gt;groupId&lt;/strong&gt;&amp;gt;org.eclipse.collections&amp;lt;/&lt;strong&gt;groupId&lt;/strong&gt;&amp;gt;&lt;br /&gt;    &amp;lt;&lt;strong&gt;artifactId&lt;/strong&gt;&amp;gt;eclipse-collections-forkjoin&amp;lt;/&lt;strong&gt;artifactId&lt;/strong&gt;&amp;gt;&lt;br /&gt;    &amp;lt;&lt;strong&gt;version&lt;/strong&gt;&amp;gt;${eclipse-collections.version}&amp;lt;/&lt;strong&gt;version&lt;/strong&gt;&amp;gt;&lt;br /&gt;&amp;lt;/&lt;strong&gt;dependency&lt;/strong&gt;&amp;gt;&lt;/pre&gt;&lt;p&gt;The methods available on &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/10.4.0/org/eclipse/collections/impl/parallel/ParallelIterate.html&quot;&gt;ParallelIterate&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/10.4.0/org/eclipse/collections/impl/forkjoin/FJIterate.html&quot;&gt;FJIterate&lt;/a&gt; are almost the same. The implementations are fairly similar, with the primary difference being that ParallelIterate uses Executor and and FJIterate uses the Fork/Join framework. Using Executor makes ParallelIterate more suitable for some tasks. For raw, in-memory compute performance, FJIterate is sometimes the better option.&lt;/p&gt;&lt;p&gt;Both ParallelIterate and FJIterate were built for the same reason. We wanted raw parallel performance for large in memory data sets that were backed by arrays. Both classes will parallelize execution for a fixed set of algorithms for any Iterable type. The primary workhorse for both ParallelIterate and FJIterate is a parallel forEach. All of the other parallel algorithms are implemented using parallel forEach. There are twelve overloaded forms of forEach on ParallelIterate and FJIterate. The overloads take different parameters to give as much control as possible to developers. The design rationale for this is simple. We believed that if someone was able to prove that they would benefit from parallelism, then they would be in the best position to decide how to tune various parameters to squeeze as much performance as possible out of the hardware for parallel use cases they had.&lt;/p&gt;&lt;h4&gt;ParallelIterate&lt;/h4&gt;&lt;p&gt;Here are the methods available on ParallelIterate.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/10.4.0/org/eclipse/collections/impl/parallel/ParallelIterate.html&quot;&gt;ParallelIterate (Eclipse Collections - 10.4.0)&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;FJIterate&lt;/h4&gt;&lt;p&gt;Here are the methods available on FJIterate&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/10.4.0/org/eclipse/collections/impl/forkjoin/FJIterate.html&quot;&gt;FJIterate (Eclipse Collections - 10.4.0)&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;ParallelIterate vs. FJIterate&lt;/h4&gt;&lt;p&gt;The symmetric difference and intersection of the methods on the two utility classes are as follows.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*dKjUCkclae96RqKcuIdLQQ.png&quot; /&gt;&lt;figcaption&gt;Symmetric Difference and Intersection of ParallelIterate and FJIterate methods&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The biggest difference is that several sumBy methods were added to ParallelIterate but not ported over to FJIterate.&lt;/p&gt;&lt;h3&gt;The Futility of Utility&lt;/h3&gt;&lt;p&gt;The downside of utility classes like ParallelIterate and FJIterate is that methods can only return a single type. You only get one choice, so if you want to return different implementations from a method based on the input parameter type, you have to choose a common parent type. Methods on ParallelIterate and FJIterate take any java.lang.Iterable as an input parameter, and methods that return collections (e.g. select, reject, collect) have to unfortunately return java.util.Collection. Developers can control the return type by using overloaded methods with the same name which take a target collection as a parameter. If the Iterable used as the source parameter implements the &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/10.4.0/org/eclipse/collections/impl/parallel/BatchIterable.html&quot;&gt;BatchIterable&lt;/a&gt; interface, it will be optimized for parallelism for both ParallelIterate and FJIterate. If the source does not implement BatchIterable, or does not implement java.util.List, both utility classes will default to copying the elements to an array before parallelizing.&lt;/p&gt;&lt;p&gt;Here are some examples of ParallelIterate using the basic form of select (inclusive filter) and the overloaded form of select that takes a target collection.&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/33bcec800b6e1e1c018b3c66ebddb4cd/href&quot;&gt;https://medium.com/media/33bcec800b6e1e1c018b3c66ebddb4cd/href&lt;/a&gt;&lt;p&gt;The behavior of ParallelIterate select method is to return a type similar to the Iterable type that is passed in. For a List, a List implementation will be returned. For a Set, a Set implementation is returned. Unfortunately, since there can only be one signature for this method, the return type has to be the most abstract type which is Collection. Collection as an interface is not terribly useful. If I ever get around to refactoring the utility, I will return MutableCollection or RichIterable instead of Collection. This will make the utility methods a lot more useful, and maybe just slightly less futile.&lt;/p&gt;&lt;h3&gt;Lazy asParallel&lt;/h3&gt;&lt;p&gt;We took a different approach when it came to designing and implementing the lazy parallel API in Eclipse Collections. We decided we would require developers to provide an Executor and a &lt;em&gt;batch size&lt;/em&gt; instead of offering up multiple combinations of knobs and switches to configure via overloads as we did with our parallel utility classes. Based on our experience with supporting eager parallelism for seven years, these two parameters seemed to be the most important configuration options that developers wanted control over. This makes the lazy parallel API in Eclipse Collections slightly harder to use than parallelStream in the JDK. This is by design. It &lt;em&gt;should&lt;/em&gt; be harder for a developer to write parallel code, because they first need to determine if using a parallel algorithm will speed up or slow down an operation. If a developer understands exactly what they are doing, because they ran benchmarks and have proven parallelism will indeed help the performance of a specific use case, then they will be in the best position to determine how to configure the parallelism for optimal performance.&lt;/p&gt;&lt;p&gt;The other more important difference between the eager and lazy parallel API, is that the algorithms are available through data structures themselves for lazy, instead of being located in a utility class like ParallelIterate.&lt;/p&gt;&lt;p&gt;Here’s an example that takes a million integers and filters all of the prime values into a Bag. I show a fluent approach first, and then break the fluent calls into their intermediate results to show the intermediate return types.&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/5d77ae7f378a01314f099feaf722bb7b/href&quot;&gt;https://medium.com/media/5d77ae7f378a01314f099feaf722bb7b/href&lt;/a&gt;&lt;p&gt;Notice there is a very specific type named ParallelListIterable that is returned from asParallel. This type is lazy, so no real computation occurs until a terminal operation is called. The same type is returned after calling select. The method toBag is a terminal operation and results in a MutableBag being created. Now let’s look at what happens to our types if the initial collection is a MutableSet instead of a MutableList.&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/06b093536ea85fac922cefdd35faf407/href&quot;&gt;https://medium.com/media/06b093536ea85fac922cefdd35faf407/href&lt;/a&gt;&lt;p&gt;Notice the return type for asParallel for a MutableSet is ParallelUnsortedSetIterable.&lt;/p&gt;&lt;h4&gt;ParallelListIterable vs. ParallelIterate&lt;/h4&gt;&lt;p&gt;If we compare the methods available on ParallelListIterable with the methods available on ParallelIterate, it will become evident that a lot more investment has been made in growing the parallel lazy API in Eclipse Collections. The following shows the symmetric difference and intersection of methods available between both.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*QT_uV6zZ3GOhRcU77MUIRw.png&quot; /&gt;&lt;figcaption&gt;Symmetric Difference and Intersection of ParallelListIterable and ParallelIterate methods&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;JDK stream vs. parallelStream&lt;/h3&gt;&lt;p&gt;Have you ever noticed the return type for stream and parallelStream in the JDK is the same type? They both return Stream. You might think that perhaps the implementations that are returned for the methods are different classes implementing the same interface, but they are not. Both stream and parallelStream return a new instance of ReferencePipeline.Head. The difference between them is a boolean parameter named parallel. What this means is that the serial and parallel code paths are mixed together, and usually split on a boolean expression involving a call to a method named isParallel where parallelism might choose a different path. I searched for usages of isParallel in AbstractPipeline and found there are 48 usages in the parent class and four subclasses (ReferencePipeline, IntPipeline, LongPipeline, DoublePipeline) .&lt;/p&gt;&lt;p&gt;The upside here is that the serial lazy and parallel lazy API in the JDK with streams is identical. Having a single implementation class for both serial and parallel guarantees this as they share the exact same code paths. The downside is that the code paths are hard to understand just by reading the code and very difficult to trace, even with the help of a debugger.&lt;/p&gt;&lt;h3&gt;Eclipse Collections asLazy vs. asParallel&lt;/h3&gt;&lt;p&gt;We’ve already seen that the return types for asParallel are covariant for the types the method is defined on. The return type will always be a subtype of ParallelIterable. ParallelIterable has no direct relation to RichIterable. The method asLazy, which is defined on RichIterable returns a LazyIterable. LazyIterable extends RichIterable.&lt;/p&gt;&lt;p&gt;The following class diagram shows the inheritance relationships between RichIterable, LazyIterable and ParallelIterable.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*bFV7cRegpqGaxy4Ui5ZVSw.png&quot; /&gt;&lt;figcaption&gt;RichIterable, LazyIterable and ParallelIterable Interfaces&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;RichIterable is the parent type for LazyIterable and all of the container types in Eclipse Collections (e.g. MutableList/ImmutableList, MutableSet/ImmutableSet, etc.). LazyIterable provides serial lazy algorithm implementations.&lt;/p&gt;&lt;p&gt;ParallelIterable is the parent type for all corresponding parallel lazy adapters. There is a distinct split between serial and parallel API in Eclipse Collections. This means there is asymmetry between LazyIterable and ParallelIterable. This allows us to limit the parallel API to only those algorithms where there would be a reasonable performance benefit if parallelized. This also allows the serial implementations to be as simple as possible, and the parallel implementations can be optimized for specific types (e.g. Bag, List, Set).&lt;/p&gt;&lt;h4&gt;LazyIterable vs. ParallelIterable&lt;/h4&gt;&lt;p&gt;There are a lot more methods available on LazyIterable than on ParallelIterable. This can always change over time, if we determine that there is a need and a benefit to implementing a parallel version of a lazy serial method.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*6GEia8puDwxj_QCpPCv4ew.png&quot; /&gt;&lt;figcaption&gt;Symmetric Difference and Intersection of LazyIterable and ParallelIterable methods&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Performance Benchmarks&lt;/h3&gt;&lt;p&gt;I wrote some benchmarks a few years ago comparing filter, map, reduce and filter+map+reduce for a combination of serial, parallel, eager, lazy, object, and primitive types. The code and the results for the benchmarks were captured in the following blog. As you’ll see in the blog, I ran the benchmarks on JDK 8.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-4am-jamestown-scotland-ferry-and-other-optimization-strategies-66365ac415ef&quot;&gt;The 4 am Jamestown-Scotland ferry and other optimization strategies&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I decided when I started writing this blog, I wanted to write new benchmarks. I wanted to run the benchmarks on JDK 17 so I could see how the older eager parallel and fork/join utility classes held up with all of the optimizations that have arrived in the last nine versions of the JDK. I also wanted to make the benchmark code immediately available in open source for developers to experiment with on their own, and arrive at their own conclusions on their own hardware. The benchmarks are part of the JMH Kata module in the &lt;a href=&quot;https://github.com/BNYMellon/CodeKatas&quot;&gt;BNYM Code Katas repo&lt;/a&gt;. This time I focused on a use case for filter+map. There is a fused method for filter+map on the ParallelIterate and FJIterate utility classes named collectIf. This method is also available on the serial API for&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/BNYMellon/CodeKatas/blob/master/jmh-kata/src/test/java/bnymellon/codekatas/jmhkata/FilterMapJMHBenchmark.java&quot;&gt;CodeKatas/FilterMapJMHBenchmark.java at master · BNYMellon/CodeKatas&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The JMH Kata is what I refer to as a “sandbox kata”. You can use it as a sandbox to run your own experiments and try out your own benchmarks. It’s set up to run a few starter JMH benchmarks, and saves you the time of setting up a project to do the same.&lt;/p&gt;&lt;h4&gt;Hardware&lt;/h4&gt;&lt;p&gt;I used my MacPro “trash can” with the following hardware specs to measure the benchmarks:&lt;/p&gt;&lt;pre&gt;Processor Name: 12-Core Intel Xeon E5&lt;br /&gt;Processor Speed: 2.7 GHz&lt;br /&gt;Number of Processors: 1&lt;br /&gt;Total Number of Cores: 12&lt;br /&gt;L2 Cache (per Core): 256 KB&lt;br /&gt;L3 Cache: 30 MB&lt;br /&gt;Memory: 64 GB&lt;/pre&gt;&lt;h4&gt;Software and Benchmark Configuration&lt;/h4&gt;&lt;p&gt;I used OpenJDK 17 with Java Streams and Eclipse Collections 11.0.0.M2. I used &lt;a href=&quot;http://openjdk.java.net/projects/code-tools/jmh/&quot;&gt;JMH&lt;/a&gt; version 1.33 as the benchmark harness for the tests. I ran with 10 warmup iterations, and 10 measurement iterations with 2 forks. The warmup time and measurement time are both 5 seconds. I am using Mode.Throughput with the tests so they are easy to read. The numbers are in Operations per Second. &lt;strong&gt;&lt;em&gt;The bigger the number, the better the result.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;h4&gt;Data&lt;/h4&gt;&lt;p&gt;I ran the benchmarks using a simple class named Person. Person has a name (String), age (int), heightInInches (double), weightInPounds (double). I ran the benchmarks for the the following data sizes.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;10,000 (filters and maps 4,995 values)&lt;/li&gt;&lt;li&gt;100,000 (filters and maps 49,942 values)&lt;/li&gt;&lt;li&gt;1,000,000 (filters and maps 499,615 values)&lt;/li&gt;&lt;li&gt;8,675,309 (filters and maps 4,337,179 values)&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;The Charts&lt;/h4&gt;&lt;p&gt;I sorted the columns in the chart from least to greatest, so it would be easy to find the slowest (far left) and fastest (far right) results. So be aware that the columns may be different for different data sizes.&lt;/p&gt;&lt;h4&gt;Results — 10K People&lt;/h4&gt;&lt;p&gt;Fastest Parallel: Eclipse Collections Eager Parallel (ParallelIterate)&lt;br /&gt;Slowest Parallel: JDK Parallel Stream.toList()&lt;/p&gt;&lt;p&gt;Fastest Serial: Eclipse Collections Eager Serial&lt;br /&gt;Slowest Serial: JDK Serial Stream Collectors.toList()&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*F8YgL_CuuzCCZDMygFptuA.png&quot; /&gt;&lt;figcaption&gt;Filter / Map — Ops per second — 10,000 People&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Results — 100K People&lt;/h4&gt;&lt;p&gt;Fastest Parallel: Eclipse Collections Eager Parallel (ParallelIterate)&lt;br /&gt;Slowest Parallel: JDK Parallel Stream Collectors.toList()&lt;/p&gt;&lt;p&gt;Fastest Serial: Eclipse Collections Eager Serial&lt;br /&gt;Slowest Serial: JDK Serial Stream Collector.toList()&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*XXGX7pIHIz9IIoA2wp13Lw.png&quot; /&gt;&lt;figcaption&gt;Filter / Map — Ops per second — 100,000 People&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Results — 1 Million People&lt;/h4&gt;&lt;p&gt;Fastest Parallel: Eclipse Collections Eager Fork/Join (FJIterate)&lt;br /&gt;Slowest Parallel: Eclipse Collections Lazy asParallel()&lt;/p&gt;&lt;p&gt;Fastest Serial: Eclipse Collections Eager Serial&lt;br /&gt;Slowest Serial: JDK Serial Stream Collector.toList()&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*xf4AMjCfIDlhGWlsPy8WRQ.png&quot; /&gt;&lt;figcaption&gt;Filter / Map — Ops per second — 1,000,000 People&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Results — 8,675,309 People&lt;/h4&gt;&lt;p&gt;Fastest Parallel: Eclipse Collections Eager Fork/Join (FJIterate)&lt;br /&gt;Slowest Parallel: JDK Parallel Stream Collectors.toList()&lt;/p&gt;&lt;p&gt;Fastest Serial: Eclipse Collections Eager Serial&lt;br /&gt;Slowest Serial: JDK Serial Stream Collectors.toList()&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*BMo3DYIoTJuf2e8TXqWDSA.png&quot; /&gt;&lt;figcaption&gt;Filter / Map — Ops per second — 8,675,309 People&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Results — JMH Output&lt;/h4&gt;&lt;p&gt;Below is the raw consolidated JMH output used in the graphs above. There are also three mega sizes I tested with (25M, 50M, 100M) that I have not included graphs for. I had to switch from operations per second to milliseconds per operation on them so I didn’t want the graphs to be confusing. For the mega sizes, &lt;strong&gt;&lt;em&gt;smaller numbers are better&lt;/em&gt;&lt;/strong&gt;. The results with the mega sizes were consistent with Eclipse Collections Eager Fork/Join (FJIterate) being the fastest for parallel. Eclipse Collections Eager Serial was the fastest for the serial in all but the largest test, where JDK Serial Stream.toList() came out on top.&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/527fbef4a785d8cfc316ef07b028b83a/href&quot;&gt;https://medium.com/media/527fbef4a785d8cfc316ef07b028b83a/href&lt;/a&gt;&lt;h3&gt;Some Lessons Learned&lt;/h3&gt;&lt;p&gt;After more than 15 years of building parallel eager utility classes in Eclipse Collections, I’ve learned a few things. I had forgotten some of the lessons I learned along the way, but writing this blog has helped me re-discover some of them while pouring over the code. Writing efficient parallel algorithms is extremely hard work, and you will spend a lot of time running and re-running benchmarks. It is a rabbit hole, and you will lose days or weeks of your life if you fall into it.&lt;/p&gt;&lt;p&gt;You can sometimes tune performance for specific eager algorithms so that maybe you will get a 5%, 10% or maybe even 20% speedup over more general lazy algorithms. If performance is really important to you, then you may find implementing specific use cases with lower level frameworks like Fork/Join or Executors will be beneficial. Sometimes even hand coding an algorithm using a higher level construct like a parallel forEach with an efficient concurrent data structure will give good returns.&lt;/p&gt;&lt;p&gt;In 2013, buying a personal desktop machine with a decent number of cores and RAM that I could run parallel benchmarks against seemed like it would be a good long term investment for Eclipse Collections. In retrospect, I think it was a good investment, as I have used the machine to prepare benchmarks for various talks and blogs over the years. My plan has been to not even look at upgrading my personal desktop again until 10 years have passed. Surprisingly, even with all the promise of multiple cores showing up in laptops and desktop machines, it hasn’t been until relatively recently that we’ve seen a decent uptick in the number of cores and RAM for less than a totally outrageous prices, like I paid for my Mac Pro “trash can” in 2013.&lt;/p&gt;&lt;p&gt;Even though I have run a lot of benchmarks on the MacPro over the years, I haven’t actually done much tuning at all of any of the parallel algorithms in Eclipse Collections. I had previously tested Eclipse Collections with an extremely large machine at my previous employer (24 cores, 256GB RAM). We were already seeing good speedups for many of the parallel eager and lazy algorithms we implemented. As I mentioned above, our parallel lazy algorithms were implemented more recently than the parallel eager, but also haven’t really been tuned much since late 2014. &lt;a href=&quot;https://medium.com/u/82b613b921f6&quot;&gt;Craig Motlin&lt;/a&gt; gave a great talk in June 2014 on the Eclipse Collections parallel lazy implementation approach. It has some great explanations and lessons on how three different implementations (Java 8, Scala, Eclipse Collections previously GS Collections) were tuned for specific parallel algorithms. I will link to it here for anyone who is looking to learn some great lessons about optimization strategies for parallel algorithms.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.infoq.com/presentations/java-streams-scala-parallel-collections/&quot;&gt;Parallel-lazy Performance: Java 8 vs Scala vs GS Collections&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;The Future&lt;/h3&gt;&lt;p&gt;Now that JDK 17 is released, and there are new, cheaper machines with more cores available on the market, it might be worthwhile testing and tuning the parallel algorithms in Eclipse Collections again. It might also be useful to expand on the current parallel lazy implementation. Java Streams seem to be improving for some parallel use cases, and can probably still benefit from approaches that Eclipse Collections uses to optimize specific algorithms like filter and map. Craig describes the approach we use in his talk above, so it is definitely worthwhile watching. Often the future can benefit from lessons learned in the past.&lt;/p&gt;&lt;p&gt;I would like to refactor and clean up the parallel eager implementations in Eclipse Collections and improve the symmetry between ParallelIterate and FJIterate. The biggest change I would like to make will be to change the return type from Collection to either RichIterable or MutableCollection. in ParallelIterate and FJIterate.&lt;/p&gt;&lt;p&gt;I would also like to see some folks opportunistically pick up and continue the work on parallel lazy implementation of Eclipse Collections. There are a lot of methods that have not been added yet as I illustrated above showing the difference between LazyIterable and ParallelIterable. There is a cost and a benefit to improving symmetry. So far, the cost for adding more parallel methods has outweighed the benefits, which is why we haven’t done much more work in this space. But for the right person, who might looking to cut their teeth on parallel programming, and maybe test out all the cores in their newly purchased MacBook Pro with an M1 Max, the benefits of learning how to build optimized parallel algorithms might outweigh the costs.&lt;/p&gt;&lt;p&gt;I believe that parallel programming will become increasingly important for a larger population of Java developers. Learning how to program and tune parallel algorithms effectively will be something many developers will need to learn. The knowledge and experience from books like CPJ from Doug Lea and “Java Concurrency in Practice” (&lt;a href=&quot;https://jcip.net/&quot;&gt;JCIP&lt;/a&gt;) from Brian Goetz will become important and popular again. Now that I have my second brand new copy of CPJ, and my previously signed copy of JCIP, I am ready to re-learn the lessons of concurrency and parallelism all over again.&lt;/p&gt;&lt;h3&gt;Final Thoughts&lt;/h3&gt;&lt;p&gt;My goal for this blog was to share some lessons I learned from the past 15 years that otherwise might have gone undiscovered or completely forgotten. I doubt most developers who use Eclipse Collections will have dug into the parallel algorithms available in the library before reading this blog. I hope some Java developers read this blog and find it useful for helping them learn more about parallel programming approaches they may not have been previously aware of. If you read it and liked it, you can let me know by clapping and/or commenting. I generally dislike including micro-benchmarks in blogs, but I think folks find them interesting enough to start investigating and learning more. Take my benchmarks with a huge grain of salt and two pounds of skepticism. I wouldn’t recommend basing any decisions on them. I highly recommend writing your own application benchmarks for your own specific use cases and determining for yourself whether a particular approach will help you achieve better or worse performance. As I’ve recommended in my previous blog linked above:&lt;/p&gt;&lt;blockquote&gt;Prove it before going Parallel.&lt;/blockquote&gt;&lt;p&gt;Thanks for reading!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=e4340b00f79f&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/the-unparalleled-design-of-eclipse-collections-e4340b00f79f&quot;&gt;The unparalleled design of Eclipse Collections&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/javarevisited&quot;&gt;Javarevisited&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Mon, 01 Nov 2021 04:49:37 +0000</pubDate>
</item>
<item>
	<title>Marc Nuri: Eclipse JKube 1.5.1 is now available!</title>
	<guid isPermaLink="true">https://blog.marcnuri.com/eclipse-jkube-1-5-1</guid>
	<link>https://blog.marcnuri.com/eclipse-jkube-1-5-1</link>
	<description>&lt;div&gt;&lt;a href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-5-1&quot;&gt;Original post&lt;/a&gt;&lt;/div&gt;
    &lt;p&gt;On behalf of the &lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-introduction-kubernetes-openshift&quot; title=&quot;Eclipse JKube introduction: Java tools and plugins for Kubernetes and OpenShift&quot;&gt;Eclipse JKube&lt;/a&gt; team and everyone who has contributed, I'm happy to announce that Eclipse JKube &lt;code&gt;1.5.1&lt;/code&gt; has been &lt;a href=&quot;https://github.com/eclipse/jkube/releases/tag/v1.5.1&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/releases/tag/v1.5.1&quot;&gt;released&lt;/a&gt; and is now available from &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/jkube/kubernetes-maven-plugin/1.5.1/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://repo1.maven.org/maven2/org/eclipse/jkube/kubernetes-maven-plugin/1.5.1/&quot;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Thanks to all of you who have contributed with issue reports, pull requests, feedback, spreading the word with blogs, videos, comments, etc. We really appreciate your help, keep it up!&lt;/p&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-5-1/#whats-new&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;whats-new&quot;&gt;&lt;/span&gt;What's new?&lt;/h2&gt;&lt;p&gt;Without further ado, let's have a look at the most significant updates:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://blog.marcnuri.com/tag/eclipse/feed.xml#openshift-kubernetes-gradle-plugin&quot; title=&quot;Link to the Gradle plugin section&quot;&gt;Kubernetes and OpenShift Gradle Plugins (Preview)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.marcnuri.com/tag/eclipse/feed.xml#hacktoberfest-2021&quot; title=&quot;Link to the Hacktoberfest 2021 section&quot;&gt;Hacktoberfest 2021&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-5-1/#openshift-kubernetes-gradle-plugin&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;openshift-kubernetes-gradle-plugin&quot;&gt;&lt;/span&gt;Kubernetes and OpenShift Gradle Plugins (Preview)&lt;/h3&gt;&lt;p&gt;Eclipse JKube 1.5.1 finally brings the new Kubernetes Gradle Plugin and OpenShift Gradle Plugin. We're releasing these plugins as a &lt;strong&gt;preview&lt;/strong&gt; including most of the standard functionality that you can find in the homologous &lt;a class=&quot;post-link &quot; href=&quot;https://blog.marcnuri.com/quarkus-kubernetes-maven-plugin-graal&quot; title=&quot;Quarkus 2 + Kubernetes Maven Plugin + GraalVM integration&quot;&gt;Maven plugins&lt;/a&gt;. However, there's still work to do, so please share your feedback&lt;/p&gt;&lt;h4 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-5-1/#kubernetes-gradle-plugin-setup&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;kubernetes-gradle-plugin-setup&quot;&gt;&lt;/span&gt;Getting started&lt;/h4&gt;&lt;p&gt;The first step is to add the plugin to your project:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-groovy&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;plugins {
&lt;/span&gt;&lt;span&gt;  id &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'org.eclipse.jkube.kubernetes'&lt;/span&gt;&lt;span&gt; version &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'1.5.1'&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #bc9458; font-style: italic;&quot;&gt;/* ... */&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or in case of OpenShift:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-groovy&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;plugins {
&lt;/span&gt;&lt;span&gt;  id &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'org.eclipse.jkube.openshift'&lt;/span&gt;&lt;span&gt; version &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'1.5.1'&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #bc9458; font-style: italic;&quot;&gt;/* ... */&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your application is based on Spring Boot, then this is all the configuration you'll need.&lt;/p&gt;&lt;h4 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-5-1/#kubernetes-gradle-plugin-tasks&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;kubernetes-gradle-plugin-tasks&quot;&gt;&lt;/span&gt;Available tasks&lt;/h4&gt;&lt;p&gt;This is still a &lt;strong&gt;preview&lt;/strong&gt;, more tasks are yet to come. Following is the list of the currently supported Gradle tasks:&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Task&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;k8sBuild&lt;/td&gt;&lt;td&gt;Build container images&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;k8sPush&lt;/td&gt;&lt;td&gt;Pushes the built images to the container image registry&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;k8sResource&lt;/td&gt;&lt;td&gt;Generate resource manifests for your application&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;k8sApply&lt;/td&gt;&lt;td&gt;Applies the generated resources to the connected cluster&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;k8sHelm&lt;/td&gt;&lt;td&gt;Generate Helm charts for your application&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;k8sDebug&lt;/td&gt;&lt;td&gt;Debug your Java app running on the cluster&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;k8sLog&lt;/td&gt;&lt;td&gt;Show the logs of your Java app running on the cluster&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;k8sUndeploy&lt;/td&gt;&lt;td&gt;Deletes the kubernetes resources that you deployed via the k8sApply task&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;&lt;p&gt;The tasks can be executed as in the following example:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-bash&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;gradle build k8sBuild k8sPush k8sResource k8sApply&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also check the recording of my EclipseCon 2021 session to learn more about the Gradle Plugins.&lt;/p&gt;&lt;div&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-5-1/#hacktoberfest-2021&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;hacktoberfest-2021&quot;&gt;&lt;/span&gt;Hacktoberfest&lt;/h2&gt;&lt;p&gt;This year we've been active members of the &lt;a href=&quot;https://hacktoberfest.digitalocean.com/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Hacktoberfest 2021 main page&quot;&gt;Hacktoberfest&lt;/a&gt;. This is aligned with our all year round  &lt;code&gt;first-timers-only&lt;/code&gt; issue strategy.&lt;/p&gt;&lt;p&gt;The 1.5.1 release includes around &lt;a href=&quot;https://github.com/eclipse/jkube/labels/first-timers-only&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/labels/first-timers-only&quot;&gt;30 contributions&lt;/a&gt; from members of the community who took part on Hacktoberfest 2021. On behalf of the core maintainer team I want to thank you all for your participation and making JKube even better with your contributions.&lt;/p&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-5-1/#using-this-release&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;using-this-release&quot;&gt;&lt;/span&gt;Using this release&lt;/h2&gt;&lt;p&gt;If your project is based on Maven, you just need to add the kubernetes maven plugin or the openshift maven plugin to your plugin dependencies:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-xml&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;org.eclipse.jkube&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;kubernetes-maven-plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;1.5.1&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;plugin&lt;/span&gt;&lt;span style=&quot;color: #e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your project is based on Gradle, you just need to add the kubernetes gradle plugin or the openshift gradle plugin to your plugin dependencies:&lt;/p&gt;&lt;div class=&quot;code&quot; style=&quot;background: #232323;&quot;&gt;&lt;pre style=&quot;display: block; padding: 0.5em; background: #232323; color: #e6e1dc;&quot;&gt;&lt;code class=&quot;language-groovy&quot; style=&quot;white-space: pre;&quot;&gt;&lt;span&gt;plugins {
&lt;/span&gt;&lt;span&gt;  id &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'org.eclipse.jkube.kubernetes'&lt;/span&gt;&lt;span&gt; version &lt;/span&gt;&lt;span style=&quot;color: #a5c261;&quot;&gt;'1.5.1'&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 class=&quot;heading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://blog.marcnuri.com/eclipse-jkube-1-5-1/#how-can-you-help&quot;&gt;&lt;i class=&quot;anchor__link fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;span id=&quot;how-can-you-help&quot;&gt;&lt;/span&gt;How can you help?&lt;/h2&gt;&lt;p&gt;If you're interested in helping out and are a first time contributor, check out the &lt;a href=&quot;https://github.com/eclipse/jkube/labels/first-timers-only&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/labels/first-timers-only&quot;&gt;&quot;first-timers-only&quot;&lt;/a&gt; tag in the issue repository. We've tagged extremely easy issues so that you can get started contributing to Open Source and the Eclipse organization.&lt;/p&gt;&lt;p&gt;If you are a more experienced developer or have already contributed to JKube, check the &lt;a href=&quot;https://github.com/eclipse/jkube/labels/help%20wanted&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/labels/help%20wanted&quot;&gt;&quot;help wanted&quot;&lt;/a&gt; tag.&lt;/p&gt;&lt;p&gt;We're also excited to read articles and posts mentioning our project and sharing the user experience. Feedback is the only way to improve.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.eclipse.org/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://www.eclipse.org/jkube&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/eclipse/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/eclipse/jkube/issues&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://github.com/eclipse/jkube/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://gitter.im/eclipse/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://gitter.im/eclipse/jkube&quot;&gt;Gitter&lt;/a&gt; | &lt;a href=&quot;https://accounts.eclipse.org/mailing-list/jkube-dev&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://accounts.eclipse.org/mailing-list/jkube-dev&quot;&gt;Mailing list&lt;/a&gt; | &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jkube&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot; title=&quot;Link to https://stackoverflow.com/questions/tagged/jkube&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;&lt;span class=&quot;post-image__pusher aligncenter&quot;&gt;&lt;/span&gt;&lt;figure class=&quot;post-image &quot;&gt;&lt;span class=&quot;post-image__scrim&quot;&gt;&lt;/span&gt;&lt;a class=&quot;post-image__link&quot; href=&quot;https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg&quot; title=&quot;Eclipse JKube Logo&quot;&gt;&lt;span class=&quot;post-image__image-container&quot;&gt;&lt;div class=&quot;gatsby-image-wrapper gatsby-image-wrapper-constrained post-image__image aligncenter&quot;&gt;&lt;source type=&quot;image/webp&quot; /&gt;&lt;img alt=&quot;Eclipse JKube Logo&quot; src=&quot;https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg&quot; /&gt;&lt;/div&gt;&lt;/span&gt;&lt;/a&gt;&lt;/figure&gt;</description>
	<pubDate>Thu, 28 Oct 2021 15:00:00 +0000</pubDate>
        <enclosure url="https://blog.marcnuri.com/static/af6673438e09cd98812665335c800cbf/e5189/JKube-blog-banner.jpg" length="0" type="image/jpg"/>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse Foundation Joins Bosch, Microsoft, and Other Industry Leaders to Create an Open Source Working Group for the Software-Defined Vehicle</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-foundation-joins-bosch-microsoft-and-other-industry-leaders-create-open</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-foundation-joins-bosch-microsoft-and-other-industry-leaders-create-open</link>
	<description>&lt;p class=&quot;rtecenter&quot;&gt;&lt;em&gt;Open source leader actively recruiting interested enterprises to develop a new vendor-neutral, working group focused on building the next-generation vehicles based on the open source model &lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BRUSSELS – October 28, 2021&lt;/strong&gt; – &lt;a href=&quot;http://www.eclipse.org&quot;&gt;The Eclipse Foundation&lt;/a&gt;, one of the world’s largest open source foundations, along with multiple industry leaders, including Bosch, Microsoft and others, today announced an open invitation for technology leaders to help define a new working group focused specifically on the Software-Defined Vehicle. The ultimate goal will be the creation of a vendor-agnostic, open source ecosystem with a vivid, contributing community focused on building the foundation for a new era in automotive software development. This announcement serves as a “call to action” for all interested parties to join this initiative and help shape the future of mobility. &lt;/p&gt;

&lt;p&gt;Today, next-generation vehicle developers are turning to software-based solutions for their new designs. The Eclipse Foundation believes this will lead to an open source revolution that results in software-defined vehicles. Software-defined vehicles will enable vehicle manufacturers as well as automotive suppliers to put software at the very center of vehicle development, with hardware considerations to follow. &lt;/p&gt;

&lt;p&gt;“We’re very excited to develop this new effort here at the Eclipse Foundation. Although we have extensive roots with the automotive community, a project of this scope and scale has never been attempted before,” said Mike Milinkovich, executive director of the Eclipse Foundation. “This initiative enables participants to get in at the ‘ground level” and ensure they each have an equal voice in this project.”&lt;/p&gt;

&lt;p&gt;To achieve this significant change in the design process, this new working group will build the foundation of an open ecosystem for deploying, configuring, and monitoring vehicle software in a secure and safe way. Vehicle manufactures around the world may use this foundation to focus on differentiating customer features, like mobility services and end-user experience improvements, while saving time and cost on the non-differentiating elements, like operating systems, middleware or communication protocols.&lt;br /&gt;
 &lt;br /&gt;
To support the transformation to software-defined vehicles, major players from the technology industry as well as the automotive industry are encouraged to collaboratively  develop an open source in-vehicle application runtime stack, cloud-based vehicle operations as well as highly integrated development toolchains. The ultimate goal of the open source software-defined vehicle initiative is to scale in-vehicle software across vehicle models, product lines, brands, organizations, and time. &lt;/p&gt;

&lt;p&gt;The Eclipse Foundation and its decades of experience managing the governance of complex technology initiatives and multi-vendor organizations make it the ideal organization to help manage such an endeavor. Its commitment to transparency, vendor-neutrality, and a shared voice will ensure that all participants have the opportunity to shape the future of the working group.  &lt;/p&gt;

&lt;p&gt;To learn more about getting involved with the Eclipse Foundation’s Software-Defined Vehicle initiative, please visit us at &lt;a href=&quot;http://sdv.eclipse.org&quot;&gt;sdv.eclipse.org&lt;/a&gt;, or email us at membership@eclipse.org. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;Quotes from Members &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BlackBerry&lt;/strong&gt;&lt;br /&gt;
“This Eclipse Foundation Software-Defined Vehicle collaboration will be an important factor in influencing next-generation Software-Defined Vehicle architectures,” said Grant Courville, vice-president of product management and strategy at BlackBerry QNX. “BlackBerry QNX has a long history of embracing industry standards and we continue to work very closely with our customers and partners to help define and enable future automotive architectures. As a founding member, for 20 years BlackBerry has had a front row seat to The Eclipse Foundation’s relentless pursuit to help spur developer innovation and we’re thrilled to be part of this new initiative with a view to accelerating the software-defined future of automotive.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bosch&lt;/strong&gt;&lt;br /&gt;
“Technological, organizational, and cultural innovations pave the way for the software-defined vehicle. The use of open-source software and technology neutrality are the pillars for a strong community to actively shape the transformation in automotive software engineering together with our customers and partners,” said Sven Kappel, vice president - Head of Project Software Defined Vehicle at Bosch. “For Bosch, collaboration across industries is key to realize the software-defined vehicle. Together with the Eclipse Foundation and other participants we are driving this change and looking forward to welcoming additional contributors to the initiative.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EPAM Systems&lt;/strong&gt;&lt;br /&gt;
“The automotive industry is undergoing a period of rapid transformation, with the next generation of vehicles transitioning to software-defined,” said Alex Agizim, CTO, Automotive &amp;amp; Embedded Systems, EPAM. “EPAM is proud to bring its embedded engineering and digital orchestration expertise to this industry-first initiative for open-source software-defined vehicles. In partnership with Bosch, Microsoft, The Eclipse Foundation and more, this collaboration will help usher in the new era in automotive development.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ETAS&lt;/strong&gt;&lt;br /&gt;
“The software-defined vehicle will play a key role in the future of mobility,” said Christoph Hartung, president and chairman of the ETAS Board of Management. “The explosive increase in complexity can only be mastered by working closely together as we do in this initiative.” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Microsoft&lt;/strong&gt;&lt;br /&gt;
​​“With digital technologies unlocking the future of accessible, sustainable and safe transportation experiences, mobility services providers are increasingly looking to differentiate through software innovation,” said Ulrich Homann, corporate vice president and Distinguished Architect, Microsoft. “By standardizing the development, deployment and management of software-defined vehicles through collaboration in the open-source space, businesses can bring tailored mobility solutions to their customers faster and can focus on innovations.” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Red Hat&lt;/strong&gt;&lt;br /&gt;
“Since our founding, Red Hat has clearly seen and advocated for open source collaboration as a force multiplier for software quality and value,” said Francis Chow, vice president, In-Vehicle Operating System, Red Hat. “We are pleased to collaborate on software-defined vehicles built with an open source backbone alongside the other member organizations of the Eclipse Software-Defined Vehicle initiative.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SUSE&lt;/strong&gt;&lt;br /&gt;
“Defining and developing the software-defined vehicle will transform the automotive industry, enabling manufacturers to truly address the rapidly changing concerns and pain points the market is experiencing today,” said Thomas Di Giacomo, SUSE chief technology and product officer. “For nearly 30 years, SUSE has been a trusted partner supporting systems and essential workloads in some of the most challenging and critical industries, including the automotive industry. We are eager to contribute our experience and ready-to-use open source technologies to help advance the automotive software industry.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About the Eclipse Foundation&lt;/strong&gt;&lt;br /&gt;
The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter &lt;a href=&quot;https://twitter.com/EclipseFdn&quot;&gt;@EclipseFdn&lt;/a&gt;, &lt;a href=&quot;https://linkedin.com/company/eclipse-foundation&quot;&gt;LinkedIn&lt;/a&gt; or visit &lt;a href=&quot;http://eclipse.org&quot;&gt;eclipse.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
Third-party trademarks mentioned are the property of their respective owners.&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot;&gt;###&lt;/p&gt;

&lt;p&gt;Media contacts: &lt;/p&gt;

&lt;p&gt;&lt;u&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL&lt;/u&gt;&lt;br /&gt;
Julia Rauch / Sophie Dechansreiter / Tobias Weiß&lt;br /&gt;
Sendlinger Straße 42A&lt;br /&gt;
80331 Munich&lt;br /&gt;
EclipseFoundation@schwartzpr.de&lt;br /&gt;
+49 (89) 211 871 – 43 / -35 / -70&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/u&gt;&lt;br /&gt;
Jay Nichols&lt;br /&gt;
jay@nicholscomm.com&lt;br /&gt;
+1 408-772-1551&lt;br /&gt;
 &lt;/p&gt;</description>
	<pubDate>Thu, 28 Oct 2021 09:00:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Introducing Oniro: A Vendor Neutral, Open Source OS for Next-Gen Devices</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1639</guid>
	<link>https://eclipse-foundation.blog/2021/10/26/introducing-oniro/</link>
	<description>&lt;p&gt;It’s a rare event when a new operating system comes along. And it’s even rarer to have the opportunity to influence the direction of that OS at its earliest stages. So I’m delighted to tell you that today we are &lt;a href=&quot;https://newsroom.eclipse.org/news/announcements/open-source-leader-eclipse-foundation-launches-vendor-neutral-operating-system&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;announcing&lt;/a&gt; a new working group and top-level project that gives you that opportunity. The Oniro community will nurture and evolve the Oniro operating system, a transparent, vendor-neutral, and independent OS for the next generation of distributed systems.&lt;/p&gt;



&lt;p&gt;The Oniro OS will provide a true, community-driven open source solution that runs on a wider spectrum of devices than today’s operating systems. And it will make it far easier to integrate different types of next-gen hardware and software.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Architected to Go Beyond Today’s Operating Systems&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;The Oniro OS can run on more devices than current operating systems because it features a multi-kernel architecture:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;A Linux Yocto kernel allows the OS to run on larger embedded devices, such as Raspberry Pi-class devices &lt;/li&gt;&lt;li&gt;A Zephyr kernel allows the OS to run on highly resource-constrained devices, such as a coffee maker or a thermostat&lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;With the ability to run the same OS on different classes of devices, Oniro will provide an ideal solution to support the future of IoT, machine economy, edge, mobile, and other next-gen devices:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Consumers and adopters of the Oniro OS will have a more seamless experience than they have with the current generation of operating systems.&lt;/li&gt;&lt;li&gt;Devices will be able to directly connect to one another and share data, enabling a much higher degree of interoperability than is possible today.&lt;/li&gt;&lt;li&gt;Data exchanged between devices can flow directly to one another rather than always being shared via the cloud, enabling low latency architectures which are also inherently more secure and private. &lt;/li&gt;&lt;/ul&gt;



&lt;p&gt;We expect the initial use cases for Oniro will be in the IoT and industrial IoT domains with applications for mobile devices coming later as the community evolves, grows, and establishes its roadmap.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Enabling the Global Ecosystem for OpenHarmony&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Oniro is an independent open source implementatio of OpenAtom’s OpenHarmony. To deliver on the promise of Oniro, the community will deliver an independent, but compatible implementation of the OpenHarmony specifications, tailored for the global market. OpenHarmony is based on HarmonyOS, a multi-kernel OS that was developed by Huawei and contributed to the OpenAtom Foundation last year. In the future Oniro will also deliver additional specifications to help drive global adoption.&lt;/p&gt;



&lt;p&gt;By creating a compatible implementation of OpenHarmony, the Oniro community can ensure that applications built for Oniro will run on OpenHarmony and vice versa. This interoperability will allow the Oniro community to create a global ecosystem and marketplace for applications and services that can be used across both operating systems, anywhere in the world. &lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Join an Innovative Open Source Community&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;I truly believe that Oniro is open source done right. It’s a huge opportunity to build an operating system that rethinks how devices across many different device classes can interoperate in a secure and privacy-preserving way. &lt;/p&gt;



&lt;p&gt;Because Oniro’s evolution is being guided by an open and vendor-neutral community using the Eclipse Development Process, openness and transparency are a given. This will go a long way towards building the engagement and stakeholder trust necessary to create the global ecosystem.&lt;/p&gt;



&lt;p&gt;The founding members of the Oniro Working Group include telecom giant, Huawei, Arm software experts Linaro, and industrial IoT specialists Seco. As more organizations become aware of Oniro, we expect the community to encompass organizations of all sizes and from all industries. &lt;/p&gt;



&lt;p&gt;I strongly encourage everyone with an interest in next-gen devices — corporations, academics, individuals — to take the opportunity to get involved in Oniro in its earliest stages. To get started, join the Oniro conversation by subscribing to the &lt;a href=&quot;https://accounts.eclipse.org/mailing-list/oniro-wg&quot;&gt;Oniro &lt;/a&gt;&lt;a href=&quot;https://accounts.eclipse.org/mailing-list/oniro-wg&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;working group list&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 26 Oct 2021 12:01:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Open Source Leader the Eclipse Foundation Launches Vendor-Neutral Operating System for Next-Generation Device Interoperability</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/open-source-leader-eclipse-foundation-launches-vendor-neutral-operating-system</guid>
	<link>https://newsroom.eclipse.org/news/announcements/open-source-leader-eclipse-foundation-launches-vendor-neutral-operating-system</link>
	<description>&lt;p&gt;&lt;strong&gt;FOR IMMEDIATE RELEASE&lt;/strong&gt;&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot;&gt;&lt;em&gt;Oniro will provide a true open source solution to make multi-device hardware and software integration easier&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Brussels, October 26, 2021&lt;/strong&gt; – &lt;a href=&quot;http://www.eclipse.org&quot;&gt;The Eclipse Foundation&lt;/a&gt;, a European open source foundation, furthering the recently announced &lt;a href=&quot;https://newsroom.eclipse.org/news/announcements/eclipse-foundation-and-openatom-foundation-forge-strategic-initiative-focused&quot;&gt;cooperation with the OpenAtom Foundation&lt;/a&gt;, announced today the launch of the &lt;a href=&quot;https://oniroproject.org/&quot;&gt;Oniro&lt;/a&gt; project and working group. &lt;/p&gt;

&lt;p&gt;Oniro aspires to become a transparent, vendor-neutral, and independent alternative to established IoT and edge operating systems. To achieve this goal and ensure Oniro has a global reach, the Eclipse Foundation and its members will deliver a compatible independent implementation of OpenHarmony, an open source operating system specified and hosted by the OpenAtom Foundation.&lt;/p&gt;

&lt;p&gt;“Oniro is open source done right,” said Mike Milinkovich, executive director of the Eclipse Foundation. “It represents a unique opportunity to develop and host a next-generation operating system to support the future of mobile, IoT, machine economy, edge and many other markets.”&lt;/p&gt;

&lt;p&gt;With the creation of the Oniro top-level project, the Eclipse Foundation aims to strengthen the global technology ecosystem, while bringing a vendor-neutral, open source OS to the global market.&lt;/p&gt;

&lt;p&gt;To facilitate the governance for the Oniro device ecosystem, the Eclipse Foundation is also launching a new dedicated working group. The Eclipse Foundation’s working group structure provides the vendor neutrality and legal framework that enables transparent and equal collaboration between companies.&lt;/p&gt;

&lt;p&gt;“We’re very proud to be hosting a major European open source project with worldwide contribution aiming to develop an independent OS,” says Gaël Blondelle, vice president of European ecosystem development. “To achieve this, we want to welcome developers and companies from Europe and the rest of the world to join our working group at the Eclipse Foundation and bring this groundbreaking project to life together.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quotes from Supporters&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Huawei&lt;/strong&gt;&lt;br /&gt;
“We have been working hard with Linaro, Seco, Array, NOITechPark, Synesthesia to prepare Oniro’s initial code contribution and public cloud CI/CD infrastructure, and it is so exciting to see everything moving under the expert governance of the Eclipse Foundation,” said Davide Ricci, Director of the Huawei’s Consumer Business Group European Open Source Technology Center. “Under the Eclipse Foundation the project will have its greatest chance at onboarding new contributing members and bringing real products on the shelves of consumer electronics stores around the world. We reckon Oniro is not a sprint, rather a marathon, and we are thrilled and committed to this world changing journey.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linaro&lt;/strong&gt; &lt;br /&gt;
“Over the past year, Linaro has worked closely with Huawei and other Oniro members on preparing the OS foundations of Oniro, leveraging the work Linaro is already doing on open source projects such as MCUboot, the Yocto project, Trusted Substrate and multiple RTOSs,” said Andrea Gallo, VP of Business Development. “Formalizing the governance of this project through the Eclipse Foundation is the natural next step in delivering a truly vendor-neutral and independent operating system.” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SECO&lt;/strong&gt;&lt;br /&gt;
“Oniro will be the future of the open source OS, it will mark a new trend for its deeply innovative nature and defining it only as an operating system would be extremely reductive. In fact, it focuses on the end-user with an incredible user-experience, but it is also oriented to the content creators and OEMs at the same time, bringing to all of them certainty, choice and convenience,” said Gianluca Venere, Chief Innovation Officer, SECO. “It is born for device collaboration at the edge, to be hardware architecture independent, to create a swarm intelligence, and to enable ambient computing. For more than 40 years SECO has been designing and manufacturing innovative products and services for OEMs and we strongly believe that Oniro is a game changer in supporting our customers to the digital transformation.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About the Eclipse Foundation&lt;/strong&gt;&lt;br /&gt;
The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source &lt;a href=&quot;http://www.eclipse.org/projects&quot;&gt;projects&lt;/a&gt;, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 &lt;a href=&quot;http://www.eclipse.org/membership&quot;&gt;members&lt;/a&gt;, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter &lt;a href=&quot;https://twitter.com/EclipseFdn&quot;&gt;@EclipseFdn&lt;/a&gt;, &lt;a href=&quot;http://www.linkedin.com/company/eclipse-foundation/&quot;&gt;LinkedIn&lt;/a&gt; or visit &lt;a href=&quot;http://eclipse.org&quot;&gt;eclipse.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Media Contacts:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Schwartz Public Relations for Eclipse Foundation&lt;/u&gt;&lt;br /&gt;
Julia Rauch / Sophie Dechansreiter / Tobias Weiß&lt;br /&gt;
Sendlinger Straße 42A&lt;br /&gt;
80331 Munich&lt;br /&gt;
EclipseFoundation@schwartzpr.de&lt;br /&gt;
+49 (89) 211 871 – 43 / -35 / -70&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Nichols Communications for Eclipse Foundation in North America&lt;/u&gt;&lt;br /&gt;
Jay Nichols&lt;br /&gt;
jay@nicholscomm.com&lt;br /&gt;
+1 408-772-1551&lt;/p&gt;

&lt;p&gt;&lt;u&gt;PR Paradigm for Eclipse Foundation in France&lt;/u&gt;&lt;br /&gt;
Oscar Barthe&lt;br /&gt;
oscar@prparadigm.com&lt;br /&gt;
(+33) 06 73 51 78 91 &lt;br /&gt;
 &lt;/p&gt;

&lt;p&gt;&lt;u&gt;MSL Group for Eclipse Foundation in Italy&lt;/u&gt;&lt;br /&gt;
Rosa Parente&lt;br /&gt;
rosa.parente@mslgroup.com&lt;br /&gt;
+39 340 8893581&lt;/p&gt;</description>
	<pubDate>Tue, 26 Oct 2021 07:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse IoT Working Group Celebrates its 10th Anniversary</title>
	<guid isPermaLink="true">https://newsroom.eclipse.org/news/announcements/eclipse-iot-working-group-celebrates-its-10th-anniversary</guid>
	<link>https://newsroom.eclipse.org/news/announcements/eclipse-iot-working-group-celebrates-its-10th-anniversary</link>
	<description>&lt;p class=&quot;rtecenter&quot; dir=&quot;ltr&quot;&gt;&lt;em&gt;The world’s largest open source community for edge and IoT continues to drive innovation that benefits a broad range of industries and applications &lt;/em&gt;&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BRUSSELS&lt;/strong&gt; – October 25, 2021 – The Eclipse Foundation, one of the world’s largest open source software foundations, today celebrated the &lt;a href=&quot;https://iot.eclipse.org/anniversary/&quot;&gt;10th Anniversary&lt;/a&gt; of the Eclipse IoT Working Group. Eclipse IoT is the largest open source IoT community in the world with 47 working group members, 47 projects, 360 contributors, and more than 32 million lines of code.&lt;/p&gt;

&lt;p&gt;“It would be challenging to measure the industry impact of the Eclipse IoT Working Group over the past 10 years,” said Mike Milinkovich, executive director of the Eclipse Foundation. “From day one, this working group had a vision focused on developing actionable code as opposed to blueprints or standards, which has enabled it to stand apart from other organizations. This focus, along with the broad and diverse mix of Eclipse IoT ecosystem participants, has led to an extremely vibrant community that has helped drive commercial innovation and adoption at scale.”&lt;br /&gt;
 &lt;br /&gt;
In addition to original founding members, IBM and Eurotech, the current Eclipse IoT ecosystem now includes globally recognized players such as Bosch.IO, Red Hat, Huawei, Intel, SAP, and Siemens. The community is further enriched with Industrial IoT (IIoT) specialists like Aloxy, Cedalo, itemis, and Kynetics; along with edge IoT innovators that include ADLINK Technology and Edgeworx.&lt;br /&gt;
    &lt;br /&gt;
Eclipse IoT is home to open source innovation that has delivered some of the industry’s most popular IoT protocols. CoAP (Eclipse Californium), DDS (Eclipse Cyclone DDS), LwM2M (Eclipse Leshan), MQTT (Eclipse Paho, Eclipse Mosquitto and Eclipse Amlen) and OPC UA (Eclipse Milo) are all built around Eclipse IoT projects. Other popular Eclipse IoT production-ready platforms cover use cases such as digital twins (Eclipse Ditto), energy management (Eclipse VOLTTRON), contactless payments (Eclipse Keyple), Smart cities (Eclipse Kura) in addition to Eclipse Kapua  — a modular IoT cloud platform that manages data, devices, and much more.&lt;br /&gt;
 &lt;br /&gt;
To learn more about how to get involved with &lt;a href=&quot;https://iot.eclipse.org/&quot;&gt;Eclipse IoT&lt;/a&gt;, &lt;a href=&quot;https://edgenative.eclipse.org/&quot;&gt;Edge Native&lt;/a&gt;, &lt;a href=&quot;https://sparkplug.eclipse.org/&quot;&gt;Sparkplug&lt;/a&gt; or other working groups at the Eclipse Foundation, visit the Foundation’s &lt;a href=&quot;https://www.eclipse.org/membership/&quot;&gt;membership page&lt;/a&gt;. Working group members benefit from a broad range of services, including exclusive access to detailed industry research findings, marketing assistance, and expert open source governance.&lt;/p&gt;

&lt;p&gt;For further IoT &amp;amp; edge related information, please reach us at:&lt;br /&gt;
&lt;a href=&quot;http://mailto:IoT@eclipse.org&quot;&gt;IoT@eclipse.org&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://mailto:Edgenative@eclipse.org&quot;&gt;Edgenative@eclipse.org&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Quotes from Eclipse IoT Working Group pioneers&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Andy Stanford-Clark, IBM UK CTO &amp;amp; Co-Inventor of MQTT&lt;/strong&gt;&lt;br /&gt;
“Our original vision for the IoT Working Group was to create and curate a software stack which would enable developers to write ‘applications for platforms’, rather than ‘custom code for specific devices.’ Over the 10 years, I think we’ve made that vision a reality. I’m immensely proud of what we’ve achieved together.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Andy Piper, Developer Advocate &amp;amp; Founding Project Lead, Eclipse Paho &lt;/strong&gt;&lt;br /&gt;
“It is inspiring to see the range and scope of projects that make up the Eclipse IoT Working Group, 10 years on - we knew that the keys to success would be open source, interoperability, and open standards. I’m hugely proud of the success of MQTT and Mosquitto, and the wider ecosystem in this space.” &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Marco Career, CTO, Eurotech&lt;/strong&gt;&lt;br /&gt;
“Eclipse IoT WG has shattered the silos of monolithic M2M applications and proprietary connectivity by promoting open standards and open architectures while creating a vibrant community of interoperable projects. Eurotech is proud of having been part of this journey and we wish Eclipse IoT WG 10 more successful years”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deb Bryant, Senior Director, Open Source Program Office, Red Hat&lt;/strong&gt;&lt;br /&gt;
“The 10th anniversary of the Eclipse Foundation IoT Working Group is a significant milestone not only for its members and partners, but for the technology and open source communities. Many solutions to challenges within global IoT ecosystems are the result of the Eclipse Foundation IoT Working Group’s dedication over the last decade to creating a vendor-neutral community of open source projects. Red Hat is proud to be a member of the Eclipse Foundation and looks forward to continuing our support for the IoT Working Group and helping to foster open source IoT achievements.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benjamin Cabé, Principal Program Manager, Microsoft:&lt;/strong&gt;&lt;br /&gt;
“It is both exciting and humbling to see how our initial vision of enabling an Internet of Things based on open source and open standards has effectively turned into a reality, ten years down the road. The Eclipse IoT Working Group and its community of passionate individuals have been a catalyst for IoT innovation, and I am looking forward to ten more years of success!”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;About the Eclipse Foundation&lt;/strong&gt;&lt;br /&gt;
The Eclipse Foundation provides our global community of individuals and organizations with a mature, scalable, and business-friendly environment for open source software collaboration and innovation. The Foundation is home to the Eclipse IDE, Jakarta EE, and over 400 open source projects, including runtimes, tools, and frameworks for cloud and edge applications, IoT, AI, automotive, systems engineering, distributed ledger technologies, open processor designs, and many others. The Eclipse Foundation is an international non-profit association supported by over 330 members, including industry leaders who value open source as a key enabler for their business strategies. To learn more, follow us on Twitter &lt;a href=&quot;https://twitter.com/EclipseFdn&quot;&gt;@EclipseFdn&lt;/a&gt;, &lt;a href=&quot;https://ca.linkedin.com/company/eclipse-foundation&quot;&gt;LinkedIn&lt;/a&gt; or visit &lt;a href=&quot;http://eclipse.org&quot;&gt;eclipse.org.&lt;/a&gt;&lt;br /&gt;
Third-party trademarks mentioned are the property of their respective owners.&lt;/p&gt;

&lt;p class=&quot;rtecenter&quot;&gt;###&lt;/p&gt;

&lt;p&gt;Media contacts &lt;/p&gt;

&lt;p&gt;&lt;u&gt;Schwartz Public Relations for the Eclipse Foundation, AISBL&lt;/u&gt;&lt;br /&gt;
Julia Rauch / Sophie Dechansreiter / Tobias Weiß&lt;br /&gt;
Sendlinger Straße 42A&lt;br /&gt;
80331 Munich&lt;br /&gt;
EclipseFoundation@schwartzpr.de&lt;br /&gt;
+49 (89) 211 871 – 43 / -35 / -70&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Nichols Communications for the Eclipse Foundation, AISBL&lt;/u&gt;&lt;br /&gt;
Jay Nichols&lt;br /&gt;
jay@nicholscomm.com&lt;br /&gt;
+1 408-772-1551&lt;br /&gt;
 &lt;/p&gt;</description>
	<pubDate>Mon, 25 Oct 2021 11:00:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: What Cloud Developers Want</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1635</guid>
	<link>https://eclipse-foundation.blog/2021/10/22/what-cloud-developers-want/</link>
	<description>&lt;p&gt;The &lt;a href=&quot;https://outreach.eclipse.foundation/cloud-developer-survey&quot;&gt;results of our first-ever Cloud Developer Survey&lt;/a&gt; are in, providing important insight into the development tools being used today, the role of open source, and the capabilities developers are looking for in next generation cloud-based tools and IDEs.  &lt;/p&gt;



&lt;p&gt;The Cloud Developer Survey was conducted April 22-May 1, 2021, with more than 300 software developers, DevOps specialists, architects, and IT leaders in the US, UK, France, and Germany being interviewed. It’s important to point out that this survey was fielded by an independent team of analysts with the express purpose of minimizing bias, and to provide a clear market perspective to our member community. &lt;/p&gt;



&lt;p&gt;In commissioning this research project, our primary objective was to gain a better understanding of cloud-based developer trends by identifying the requirements, priorities, and challenges faced by organizations that deploy and use cloud-based development solutions, including those based on open source technologies. Our expectation is that through these findings, we can better ensure developers have the tools and technologies they need for cloud native application development.&lt;/p&gt;



&lt;p&gt;An interesting finding is that more than 40 percent of survey respondents indicated that their company’s most important applications are now cloud native. And only three percent said their company has no cloud migration plans for important on-premise applications. This bodes well for the growth in cloud-based tools to help accelerate this trend and migration.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Developers Expect Open Source Tools and Technologies&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;One of the most significant trends revealed by the survey is the extremely high value developers place on open source. This is a rare number to see in survey results, but 100 percent of participating organizations said they allow their developers to use open source technologies for software development; though 62 percent do place at least some restrictions on usage.&lt;/p&gt;



&lt;p&gt;Looking ahead, developers expect open source to continue to grow in popularity, with more than 80 saying they consider open source to be important both now and in the future. With the focus on cloud native applications and growing reliance on open source, it’s safe to say that open source and cloud development go hand-in-hand, and are here to stay.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Flexibility, Better Integrations, and Innovation are Attractive &lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;The Cloud Developer Survey also revealed that while developers use a variety of tools, they prefer using those with which they’re already familiar. This is reflected by the fact that 57 percent of survey respondents are still using desktop IDEs, including the&lt;a href=&quot;https://www.eclipse.org/eclipseide/&quot;&gt; Eclipse IDE&lt;/a&gt;. What this means is that there remains a huge developer community that has yet to benefit from open source cloud IDE technologies like&lt;a href=&quot;https://theia-ide.org/&quot;&gt; Eclipse Theia&lt;/a&gt;,&lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt; Eclipse Che&lt;/a&gt;, and &lt;a href=&quot;https://open-vsx.org/&quot;&gt;Open VSX Registry&lt;/a&gt;, along with the ecosystem and products built around them.&lt;/p&gt;



&lt;p&gt;Developers that do use cloud-based tools aren’t necessarily tied to using what their cloud provider recommends. Instead, they prefer open source options that offer opportunities for customization and innovation. No matter which technologies developers opt to use, increasing productivity is crucial. Developers are looking for better integrations of APIs and other features and tools that help save them time and effort.&lt;/p&gt;



&lt;p&gt;Developers also want the flexibility to choose best-of-breed products and tools as needed to work more efficiently and to support the next wave of innovation in artificial intelligence, machine learning, and edge technologies. Open source drives innovation in these technologies, and flexible, open source tools will be key to attracting top talent to these cutting-edge development opportunities.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Read the Full Report and Recommendations&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;To review the complete Cloud Developer Survey results and the associated recommendations, &lt;a href=&quot;https://outreach.eclipse.foundation/cloud-developer-survey&quot;&gt;download the survey report&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;For more information about the Eclipse Cloud DevTools ecosystem and its benefits for members,&lt;a href=&quot;https://ecdtools.eclipse.org/&quot;&gt; visit the website&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Fri, 22 Oct 2021 12:30:00 +0000</pubDate>
</item>
<item>
	<title>Scott Lewis: OSGi Services with gRPC - Let's be reactive</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-20358640.post-1552665726319716493</guid>
	<link>http://eclipseecf.blogspot.com/2021/10/osgi-services-with-grpc-lets-be-reactive.html</link>
	<description>&lt;div style=&quot;text-align: left;&quot;&gt;&lt;a href=&quot;https://wiki.eclipse.org/ECF&quot; target=&quot;_blank&quot;&gt;ECF &lt;/a&gt;has just introduced an upgrade to the &lt;a href=&quot;https://github.com/ECF/grpc-RemoteServicesProvider&quot; target=&quot;_blank&quot;&gt;grpc distribution provider&lt;/a&gt;.   Previously, this distribution provider used &lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot; target=&quot;_blank&quot;&gt;ReaxtiveX java version 2&lt;/a&gt; only.  With this release, &lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot; target=&quot;_blank&quot;&gt;ReactiveX java version 3&lt;/a&gt; is also supported.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;As many know, &lt;a href=&quot;https://grpc.io/&quot;&gt;gRPC &lt;/a&gt;allows services (both traditional call/response [aka unary] and streaming services) to be defined by a 'proto3' file.  For example, here is a simple service with four methods, one unary (check) and 3 streaming (server streaming, client streaming, and bi-directional streaming)&lt;/div&gt;&lt;pre style=&quot;white-space: pre-wrap;&quot;&gt;syntax = &quot;proto3&quot;;&lt;br /&gt;&lt;br /&gt;package grpc.health.v1;&lt;br /&gt;&lt;br /&gt;option java_multiple_files = true;&lt;br /&gt;option java_outer_classname = &quot;HealthProto&quot;;&lt;br /&gt;option java_package = &quot;io.grpc.health.v1.rx3&quot;;&lt;br /&gt;&lt;br /&gt;message HealthCheckRequest {&lt;br /&gt;  string message = 1;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;message HealthCheckResponse {&lt;br /&gt;  enum ServingStatus {&lt;br /&gt;    UNKNOWN = 0;&lt;br /&gt;    SERVING = 1;&lt;br /&gt;    NOT_SERVING = 2;&lt;br /&gt;    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.&lt;br /&gt;  }&lt;br /&gt;  ServingStatus status = 1;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;service HealthCheck {&lt;br /&gt;  // Unary method&lt;br /&gt;  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);&lt;br /&gt;  // Server streaming method&lt;br /&gt;  rpc WatchServer(HealthCheckRequest) returns (stream HealthCheckResponse);&lt;br /&gt;  // Client streaming method&lt;br /&gt;  rpc WatchClient(stream HealthCheckRequest) returns (HealthCheckResponse);&lt;br /&gt;  // bidi streaming method&lt;br /&gt;  rpc WatchBidi(stream HealthCheckRequest) returns (stream HealthCheckResponse);&lt;br /&gt;}&lt;/pre&gt;&lt;div&gt;The gRPC project provides a plugin so that when protoc is run, java code (or other language code) is generated that can then be used on the server and/or clients.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;With some additional plugins, the classes generated by protoc can use the ReactiveX API for generating code.   So, for example, &lt;a href=&quot;https://github.com/ECF/grpc-RemoteServicesProvider/tree/master/examples/org.eclipse.ecf.examples.provider.grpc.rx3.health.api/src/main/java/io/grpc/health/v1/rx3&quot; target=&quot;_blank&quot;&gt;here is the java code&lt;/a&gt; generated by running protoc, grpc, reactive-grpc, and the osgi-generator plugins on the above HealthCheck service definition.  &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Note in particular the HealthCheckService interface generated by the osgi-generator protoc plugin:&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;white-space: pre-wrap;&quot;&gt;package io.grpc.health.v1.rx3;&lt;br /&gt;&lt;br /&gt;import io.reactivex.rxjava3.core.Single;&lt;br /&gt;import io.reactivex.rxjava3.core.Flowable;&lt;br /&gt;&lt;br /&gt;@javax.annotation.Generated(&lt;br /&gt;value = &quot;by grpc-osgi-generator (REACTIVEX) - A protoc plugin for ECF's grpc remote services distribution provider at https://github.com/ECF/grpc-RemoteServiceSProvider &quot;,&lt;br /&gt;comments = &quot;Source: health.proto.  &quot;)&lt;br /&gt;public interface HealthCheckService {&lt;br /&gt;    /**&lt;br /&gt;     * &amp;lt;pre&amp;gt;&lt;br /&gt;     *  Unary method&lt;br /&gt;     * &amp;lt;/pre&amp;gt;&lt;br /&gt;     */&lt;br /&gt;    default Single&amp;lt;io.grpc.health.v1.rx3.HealthCheckResponse&amp;gt; check(Single&amp;lt;io.grpc.health.v1.rx3.HealthCheckRequest&amp;gt; requests)  {&lt;br /&gt;        return null;&lt;br /&gt;    }&lt;br /&gt;    /**&lt;br /&gt;     * &amp;lt;pre&amp;gt;&lt;br /&gt;     *  Server streaming method&lt;br /&gt;     * &amp;lt;/pre&amp;gt;&lt;br /&gt;     */&lt;br /&gt;    default Flowable&amp;lt;io.grpc.health.v1.rx3.HealthCheckResponse&amp;gt; watchServer(Single&amp;lt;io.grpc.health.v1.rx3.HealthCheckRequest&amp;gt; requests)  {&lt;br /&gt;        return null;&lt;br /&gt;    }&lt;br /&gt;    /**&lt;br /&gt;     * &amp;lt;pre&amp;gt;&lt;br /&gt;     *  Client streaming method&lt;br /&gt;     * &amp;lt;/pre&amp;gt;&lt;br /&gt;     */&lt;br /&gt;    default Single&amp;lt;io.grpc.health.v1.rx3.HealthCheckResponse&amp;gt; watchClient(Flowable&amp;lt;io.grpc.health.v1.rx3.HealthCheckRequest&amp;gt; requests)  {&lt;br /&gt;        return null;&lt;/pre&gt;&lt;pre style=&quot;white-space: pre-wrap;&quot;&gt;    }&lt;/pre&gt;&lt;pre style=&quot;white-space: pre-wrap;&quot;&gt;    /**&lt;br /&gt;     * &amp;lt;pre&amp;gt;&lt;br /&gt;     *  bidi streaming method&lt;br /&gt;     * &amp;lt;/pre&amp;gt;&lt;br /&gt;     */&lt;br /&gt;    default Flowable&amp;lt;io.grpc.health.v1.rx3.HealthCheckResponse&amp;gt; watchBidi(Flowable&amp;lt;io.grpc.health.v1.rx3.HealthCheckRequest&amp;gt; requests)  {&lt;br /&gt;        return null;&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt;&lt;p style=&quot;text-align: left; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Note that it uses the two ReactiveX 3 classes: &lt;b&gt;io.reactivex.rxjava3.core.Single&lt;/b&gt;, and &lt;b&gt;io.reactivex.rxjava3.core.Flowable&lt;/b&gt;.   These two classes provide api for event-driven/reactive sending and receiving of unary (Single) and streaming (Flowable) arguments and return values.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;The ReactiveX API...particularly Flowable...makes it very easy to implement both consumers and implementers of the streaming API, while maintaining ordered delivery and non-blocking communication.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;For example, &lt;a href=&quot;https://github.com/ECF/grpc-RemoteServicesProvider/blob/master/examples/org.eclipse.ecf.examples.provider.grpc.rx3.health.impl/src/org/eclipse/ecf/examples/provider/grpc/rx3/health/impl/HealthServiceImpl.java&quot; target=&quot;_blank&quot;&gt;this is a simple implementation&lt;/a&gt; of the HealthCheckService.  Note how the Single and flowable methods are able to express the implementation logic through methods such as Flowable.map.   &lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Here is a &lt;a href=&quot;https://github.com/ECF/grpc-RemoteServicesProvider/blob/master/examples/org.eclipse.ecf.examples.provider.grpc.rx3.health.consumer/src/org/eclipse/ecf/examples/provider/grpc/rx3/health/consumer/HealthServiceConsumer.java&quot; target=&quot;_blank&quot;&gt;simple implementation of a consumer&lt;/a&gt; of the HealthCheckService.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;The use of the ReactiveX API simplifies both the implementation and the consumer use of both unary and streaming services.   As an added bonus: the &lt;a href=&quot;https://github.com/salesforce/reactive-grpc&quot; target=&quot;_blank&quot;&gt;reactive-grpc&lt;/a&gt; library used in the ECF Distribution provider provides *flow-control* using backpressure.  &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;In next article I'll describe how &lt;a href=&quot;https://docs.osgi.org/specification/osgi.cmpn/7.0.0/service.remoteservices.html&quot; target=&quot;_blank&quot;&gt;OSGi Remote Services&lt;/a&gt; can be easily used to export, publish, discover, and import remote services with full support for service versioning, security, and dynamics.  I'll also describe one can use tools like maven or bndtools+eclipse to generate source code (as above) from a proto3 file and easily run a generated service as an OSGi Remote Service.&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 20 Oct 2021 02:54:57 +0000</pubDate>
	<author>noreply@blogger.com (Scott Lewis)</author>
</item>
<item>
	<title>Mike Milinkovich: Eclipse Foundation Projects are OpenChain Conformant</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1628</guid>
	<link>https://eclipse-foundation.blog/2021/10/19/eclipse-foundation-projects-are-openchain-conformant/</link>
	<description>&lt;p&gt;Today &lt;a href=&quot;https://newsroom.eclipse.org/news/announcements/open-source-software-leader-eclipse-foundation-announces-it-has-achieved&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;we announced&lt;/a&gt; that the Eclipse Foundation is the first open source foundation to confirm its open source development process conforms with the OpenChain ISO 5230 international standard for open source license compliance. This means that every Eclipse Foundation project is being developed under a process which conforms to the ISO 5230 standard. The announcement is great news for our open source software contributors, users, adopters, and stakeholders globally. &lt;/p&gt;



&lt;p&gt;The OpenChain ISO 5230 standard is officially known as the OpenChain 2.1 ISO/IEC 5230:2020 standard, and is maintained by the &lt;a href=&quot;https://www.openchainproject.org/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;OpenChain Project&lt;/a&gt;. Its goal is to provide a clear and effective process management standard, so that organizations of all sizes, in all industries, and in all markets can benefit from a more efficient and effective open source supply chain.  &lt;/p&gt;



&lt;p&gt;The time and effort we put into documenting that our existing development processes comply with the OpenChain ISO 5230 standard will help strengthen global supply chain integrity, and showcases our commitment to supporting our members and all of our projects’ downstream adopters. &lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Supported by Leading Organizations Globally&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Before it became an official ISO/IEC standard in December 2020, the OpenChain initiative was the de facto standard for several years. The standard was developed based on the contributions of more than 100 project participants, and supported by organizations including Arm, BMW Car IT, Bosch, Cisco, Comcast, Ericsson, Facebook, Fujitsu, Google, Hitachi, Huawei, Microsoft, MOXA, OPPO, Panasonic, Qualcomm, Siemens, Sony, Toshiba, Toyota, and Uber. &lt;/p&gt;



&lt;p&gt;The breadth, depth, and diversity of organizations involved in developing the OpenChain ISO 5230 standard clearly demonstrate the importance with which the initiative is viewed across industries. The availability of the official, published standard is expected to increase conformance from hundreds of organizations to thousands. But to my knowledge, the Eclipse Foundation is the first open source foundation that has done the work necessary to document that all of our projects are developed under an OpenChain conformant process. This is an important milestone for both the Eclipse Foundation and for the OpenChain standard and its community. &lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Learn More and Get Involved&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Because the OpenChain ISO 5230 standard is open, everyone with an interest in the initiative can engage with the community, share their knowledge, and contribute to the future of the standard. &lt;/p&gt;



&lt;p&gt;Follow the links below to learn more:&lt;/p&gt;



&lt;ul&gt;&lt;li&gt;Review the &lt;a href=&quot;https://www.eclipse.org/projects/dev_process/&quot;&gt;Eclipse Foundation Development Process&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Get the &lt;a href=&quot;https://www.iso.org/standard/81039.html&quot;&gt;ISO/IEC 5230:2020 OpenChain Specification&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Read more about the &lt;a href=&quot;https://www.openchainproject.org/&quot;&gt;OpenChain Project and community&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
	<pubDate>Tue, 19 Oct 2021 13:46:08 +0000</pubDate>
</item>
<item>
	<title>Melanie Bats: Alice’s adventures in Sirius Web Land</title>
	<guid isPermaLink="true">http://localhost:4000/2021/10/11/econ21/</guid>
	<link>http://localhost:4000/2021/10/11/econ21/</link>
	<description>&lt;p&gt;Since my early childhood I have loved stories, listening to books read by my mum, then reading by myself comics or classical literature for school and now, as I dedicate not so much time to reading, mostly blog posts and news on the internet.
One of my favorite novels remains “Alice’s Adventures in Wonderland”.
&lt;img alt=&quot;Alice's Adventures in Wonderland&quot; src=&quot;http://melb.enix.org/img/econ21/alice.jpg&quot; width=&quot;200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A young girl named Alice falls through a rabbit hole into a fantastic world of weird creatures. She meets people, she experiences, she tastes, she has to make decisions, sometimes she’s scared, and the minute after she’s happy. This book is like a roller coaster full of events and emotions.&lt;/p&gt;

&lt;p&gt;When I think about our job at Obeo, when we have to create a tool dedicated to a specific domain for one of our customers, I feel like we are all small Alices experiencing the Sirius Land.
We start by meeting people, trying to understand their jobs, their needs, we make decisions about what concepts we will specify, how they will be represented… Sometimes it works “Yes! I did it!” and sometimes the user’s feedback is not so good and we rework the tool “Oh, no, try again ;(“…&lt;/p&gt;

&lt;p&gt;One year ago, we at Obeo released a fist version of the &lt;a href=&quot;https://www.eclipse.org/sirius/sirius-web.html&quot;&gt;Sirius Web&lt;/a&gt; project and I had this little Alice in mind…&lt;/p&gt;

&lt;p&gt;Alice was beginning to get very tired of creating DSL graphical editors and of having too many things to do: start Eclipse, describe her domain with Ecore, generate the EMF code, launch another Eclipse runtime, specify her graphical mappings with Sirius Desktop, test with another Eclipse runtime, package everything to an update site, send it to Bob so that he can install it, help Bob who can’t find how to install the modeler, reiterate from the beginning to update the tool according to Bob feedbacks and needs…&lt;/p&gt;

&lt;p&gt;“Oh dear! Would you tell me, please, which way I ought to go from here?” she asked,&lt;/p&gt;

&lt;p&gt;“That depends a good deal on where you want to get to,” said the Cat.&lt;/p&gt;

&lt;p&gt;Alice prayed for a framework to easily create and deploy her studios to the web!&lt;/p&gt;

&lt;p&gt;Curiouser and curiouser! This exists!&lt;/p&gt;

&lt;p&gt;I have a talk at EclipseCon 2021 to tell you about Alice in Sirius Web Land!
In this session, I will introduce and demonstrate:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;how to &lt;strong&gt;describe your domain&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;how to &lt;strong&gt;specify your graphical editor&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;how to &lt;strong&gt;deploy&lt;/strong&gt; your studio to your end-users
… everything &lt;strong&gt;from your browser&lt;/strong&gt;, &lt;strong&gt;thanks to Sirius Web&lt;/strong&gt;!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is not a dream, this is really happening!&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Sirius Web Domain and View definitions&quot; src=&quot;http://melb.enix.org/img/econ21/mm.gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I will demonstrate all examples using 100% open-source software. Come and join me! You have no excuse, &lt;a href=&quot;https://www.eclipsecon.org/2021/registration&quot;&gt;register at EclipseCon&lt;/a&gt;. As it is a virtual event you can attend from anywhere, even from Wonderland!&lt;/p&gt;</description>
	<pubDate>Mon, 11 Oct 2021 10:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Cloud DevTools: Cloud DevTools Community Update - October 2021</title>
	<guid isPermaLink="true">https://ecdtools.eclipse.org/resources/blogs/2021-10-08-community-update/</guid>
	<link>https://ecdtools.eclipse.org/resources/blogs/2021-10-08-community-update/</link>
	<description>In this post we talk about the latest happenings in the Cloud DevTools community. Included is information about our new website design, upcoming events, project updates, the Embedded SIG, our developer survey, and more.</description>
	<pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate>
	<author>webdev@eclipse-foundation.org (Christopher Guindon)</author>
</item>
<item>
	<title>Maximilian and Jonas: A hands-on tutorial for Eclipse GLSP</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=45117</guid>
	<link>https://eclipsesource.com/blogs/2021/10/05/a-hands-on-tutorial-for-eclipse-glsp/</link>
	<description>&lt;p&gt;Do you want to learn how to implement diagram editors using Eclipse GLSP? Then please read on. We have just published...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2021/10/05/a-hands-on-tutorial-for-eclipse-glsp/&quot; rel=&quot;nofollow&quot;&gt;A hands-on tutorial for Eclipse GLSP&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 05 Oct 2021 06:54:40 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: The Thrill of Conquest</title>
	<guid isPermaLink="false">https://medium.com/p/7cf1cd62258</guid>
	<link>https://donraab.medium.com/the-thrill-of-conquest-7cf1cd62258?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;A poem&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;Cadillac Mountain, Acadia National Park, Maine — Photo by Donald Raab&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*nrYHpxv1PooTOuZ9jP2dvw.jpeg&quot; /&gt;&lt;figcaption&gt;Cadillac Mountain, Acadia National Park, Maine — Photo by Donald Raab&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Background&lt;/h3&gt;&lt;p&gt;I wrote this poem in 1988 and it was published in my high school literary magazine.&lt;/p&gt;&lt;h3&gt;The Thrill of Conquest&lt;/h3&gt;&lt;p&gt;Snowflakes drop upon our brows,&lt;br /&gt;slush beneath our feet.&lt;br /&gt;The air around us freezes the tips of our gloves;&lt;br /&gt;Still, we are determined to conquer this last great mountain.&lt;br /&gt;Just one foot in front of the other,&lt;br /&gt;thinking thoughts of hot cocoa brewing on a sizzling stove.&lt;br /&gt;Keep moving, because surely if we stop,&lt;br /&gt;the end will consume us.&lt;br /&gt;Beneath our necks, winter’s chill makes its home.&lt;br /&gt;We cannot go on much longer.&lt;br /&gt;At long last! The apogee is in sight!&lt;br /&gt;Thank the Lord for small miracles.&lt;br /&gt;We reach the top, and slump to the ground in exhaustion.&lt;br /&gt;Our flag is set in the ground, claiming this mountain ours.&lt;br /&gt;All of a sudden,&lt;br /&gt;the wind carries the sound of a ghostly voice,&lt;br /&gt;“Children, dinner is ready.”&lt;br /&gt;Oh well, so much for another adventure.&lt;br /&gt;We jumps on our sleds,&lt;br /&gt;and slide down our hill into the backyard.&lt;/p&gt;&lt;p&gt;— Donald Raab&lt;/p&gt;&lt;p&gt;Thank you for reading! I took the pictures this past weekend on a trip to Maine. I hope you enjoy them.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;Sunset, Cadillac Mountain, Acadia National Park, Maine — Photo by Donald Raab&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*7acy94cVc6GvvOzd9hb-UA.jpeg&quot; /&gt;&lt;figcaption&gt;Sunset, Cadillac Mountain, Acadia National Park, Maine — Photo by Donald Raab&lt;/figcaption&gt;&lt;/figure&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=7cf1cd62258&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 30 Sep 2021 15:50:42 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Completed Kafka Connectivity</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2021-09-29-kafka-connectivity.html</guid>
	<link>https://www.eclipse.org/ditto/2021-09-29-kafka-connectivity.html</link>
	<description>&lt;h2 id=&quot;consuming-messages-from-apache-kafka-in-eclipse-ditto&quot;&gt;Consuming messages from Apache Kafka in Eclipse Ditto&lt;/h2&gt;

&lt;p&gt;Eclipse Ditto did support publishing events and messages to Apache Kafka for quite some time now.&lt;br /&gt;
The time has come to support consuming as well.&lt;/p&gt;

&lt;p&gt;A Kafka connection behaves slightly different from other consuming Connections in Ditto.&lt;br /&gt;
The following aspects are special:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-protocol-bindings-kafka2.html#quality-of-service&quot;&gt;Backpressure by using acknowledgements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-protocol-bindings-kafka2.html#backpressure-by-using-acknowledgements&quot;&gt;Preserve order of messages on redelivery due to failed acknowledgements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-protocol-bindings-kafka2.html#message-expiry&quot;&gt;Expiry of messages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;scalability&quot;&gt;Scalability&lt;/h3&gt;

&lt;p&gt;Kafka’s way of horizontal scaling is to use partitions.
The higher the load the more partitions should be configured.&lt;br /&gt;
On consumer side this means that a so-called consumer group can have as many consuming clients as number of partitions exist.&lt;br /&gt;
Each partition would then be consumed by one client.&lt;/p&gt;

&lt;p&gt;This perfectly matches with Ditto connections scaling, each Ditto connection builds such a consumer group.  &lt;br /&gt;
For a connection there are two ways of scaling:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clientCount&lt;/code&gt; on &lt;a href=&quot;https://www.eclipse.org/ditto/basic-connections.html#connection-model&quot;&gt;connection level&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;consumerCount&lt;/code&gt; on &lt;a href=&quot;https://www.eclipse.org/ditto/basic-connections.html#sources&quot;&gt;source level&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A connection client bundles all consumers for all sources and all publishers for all targets.
It is guaranteed that for a single connection only one client can be instantiated per instance of the connectivity microservice.&lt;br /&gt;
This way Ditto provides horizontal scaling.&lt;/p&gt;

&lt;p&gt;Therefore, the &lt;code class=&quot;highlighter-rouge&quot;&gt;clientCount&lt;/code&gt; should never be configured higher than the number of available connectivity instances.&lt;/p&gt;

&lt;p&gt;If the connectivity instance is not fully used by a single connection client, the &lt;code class=&quot;highlighter-rouge&quot;&gt;consumerCount&lt;/code&gt; can be used to scale a 
connection’s consumers vertically.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;consumerCount&lt;/code&gt; of a source indicates how many consumers should be started for a single connection client for this source.
Each consumer is a separate consuming client in the consumer group of the connection.&lt;/p&gt;

&lt;p&gt;This means that the number of partition should be greater or equal than &lt;code class=&quot;highlighter-rouge&quot;&gt;clientCount&lt;/code&gt; multiplied by the highest 
&lt;code class=&quot;highlighter-rouge&quot;&gt;consumerCount&lt;/code&gt; of a source.&lt;/p&gt;

&lt;h3 id=&quot;backpressure-and-quality-of-service&quot;&gt;Backpressure and Quality of Service&lt;/h3&gt;

&lt;p&gt;Usually there is an application connected to Ditto which is consuming either messages or events of devices connected to Ditto.&lt;br /&gt;
These messages and events can now be issued by devices via Kafka.&lt;br /&gt;
What happens now when the connected application temporarily can’t process the messages emitted by Ditto in the rate the 
devices publish their messages via Kafka into Ditto?&lt;br /&gt;
The answer is: “It depends.”&lt;/p&gt;

&lt;p&gt;There are two steps of increasing delivery guarantee for messages to the connected application.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Make use of &lt;a href=&quot;https://www.eclipse.org/ditto/basic-connections.html#source-acknowledgement-requests&quot;&gt;acknowledgements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Configure the &lt;code class=&quot;highlighter-rouge&quot;&gt;qos&lt;/code&gt; for the &lt;a href=&quot;https://www.eclipse.org/ditto/basic-connections.html#sources&quot;&gt;source&lt;/a&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first will introduce backpressure from the consuming application to the Kafka consumer in Ditto.&lt;br /&gt;
This means that the consumer will automatically slow down consuming messages when the performance of the connected 
application slows down.
This way the application has time to scale up, while the messages are buffered in Kafka.&lt;/p&gt;

&lt;p&gt;The second step can be used when it’s necessary to ensure that the application not just received but successfully 
processed the message. If the message could not be processed successfully or if the acknowledgement didn’t arrive in time, 
the Kafka consumer will restart consuming messages from the last successfully committed offset.&lt;/p&gt;

&lt;h3 id=&quot;expiry&quot;&gt;Expiry&lt;/h3&gt;

&lt;p&gt;Now that we know about backpressure we also know, that messages could remain in Kafka for some time.&lt;br /&gt;
The time can be limited by Kafka’s retention time, but this would be applied to all messages in the same way.
What if some messages become invalid after some time, but others won’t?&lt;/p&gt;

&lt;p&gt;Ditto provides an &lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-protocol-bindings-kafka2.html#message-expiry&quot;&gt;expiry of messages on a per-message level&lt;/a&gt;.
That way Ditto filters such expired messages but still processes all others.&lt;/p&gt;

&lt;h2 id=&quot;we-embrace-your-feedback&quot;&gt;We embrace your feedback&lt;/h2&gt;

&lt;p&gt;Did you recognize a possible match of Ditto for some of your usecases?
Do you miss something in this new feature?&lt;br /&gt;
We would love to get your &lt;a href=&quot;https://www.eclipse.org/ditto/feedback.html&quot;&gt;feedback&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Life in a Beautiful Day</title>
	<guid isPermaLink="false">https://medium.com/p/bfe4534b12f0</guid>
	<link>https://donraab.medium.com/life-in-a-beautiful-day-bfe4534b12f0?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;What my cousin Chris taught me about living&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*csQWTBdYonvMYINISp42rA.jpeg&quot; /&gt;&lt;figcaption&gt;My cousin Chris on the London Eye, 2004&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;It’s a Beautiful Day&lt;/h3&gt;&lt;p&gt;I hope this story reminds you of one positive thing, every single day.&lt;/p&gt;&lt;p&gt;My cousin Chris passed away on September 28, 2012. This is the first time I am writing about him. I don’t really know what to write to be honest. Chris was less a cousin, and more of a brother to me. A brother from another mother he would say.&lt;/p&gt;&lt;p&gt;Chris died a year before my wife was diagnosed with Leukemia. He was only 42 years old. My memories of him and the life he lived brought me comfort and strength in the hardest times, as my wife fought her war against AML.&lt;/p&gt;&lt;p&gt;Chris loved the U2 song “Beautiful Day.” Every time I saw him, he would happily and emphatically say these words to me.&lt;/p&gt;&lt;blockquote&gt;It’s a Beautiful Day&lt;/blockquote&gt;&lt;p&gt;I love the song, and think fondly of Chris every time I hear it. It will forever be his song. I enjoy listening and singing along to it and smiling as I think of him.&lt;/p&gt;&lt;p&gt;Surprisingly, I have never seen the video of the song until today. I just watched the official music video for the song for the very first time. I did not know there might be more to the song than the amazing melody, and motivational lyrics. I think there will be a permanent palm print on my forehead after today.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;The reason I say this is because Chris was an airline attendant for most of his career.&lt;/strong&gt;&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/b6374d90bb052db39b4b9250a8ef1a46/href&quot;&gt;https://medium.com/media/b6374d90bb052db39b4b9250a8ef1a46/href&lt;/a&gt;&lt;p&gt;After watching this video, the song has an even stronger bond to Chris for me. I know Chris is smiling down at me as I learned this today.&lt;/p&gt;&lt;h3&gt;Live a Beautiful Life every single Beautiful Day&lt;/h3&gt;&lt;p&gt;Chris would always make me smile. Even during the darkest times of his short life, through all the battles he fought, Chris lived filled with happiness, love and with his motto ready to be shared with all.&lt;/p&gt;&lt;p&gt;Chris saw more of the world than most of us probably ever will. He came to visit my family when we lived in London in 2004, which is when I took the two pictures I have included in this post. Chris knew how to make the most out of a one or two day layover in a city. He knew how to live a beautiful life in a single day.&lt;/p&gt;&lt;p&gt;The last time I saw Chris was in NYC, the summer that he passed away. I have the last conversation I had with Chris saved on my phone from nine years ago. I was hoping to arrange a visit with him in Houston where he lived. He passed away before I got the chance. Our last words are a constant reminder to me, to live my life each day as a Beautiful Day.&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;Chris:&lt;/strong&gt; Thank you buddy… I promise I will let u know!!! Love you&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;Me:&lt;/strong&gt; Love U2… The band is great as well. ;)&lt;/blockquote&gt;&lt;p&gt;If there is a heaven… I’m certain Chris is there enjoying every beautiful day. Chris was an angel on earth, possibly just dropping by for a quick layover to make sure we all learn how to live life in the moments we have. His life was a gift, and I am lucky to have been a part of it.&lt;/p&gt;&lt;p&gt;Wherever you are Chris, I love you, and I miss you.&lt;/p&gt;&lt;blockquote&gt;It’s a Beautiful Day&lt;/blockquote&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*rpq_vasvVMqGqOiwZZPFmw.jpeg&quot; /&gt;&lt;figcaption&gt;My cousin Chris, enjoying a Beautiful Day&lt;/figcaption&gt;&lt;/figure&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=bfe4534b12f0&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 28 Sep 2021 16:54:35 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Eclipse Theia Blueprint Beta 2 is released</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=45147</guid>
	<link>https://eclipsesource.com/blogs/2021/09/27/eclipse-theia-blueprint-beta-2-is-released/</link>
	<description>&lt;p&gt;We are happy to announce the beta 2 release of Eclipse Theia Blueprint. Theia Blueprint is a template application allowing you...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2021/09/27/eclipse-theia-blueprint-beta-2-is-released/&quot; rel=&quot;nofollow&quot;&gt;Eclipse Theia Blueprint Beta 2 is released&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Mon, 27 Sep 2021 10:59:26 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Announcing Eclipse Ditto Release 2.1.0</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2021-09-27-release-announcement-210.html</guid>
	<link>https://www.eclipse.org/ditto/2021-09-27-release-announcement-210.html</link>
	<description>&lt;p&gt;The Eclipse Ditto teams announces availability of Eclipse Ditto &lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/2.1.0&quot;&gt;2.1.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As the first minor of the 2.x series it adds a lot of new features, the highlight surely being the full integration of
&lt;a href=&quot;https://www.eclipse.org/ditto/connectivity-protocol-bindings-kafka2.html&quot;&gt;Apache Kafka as Ditto managed connection&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: &lt;a href=&quot;https://iot.eclipse.org/adopters/#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From our various &lt;a href=&quot;https://www.eclipse.org/ditto/feedback.html&quot;&gt;feedback channels&lt;/a&gt; we however know of more adoption.&lt;br /&gt;
If you are making use of Eclipse Ditto, it would be great to show this by adding your company name to that list of 
known adopters.&lt;br /&gt;
In the end, that’s one main way of measuring the success of the project.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 2.1.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Support consuming messages from Apache Kafka -&amp;gt; completing the Apache Kafka integration as fully supported Ditto managed connection type&lt;/li&gt;
  &lt;li&gt;Conditional requests (updates + retrievals)&lt;/li&gt;
  &lt;li&gt;Enrichment of extra fields for ThingDeleted events&lt;/li&gt;
  &lt;li&gt;Support for using (HTTP) URLs in Thing and Feature “definition” fields, e.g. linking to WoT (Web of Things) Thing Models&lt;/li&gt;
  &lt;li&gt;HMAC based authentication for Ditto managed connections&lt;/li&gt;
  &lt;li&gt;SASL authentication for Azure IoT Hub&lt;/li&gt;
  &lt;li&gt;Publishing of connection opened/closed announcements&lt;/li&gt;
  &lt;li&gt;Addition of new “misconfigured” status category for managed connections indicating that e.g. credentials are wrong or connection to endpoint could not be established to to configuration problems&lt;/li&gt;
  &lt;li&gt;Support “at least once” delivery for policy subject expiry announcements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix “search-persisted” acknowledgement not working for thing deletion&lt;/li&gt;
  &lt;li&gt;Fix reconnect loop to MQTT brokers when using separate MQTT publisher client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional work is also included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Support for tracing reporting traces to an “Open Telemetry” endpoint&lt;/li&gt;
  &lt;li&gt;Improving cluster failover and coordinated shutdown + rolling updates&lt;/li&gt;
  &lt;li&gt;Logging improvements, e.g. configuring a logstash server to send logs to or more options to configure a logging file appender&lt;/li&gt;
  &lt;li&gt;Improving background deletion of dangling DB journal entries / snapshots based on the current MongoDB load&lt;/li&gt;
  &lt;li&gt;Improving search update by applying “delta updates” saving lots of bandwidth to MongoDB&lt;/li&gt;
  &lt;li&gt;Reducing cluster communication for search updates using a smart cache&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_210.html&quot;&gt;2.1.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Into the Unknown</title>
	<guid isPermaLink="false">https://medium.com/p/2a5dc5bfcfb0</guid>
	<link>https://donraab.medium.com/into-the-unknown-2a5dc5bfcfb0?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;A blog about a lesser known Eclipse Collections method&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*L1ZV2h8-v__qkDgf&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@mariodobelmann?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Mario Dobelmann&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;What am I getting into now?&lt;/h3&gt;&lt;p&gt;Eclipse Collections has a method named &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/10.4.0/org/eclipse/collections/api/RichIterable.html#into(R)&quot;&gt;into&lt;/a&gt; that was added in the 8.0 release. The signature of into is defined as follows on the RichIterable interface.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*f93QwnmT2kAOBmTqhwZL2w.png&quot; /&gt;&lt;figcaption&gt;The method into on RichIterable&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;This method can be used to transfer the contents of any RichIterable “into” a target collection. The following examples are collections that are “unknown” as Eclipse Collections converter methods, but can be used just fine with into.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void intoTheUnknown()&lt;br /&gt;{&lt;br /&gt;    var integers = Interval.&lt;em&gt;oneTo&lt;/em&gt;(10);&lt;br /&gt;&lt;br /&gt;    var into1 = integers.into(new CopyOnWriteArrayList&amp;lt;&amp;gt;());&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(integers, into1);&lt;br /&gt;&lt;br /&gt;    var into2 = integers.into(new CopyOnWriteArraySet&amp;lt;&amp;gt;());&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(integers.toSet(), into2);&lt;br /&gt;&lt;br /&gt;    var into3 = integers.into(new ArrayDeque&amp;lt;&amp;gt;());&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(integers.toBag(), &lt;br /&gt;            Bags.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.withAll(into3));&lt;br /&gt;&lt;br /&gt;    var into4 = integers.into(new LinkedList&amp;lt;&amp;gt;());&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(integers, into4);&lt;br /&gt;&lt;br /&gt;    var into5 = integers.into(new Stack&amp;lt;&amp;gt;());&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(integers, into5);&lt;br /&gt;&lt;br /&gt;    var checkedList = &lt;br /&gt;        Collections.&lt;em&gt;checkedList&lt;/em&gt;(new ArrayList&amp;lt;&amp;gt;(), Integer.class);&lt;br /&gt;    var into6 = integers.into(checkedList);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(integers, into6);&lt;br /&gt;&lt;br /&gt;    var checkedSet = &lt;br /&gt;        Collections.&lt;em&gt;checkedSet&lt;/em&gt;(new HashSet&amp;lt;&amp;gt;(), Integer.class);&lt;br /&gt;    var into7 = integers.into(checkedSet);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(integers.toSet(), into7);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;The into method is also useful when you want to drain multiple source collections into the same target collection.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void intoList()&lt;br /&gt;{&lt;br /&gt;    var target = Interval.&lt;em&gt;oneTo&lt;/em&gt;(3).into(new ArrayList&amp;lt;&amp;gt;());&lt;br /&gt;    Interval.&lt;em&gt;fromTo&lt;/em&gt;(4,6).into(target);&lt;br /&gt;    Interval.&lt;em&gt;fromTo&lt;/em&gt;(7,10).into(target);&lt;br /&gt;    Assertions.&lt;em&gt;assertEquals&lt;/em&gt;(Interval.&lt;em&gt;oneTo&lt;/em&gt;(10), target);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;That’s it. That’s the blog. I hope you enjoyed this short technical Java w/ Eclipse Collections blog.&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=2a5dc5bfcfb0&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sat, 25 Sep 2021 21:19:35 +0000</pubDate>
</item>

</channel>
</rss>
